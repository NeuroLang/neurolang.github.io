.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_load_destrieux_queries.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_load_destrieux_queries.py:


Loading and Querying the Destrieux et al. Atlas
========================================================================


Uploading the Destrieux regions NeuroLang and
executing a simple query.


.. code-block:: default


    from matplotlib import pyplot as plt
    import nibabel as nib
    from nilearn import datasets, plotting
    from neurolang.frontend import NeurolangPDL









Initialise the NeuroLang probabilistic engine.


.. code-block:: default


    nl = NeurolangPDL()









Load the Destrieux example from nilearn as a fact list


.. code-block:: default

    atlas_destrieux = datasets.fetch_atlas_destrieux_2009()
    atlas_labels = {
        label: str(name.decode('utf8'))
        for label, name in atlas_destrieux['labels']
    }


    nl.add_atlas_set('destrieux', atlas_labels, nib.load(atlas_destrieux['maps']))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/dwasserm/anaconda/envs/root3.8-neurosynth/lib/python3.8/site-packages/numpy/lib/npyio.py:2349: VisibleDeprecationWarning: Reading unicode strings without specifying the encoding argument is deprecated. Set the encoding, use None for the system default.
      output = genfromtxt(fname, **kwargs)

    destrieux: typing.AbstractSet[typing.Tuple[str, neurolang.regions.ExplicitVBR]] = ('Background', Region(VBR= affine:[[   2.    0.    0.  -76.]
     [   0.    2.    0. -109.]
     [   0.    0.    2.  -64.]
     [   0.    0.    0.    1.]], voxels:[[ 0  0  0]
     [ 0  0  1]
     [ 0  0  2]
     ...
     [75 92 73]
     [75 92 74]
     [75 92 75]])) ...



Add utility functions to separate hemispheric regions


.. code-block:: default


    @nl.add_symbol
    def left_hemisphere_name(x: str) -> bool:
        return x.startswith('L ')


    @nl.add_symbol
    def right_hemisphere_name(x: str) -> bool:
        return x.startswith('R ')









Query all left hemisphere regions superior to the temporal superior sulucs
and anterior to the central sulcus


.. code-block:: default


    with nl.environment as e:
        # The set `superior_sts_l` is composed by every
        # name `name` and region `r` where
        e.superior_sts_l[e.name, e.r] = (
            # the every region `name`, `r` is in Destrieux at al's atlas
            e.destrieux(e.name, e.r) &
            # the `name` corresponds to a left hemisphere name
            e.left_hemisphere_name(e.name) &
            # the region `r` is anatomically superior to the
            # left superior temporal and anterior to the central sulci
            e.anatomical_superior_of(e.r, e.superior_sts_l) &
            e.anatomical_anterior_of(e.r, e.central_l) &
            # where `superior_sts_l` and `central_l` are identified
            # by their names in Destrieux et al's atlas.
            e.destrieux('L S_temporal_sup', e.superior_sts_l) &
            e.destrieux('L S_central', e.central_l)
        )

        result = nl.query((e.name, e.r), e.superior_sts_l(e.name, e.r))









Visualise results


.. code-block:: default


    subplots = plt.subplots(
        nrows=len(result), ncols=1,
        figsize=(10, 5 * len(result))
    )[1]
    for (r, subplot) in zip(result, subplots):
        name, region = r
        subplot.set_title(name)
        plotting.plot_roi(region.spatial_image(), title=name, axes=subplot)



.. image:: /auto_examples/images/sphx_glr_plot_load_destrieux_queries_001.png
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.470 seconds)


.. _sphx_glr_download_auto_examples_plot_load_destrieux_queries.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_load_destrieux_queries.py <plot_load_destrieux_queries.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_load_destrieux_queries.ipynb <plot_load_destrieux_queries.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
