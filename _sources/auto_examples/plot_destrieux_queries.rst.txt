.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_destrieux_queries.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_plot_destrieux_queries.py:


NeuroLang Query Example based on the Destrieux Atlas
====================================================


Uploading the Destrieux left sulci into NeuroLang and
executing some simple queries.


.. code-block:: default

    from nilearn import datasets
    from nilearn import plotting
    import nibabel as nib

    from neurolang import frontend as fe








Load the Destrieux example from nilearn
---------------------------------------


.. code-block:: default


    destrieux_dataset = datasets.fetch_atlas_destrieux_2009()
    destrieux_map = nib.load(destrieux_dataset['maps'])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/dwasserm/anaconda/envs/root3.8-neurosynth/lib/python3.8/site-packages/numpy/lib/npyio.py:2372: VisibleDeprecationWarning: Reading unicode strings without specifying the encoding argument is deprecated. Set the encoding, use None for the system default.
      output = genfromtxt(fname, **kwargs)




Input the left sulci into the NeuroLang interface
-------------------------------------------------


.. code-block:: default


    nl = fe.RegionFrontend()
    for label_number, name in destrieux_dataset['labels']:
        name = name.decode()
        if (
            not name.startswith('L ') or
            not ('S_' in name or 'Lat_Fis' in name or 'Pole' in name)
        ):
            continue

        # Create a region object
        region = nl.create_region(destrieux_map, label=label_number)

        # Fine tune the symbol name
        name = 'L_' + name[2:].replace('-', '_')
        nl.add_region(region, name=name.lower())



.. rst-class:: sphx-glr-script-out


.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/dwasserm/anaconda/envs/root3.8-neurosynth/lib/python3.8/site-packages/sphinx_gallery/gen_rst.py", line 460, in _memory_usage
        out = func()
      File "/Users/dwasserm/anaconda/envs/root3.8-neurosynth/lib/python3.8/site-packages/sphinx_gallery/gen_rst.py", line 442, in __call__
        exec(self.code, self.fake_main.__dict__)
      File "/Users/dwasserm/sources/NeuroLang/examples/plot_destrieux_queries.py", line 27, in <module>
        nl = fe.RegionFrontend()
    AttributeError: module 'neurolang.frontend' has no attribute 'RegionFrontend'




Plot one of the symbols


.. code-block:: default


    plotting.plot_roi(nl.symbols.l_s_central.value.spatial_image())



Create and run a simple query
-----------------------------


.. code-block:: default


    x = nl.new_region_symbol('x')
    q = nl.query(x, nl.symbols.anatomical_anterior_of(x, nl.symbols.l_s_central))
    print(q)



.. code-block:: default


    res = q.do()
    for r in res:
        plotting.plot_roi(r.value.spatial_image(), title=r.symbol_name)



Create and run query which is a bit more complex
------------------------------------------------


.. code-block:: default

    x = nl.new_region_symbol('x')
    q = nl.query(
        x,
        nl.symbols.anatomical_anterior_of(x, nl.symbols.l_s_central) &
        nl.symbols.anatomical_superior_of(x, nl.symbols.l_s_temporal_sup)
    )
    print(q)



.. code-block:: default


    res = q.do()
    for r in res:
        plotting.plot_roi(r.value.spatial_image(), title=r.symbol_name)



Create and run query with existential quantifiers and negation
--------------------------------------------------------------


.. code-block:: default

    x = nl.new_region_symbol('x')
    y = nl.new_region_symbol('y')
    q = nl.query(
        x,
        nl.symbols.anatomical_anterior_of(x, nl.symbols.l_s_central) &
        ~nl.exists(
            y,
            nl.symbols.anatomical_anterior_of(y, nl.symbols.l_s_central) &
            nl.symbols.anatomical_anterior_of(x, y)
        )
    )
    print(q)



.. code-block:: default


    res = q.do()
    for r in res:
        plotting.plot_roi(r.value.spatial_image(), title=r.symbol_name)



Use the set of results from a query in a different one
------------------------------------------------------


.. code-block:: default

    x = nl.new_region_symbol('x')
    temporal_lobe_query = nl.query(
        x,
        nl.symbols.anatomical_inferior_of(x, nl.symbols.l_s_parieto_occipital) &
        nl.symbols.anatomical_anterior_of(x, nl.symbols.l_s_calcarine) &
        nl.symbols.anatomical_posterior_of(x, nl.symbols.l_lat_fis_ant_vertical)
    )
    temporal_lobe = q.do(name='temporal_lobe')
    print(temporal_lobe)



.. code-block:: default


    q = nl.query(
        x,
        nl.symbols.isin(x, temporal_lobe) &
        ~nl.symbols.anatomical_inferior_of(x, nl.symbols.l_s_temporal_inf)
    )

    print(q)



.. code-block:: default


    res = q.do()
    for r in res:
        plotting.plot_roi(r.value.spatial_image(), title=r.symbol_name)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.047 seconds)


.. _sphx_glr_download_auto_examples_plot_destrieux_queries.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_destrieux_queries.py <plot_destrieux_queries.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_destrieux_queries.ipynb <plot_destrieux_queries.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
