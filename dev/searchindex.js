Search.setIndex({"docnames": ["api", "authors", "auto_examples/index", "auto_examples/plot_cbma_spatial_prior", "auto_examples/plot_load_destrieux_datalog_ir", "auto_examples/plot_load_destrieux_left_hemisphere_gyri", "auto_examples/plot_neurosynth_implementation", "auto_examples/plot_sulcal_queries", "auto_examples/sg_execution_times", "gen_api/modules", "gen_api/neurolang", "gen_api/neurolang.CD_relations", "gen_api/neurolang.NeurolangDL", "gen_api/neurolang.NeurolangPDL", "gen_api/neurolang.aabb_tree", "gen_api/neurolang.commands", "gen_api/neurolang.config", "gen_api/neurolang.datalog", "gen_api/neurolang.datalog.aggregation", "gen_api/neurolang.datalog.basic_representation", "gen_api/neurolang.datalog.chase", "gen_api/neurolang.datalog.chase.general", "gen_api/neurolang.datalog.chase.mgu", "gen_api/neurolang.datalog.chase.negation", "gen_api/neurolang.datalog.chase.relational_algebra", "gen_api/neurolang.datalog.constraints_representation", "gen_api/neurolang.datalog.exceptions", "gen_api/neurolang.datalog.expression_processing", "gen_api/neurolang.datalog.expressions", "gen_api/neurolang.datalog.instance", "gen_api/neurolang.datalog.magic_sets", "gen_api/neurolang.datalog.negation", "gen_api/neurolang.datalog.ontologies_parser", "gen_api/neurolang.datalog.ontologies_rewriter", "gen_api/neurolang.datalog.translate_to_named_ra", "gen_api/neurolang.datalog.wrapped_collections", "gen_api/neurolang.datalog_chase", "gen_api/neurolang.exceptions", "gen_api/neurolang.expression_pattern_matching", "gen_api/neurolang.expression_walker", "gen_api/neurolang.expressions", "gen_api/neurolang.frontend", "gen_api/neurolang.frontend.ast", "gen_api/neurolang.frontend.ast_tatsu", "gen_api/neurolang.frontend.datalog", "gen_api/neurolang.frontend.datalog.natural_syntax", "gen_api/neurolang.frontend.datalog.standard_syntax", "gen_api/neurolang.frontend.datalog.sugar", "gen_api/neurolang.frontend.datalog.sugar.spatial", "gen_api/neurolang.frontend.datalog.syntax_preprocessing", "gen_api/neurolang.frontend.deterministic_frontend", "gen_api/neurolang.frontend.drs", "gen_api/neurolang.frontend.drs.chart_parser", "gen_api/neurolang.frontend.drs.drs_builder", "gen_api/neurolang.frontend.drs.english_grammar", "gen_api/neurolang.frontend.drs.exceptions", "gen_api/neurolang.frontend.drs.translate_to_dl", "gen_api/neurolang.frontend.frontend_extensions", "gen_api/neurolang.frontend.neurolang", "gen_api/neurolang.frontend.neurosynth_utils", "gen_api/neurolang.frontend.probabilistic_frontend", "gen_api/neurolang.frontend.query_resolution", "gen_api/neurolang.frontend.query_resolution_datalog", "gen_api/neurolang.frontend.query_resolution_expressions", "gen_api/neurolang.interval_algebra", "gen_api/neurolang.logic", "gen_api/neurolang.logic.expression_processing", "gen_api/neurolang.logic.horn_clauses", "gen_api/neurolang.logic.transformations", "gen_api/neurolang.logic.unification", "gen_api/neurolang.neurolang", "gen_api/neurolang.neurolang_compiler", "gen_api/neurolang.perior_tree", "gen_api/neurolang.probabilistic", "gen_api/neurolang.probabilistic.containment", "gen_api/neurolang.probabilistic.cplogic", "gen_api/neurolang.probabilistic.cplogic.cplogic_to_gm", "gen_api/neurolang.probabilistic.cplogic.gm_provenance_solver", "gen_api/neurolang.probabilistic.cplogic.grounding", "gen_api/neurolang.probabilistic.cplogic.problog_solver", "gen_api/neurolang.probabilistic.cplogic.program", "gen_api/neurolang.probabilistic.cplogic.testing", "gen_api/neurolang.probabilistic.dalvi_suciu_lift", "gen_api/neurolang.probabilistic.distributions", "gen_api/neurolang.probabilistic.exceptions", "gen_api/neurolang.probabilistic.expression_processing", "gen_api/neurolang.probabilistic.expressions", "gen_api/neurolang.probabilistic.magic_sets_processing", "gen_api/neurolang.probabilistic.ppdl", "gen_api/neurolang.probabilistic.probabilistic_ra_utils", "gen_api/neurolang.probabilistic.probabilistic_semiring_solver", "gen_api/neurolang.probabilistic.query_resolution", "gen_api/neurolang.probabilistic.ranking", "gen_api/neurolang.probabilistic.shattering", "gen_api/neurolang.probabilistic.small_dichotomy_theorem_based_solver", "gen_api/neurolang.probabilistic.stratification", "gen_api/neurolang.probabilistic.transforms", "gen_api/neurolang.probabilistic.weighted_model_counting", "gen_api/neurolang.region_solver", "gen_api/neurolang.regions", "gen_api/neurolang.relational_algebra", "gen_api/neurolang.relational_algebra.optimisers", "gen_api/neurolang.relational_algebra.relational_algebra", "gen_api/neurolang.relational_algebra_provenance", "gen_api/neurolang.solver", "gen_api/neurolang.type_system", "gen_api/neurolang.typed_symbol_table", "gen_api/neurolang.utils", "gen_api/neurolang.utils.data_manipulation", "gen_api/neurolang.utils.orderedset", "gen_api/neurolang.utils.relational_algebra_set", "gen_api/neurolang.utils.relational_algebra_set.abstract", "gen_api/neurolang.utils.relational_algebra_set.dask_helpers", "gen_api/neurolang.utils.relational_algebra_set.dask_sql", "gen_api/neurolang.utils.relational_algebra_set.pandas", "gen_api/neurolang.utils.server", "gen_api/neurolang.utils.server.app", "gen_api/neurolang.utils.server.engines", "gen_api/neurolang.utils.server.queries", "gen_api/neurolang.utils.server.responses", "gen_api/neurolang.utils.testing", "gen_api/neurolang.utils.testing.logic", "gen_api/neurolang.utils.various", "index", "install", "tutorial", "tutorial_logic_programming"], "filenames": ["api.rst", "authors.rst", "auto_examples/index.rst", "auto_examples/plot_cbma_spatial_prior.rst", "auto_examples/plot_load_destrieux_datalog_ir.rst", "auto_examples/plot_load_destrieux_left_hemisphere_gyri.rst", "auto_examples/plot_neurosynth_implementation.rst", "auto_examples/plot_sulcal_queries.rst", "auto_examples/sg_execution_times.rst", "gen_api/modules.rst", "gen_api/neurolang.rst", "gen_api/neurolang.CD_relations.rst", "gen_api/neurolang.NeurolangDL.rst", "gen_api/neurolang.NeurolangPDL.rst", "gen_api/neurolang.aabb_tree.rst", "gen_api/neurolang.commands.rst", "gen_api/neurolang.config.rst", "gen_api/neurolang.datalog.rst", "gen_api/neurolang.datalog.aggregation.rst", "gen_api/neurolang.datalog.basic_representation.rst", "gen_api/neurolang.datalog.chase.rst", "gen_api/neurolang.datalog.chase.general.rst", "gen_api/neurolang.datalog.chase.mgu.rst", "gen_api/neurolang.datalog.chase.negation.rst", "gen_api/neurolang.datalog.chase.relational_algebra.rst", "gen_api/neurolang.datalog.constraints_representation.rst", "gen_api/neurolang.datalog.exceptions.rst", "gen_api/neurolang.datalog.expression_processing.rst", "gen_api/neurolang.datalog.expressions.rst", "gen_api/neurolang.datalog.instance.rst", "gen_api/neurolang.datalog.magic_sets.rst", "gen_api/neurolang.datalog.negation.rst", "gen_api/neurolang.datalog.ontologies_parser.rst", "gen_api/neurolang.datalog.ontologies_rewriter.rst", "gen_api/neurolang.datalog.translate_to_named_ra.rst", "gen_api/neurolang.datalog.wrapped_collections.rst", "gen_api/neurolang.datalog_chase.rst", "gen_api/neurolang.exceptions.rst", "gen_api/neurolang.expression_pattern_matching.rst", "gen_api/neurolang.expression_walker.rst", "gen_api/neurolang.expressions.rst", "gen_api/neurolang.frontend.rst", "gen_api/neurolang.frontend.ast.rst", "gen_api/neurolang.frontend.ast_tatsu.rst", "gen_api/neurolang.frontend.datalog.rst", "gen_api/neurolang.frontend.datalog.natural_syntax.rst", "gen_api/neurolang.frontend.datalog.standard_syntax.rst", "gen_api/neurolang.frontend.datalog.sugar.rst", "gen_api/neurolang.frontend.datalog.sugar.spatial.rst", "gen_api/neurolang.frontend.datalog.syntax_preprocessing.rst", "gen_api/neurolang.frontend.deterministic_frontend.rst", "gen_api/neurolang.frontend.drs.rst", "gen_api/neurolang.frontend.drs.chart_parser.rst", "gen_api/neurolang.frontend.drs.drs_builder.rst", "gen_api/neurolang.frontend.drs.english_grammar.rst", "gen_api/neurolang.frontend.drs.exceptions.rst", "gen_api/neurolang.frontend.drs.translate_to_dl.rst", "gen_api/neurolang.frontend.frontend_extensions.rst", "gen_api/neurolang.frontend.neurolang.rst", "gen_api/neurolang.frontend.neurosynth_utils.rst", "gen_api/neurolang.frontend.probabilistic_frontend.rst", "gen_api/neurolang.frontend.query_resolution.rst", "gen_api/neurolang.frontend.query_resolution_datalog.rst", "gen_api/neurolang.frontend.query_resolution_expressions.rst", "gen_api/neurolang.interval_algebra.rst", "gen_api/neurolang.logic.rst", "gen_api/neurolang.logic.expression_processing.rst", "gen_api/neurolang.logic.horn_clauses.rst", "gen_api/neurolang.logic.transformations.rst", "gen_api/neurolang.logic.unification.rst", "gen_api/neurolang.neurolang.rst", "gen_api/neurolang.neurolang_compiler.rst", "gen_api/neurolang.perior_tree.rst", "gen_api/neurolang.probabilistic.rst", "gen_api/neurolang.probabilistic.containment.rst", "gen_api/neurolang.probabilistic.cplogic.rst", "gen_api/neurolang.probabilistic.cplogic.cplogic_to_gm.rst", "gen_api/neurolang.probabilistic.cplogic.gm_provenance_solver.rst", "gen_api/neurolang.probabilistic.cplogic.grounding.rst", "gen_api/neurolang.probabilistic.cplogic.problog_solver.rst", "gen_api/neurolang.probabilistic.cplogic.program.rst", "gen_api/neurolang.probabilistic.cplogic.testing.rst", "gen_api/neurolang.probabilistic.dalvi_suciu_lift.rst", "gen_api/neurolang.probabilistic.distributions.rst", "gen_api/neurolang.probabilistic.exceptions.rst", "gen_api/neurolang.probabilistic.expression_processing.rst", "gen_api/neurolang.probabilistic.expressions.rst", "gen_api/neurolang.probabilistic.magic_sets_processing.rst", "gen_api/neurolang.probabilistic.ppdl.rst", "gen_api/neurolang.probabilistic.probabilistic_ra_utils.rst", "gen_api/neurolang.probabilistic.probabilistic_semiring_solver.rst", "gen_api/neurolang.probabilistic.query_resolution.rst", "gen_api/neurolang.probabilistic.ranking.rst", "gen_api/neurolang.probabilistic.shattering.rst", "gen_api/neurolang.probabilistic.small_dichotomy_theorem_based_solver.rst", "gen_api/neurolang.probabilistic.stratification.rst", "gen_api/neurolang.probabilistic.transforms.rst", "gen_api/neurolang.probabilistic.weighted_model_counting.rst", "gen_api/neurolang.region_solver.rst", "gen_api/neurolang.regions.rst", "gen_api/neurolang.relational_algebra.rst", "gen_api/neurolang.relational_algebra.optimisers.rst", "gen_api/neurolang.relational_algebra.relational_algebra.rst", "gen_api/neurolang.relational_algebra_provenance.rst", "gen_api/neurolang.solver.rst", "gen_api/neurolang.type_system.rst", "gen_api/neurolang.typed_symbol_table.rst", "gen_api/neurolang.utils.rst", "gen_api/neurolang.utils.data_manipulation.rst", "gen_api/neurolang.utils.orderedset.rst", "gen_api/neurolang.utils.relational_algebra_set.rst", "gen_api/neurolang.utils.relational_algebra_set.abstract.rst", "gen_api/neurolang.utils.relational_algebra_set.dask_helpers.rst", "gen_api/neurolang.utils.relational_algebra_set.dask_sql.rst", "gen_api/neurolang.utils.relational_algebra_set.pandas.rst", "gen_api/neurolang.utils.server.rst", "gen_api/neurolang.utils.server.app.rst", "gen_api/neurolang.utils.server.engines.rst", "gen_api/neurolang.utils.server.queries.rst", "gen_api/neurolang.utils.server.responses.rst", "gen_api/neurolang.utils.testing.rst", "gen_api/neurolang.utils.testing.logic.rst", "gen_api/neurolang.utils.various.rst", "index.rst", "install.rst", "tutorial.rst", "tutorial_logic_programming.rst"], "titles": ["User Guide", "People", "Examples of the NeuroLang language environment.", "Example where a spatial prior is defined based on the distance between voxels and foci in a coordinate-based meta-analysis database", "Datalog Intermediate Representation Example based on the Destrieux Atlas", "Loading and Querying the Destrieux et al. Atlas\u2019 Left Hemisphere", "NeuroLang Example based Implementing a NeuroSynth Query", "Sulcal Identification Query Example in Neurolang", "Computation times", "neurolang", "neurolang package", "neurolang.CD_relations module", "neurolang.NeurolangDL", "neurolang.NeurolangPDL", "neurolang.aabb_tree module", "neurolang.commands module", "neurolang.config package", "neurolang.datalog", "neurolang.datalog.aggregation module", "neurolang.datalog.basic_representation module", "neurolang.datalog.chase package", "neurolang.datalog.chase.general module", "neurolang.datalog.chase.mgu module", "neurolang.datalog.chase.negation module", "neurolang.datalog.chase.relational_algebra module", "neurolang.datalog.constraints_representation module", "neurolang.datalog.exceptions module", "neurolang.datalog.expression_processing module", "neurolang.datalog.expressions module", "neurolang.datalog.instance module", "neurolang.datalog.magic_sets module", "neurolang.datalog.negation module", "neurolang.datalog.ontologies_parser module", "neurolang.datalog.ontologies_rewriter module", "neurolang.datalog.translate_to_named_ra module", "neurolang.datalog.wrapped_collections module", "neurolang.datalog_chase module", "neurolang.exceptions", "neurolang.expression_pattern_matching", "neurolang.expression_walker", "neurolang.expressions", "neurolang.frontend package", "neurolang.frontend.ast module", "neurolang.frontend.ast_tatsu module", "neurolang.frontend.datalog package", "neurolang.frontend.datalog.natural_syntax module", "neurolang.frontend.datalog.standard_syntax module", "neurolang.frontend.datalog.sugar package", "neurolang.frontend.datalog.sugar.spatial module", "neurolang.frontend.datalog.syntax_preprocessing module", "neurolang.frontend.deterministic_frontend module", "neurolang.frontend.drs package", "neurolang.frontend.drs.chart_parser module", "neurolang.frontend.drs.drs_builder module", "neurolang.frontend.drs.english_grammar module", "neurolang.frontend.drs.exceptions module", "neurolang.frontend.drs.translate_to_dl module", "neurolang.frontend.frontend_extensions module", "neurolang.frontend.neurolang module", "neurolang.frontend.neurosynth_utils module", "neurolang.frontend.probabilistic_frontend module", "neurolang.frontend.query_resolution module", "neurolang.frontend.query_resolution_datalog module", "neurolang.frontend.query_resolution_expressions module", "neurolang.interval_algebra module", "neurolang.logic", "neurolang.logic.expression_processing module", "neurolang.logic.horn_clauses module", "neurolang.logic.transformations module", "neurolang.logic.unification module", "neurolang.neurolang module", "neurolang.neurolang_compiler module", "neurolang.perior_tree module", "neurolang.probabilistic", "neurolang.probabilistic.containment module", "neurolang.probabilistic.cplogic package", "neurolang.probabilistic.cplogic.cplogic_to_gm module", "neurolang.probabilistic.cplogic.gm_provenance_solver module", "neurolang.probabilistic.cplogic.grounding module", "neurolang.probabilistic.cplogic.problog_solver module", "neurolang.probabilistic.cplogic.program module", "neurolang.probabilistic.cplogic.testing module", "neurolang.probabilistic.dalvi_suciu_lift module", "neurolang.probabilistic.distributions module", "neurolang.probabilistic.exceptions module", "neurolang.probabilistic.expression_processing module", "neurolang.probabilistic.expressions module", "neurolang.probabilistic.magic_sets_processing module", "neurolang.probabilistic.ppdl module", "neurolang.probabilistic.probabilistic_ra_utils module", "neurolang.probabilistic.probabilistic_semiring_solver module", "neurolang.probabilistic.query_resolution module", "neurolang.probabilistic.ranking module", "neurolang.probabilistic.shattering module", "neurolang.probabilistic.small_dichotomy_theorem_based_solver module", "neurolang.probabilistic.stratification module", "neurolang.probabilistic.transforms module", "neurolang.probabilistic.weighted_model_counting module", "neurolang.region_solver module", "neurolang.regions module", "neurolang.relational_algebra", "neurolang.relational_algebra.optimisers module", "neurolang.relational_algebra.relational_algebra module", "neurolang.relational_algebra_provenance", "neurolang.solver module", "neurolang.type_system package", "neurolang.typed_symbol_table module", "neurolang.utils package", "neurolang.utils.data_manipulation module", "neurolang.utils.orderedset module", "neurolang.utils.relational_algebra_set package", "neurolang.utils.relational_algebra_set.abstract module", "neurolang.utils.relational_algebra_set.dask_helpers module", "neurolang.utils.relational_algebra_set.dask_sql module", "neurolang.utils.relational_algebra_set.pandas module", "neurolang.utils.server package", "neurolang.utils.server.app module", "neurolang.utils.server.engines module", "neurolang.utils.server.queries module", "neurolang.utils.server.responses module", "neurolang.utils.testing package", "neurolang.utils.testing.logic module", "neurolang.utils.various module", "Welcome to Neurolang\u2019s documentation!", "Installing Neurolang", "Get Started with NeuroLang", "NeuroLang for Logic Programmers"], "terms": {"index": [0, 25, 32, 89, 102, 107, 109], "modul": [0, 9, 10, 16, 20, 38, 41, 44, 47, 51, 75, 100, 107, 110, 115, 120, 124], "search": 0, "page": [0, 94], "thi": [1, 7, 16, 20, 21, 25, 27, 30, 31, 32, 41, 47, 48, 56, 57, 58, 60, 61, 62, 67, 70, 76, 80, 87, 91, 94, 95, 117, 118, 119, 121, 124, 125, 126], "work": [1, 20, 21, 26, 104, 124], "made": [1, 57], "avail": [1, 57, 118], "commun": 1, "amongst": 1, "within": [1, 61, 85, 87, 95, 107, 122], "inria": 1, "pariet": 1, "project": [1, 34, 41, 50, 58, 63, 89, 102, 107, 110, 111, 114], "team": 1, "folk": 1, "particular": [1, 3, 89], "demian": 1, "wassermann": 1, "antonia": 1, "machlouzarid": 1, "shalit": 1, "valentin": 1, "ioven": 1, "gaston": 1, "zanitti": 1, "matia": 1, "schimt": 1, "nikita": 1, "zdainovich": 1, "kshitij": 1, "chawla": 1, "ha": [1, 25, 26, 27, 47, 59, 61, 66, 80, 89, 107, 122], "been": [1, 12, 41, 50, 60, 62, 70, 80, 91], "erc": 1, "start": [1, 45, 46, 64, 67, 107, 109, 119, 123, 126], "grant": 1, "There": [1, 7, 62, 91, 124], "paper": 1, "publish": [1, 20, 24], "yet": 1, "about": [1, 119], "But": [1, 7], "thei": [1, 25, 31, 56, 59, 75, 87, 126], "ar": [1, 7, 15, 20, 21, 25, 26, 27, 30, 31, 41, 42, 55, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 74, 76, 80, 82, 85, 89, 91, 95, 96, 102, 107, 110, 114, 118, 124, 125, 126], "upcom": 1, "sever": 1, "public": 1, "have": [1, 12, 13, 41, 47, 50, 59, 60, 62, 63, 67, 70, 91, 124, 126], "produc": [1, 18, 25, 27, 30, 76, 82, 91, 94], "shown": 1, "here": [1, 3, 4, 5, 6, 7, 67], "load": [2, 3, 6, 7, 8, 15, 25, 41, 59, 60, 61, 70, 125, 126], "queri": [2, 3, 8, 10, 12, 13, 18, 20, 24, 25, 27, 30, 33, 41, 45, 46, 47, 49, 50, 58, 60, 66, 67, 68, 70, 74, 80, 82, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 104, 107, 115, 119, 123, 124, 125, 126], "destrieux": [2, 7, 8, 125], "et": [2, 8, 20, 24, 30, 125], "al": [2, 8, 20, 24, 30, 125], "atla": [2, 3, 6, 8, 15, 61, 117, 118, 125], "left": [2, 4, 7, 8, 14, 30, 34, 72, 85, 105, 125], "hemispher": [2, 7, 8, 125], "datalog": [2, 8, 9, 10, 12, 13, 41, 50, 55, 56, 58, 60, 61, 63, 67, 70, 74, 78, 80, 82, 88, 96, 118, 125], "intermedi": [2, 8, 12, 18, 19, 25, 27, 28, 40, 41, 42, 47, 50, 58, 70, 100], "represent": [2, 8, 12, 18, 19, 20, 22, 23, 25, 27, 28, 40, 41, 42, 50, 58, 61, 63, 70, 89, 100, 102, 119], "base": [2, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 66, 67, 68, 70, 71, 72, 76, 78, 80, 83, 84, 86, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 114, 117, 118, 119, 123, 124, 125], "implement": [2, 8, 20, 21, 30, 31, 34, 38, 44, 52, 58, 67, 85, 88, 97, 100, 105, 107, 110, 114, 119, 123, 126], "neurosynth": [2, 8, 10, 12, 41, 59, 62, 123], "where": [2, 8, 18, 25, 27, 30, 41, 47, 48, 55, 57, 58, 59, 60, 61, 67, 70, 76, 80, 83, 87, 89, 91, 96, 102, 104, 107, 110, 114], "spatial": [2, 8, 44, 47, 119], "prior": [2, 8], "defin": [2, 7, 8, 25, 27, 30, 31, 42, 47, 48, 58, 67, 76, 95, 96, 102, 118, 125], "distanc": [2, 8, 48], "between": [2, 7, 8, 48, 56, 59, 67, 69, 80, 85, 121], "voxel": [2, 4, 5, 6, 7, 8, 41, 50, 61, 70, 99], "foci": [2, 8], "coordin": [2, 8, 41, 48, 50, 59, 61, 70, 99, 119], "meta": [2, 8, 61, 123], "analysi": [2, 8, 61, 123], "databas": [2, 6, 8, 18, 20, 24, 27, 30, 33, 34, 61, 62, 67, 80, 85, 94, 95, 102, 125], "sulcal": [2, 8, 123], "identif": [2, 8, 123], "download": [2, 3, 4, 5, 6, 7, 59, 61], "all": [2, 5, 7, 25, 27, 41, 60, 61, 62, 63, 66, 67, 70, 75, 76, 91, 102, 105, 124, 125, 126], "python": [2, 3, 4, 5, 6, 7, 41, 50, 58, 63, 124, 125], "sourc": [2, 3, 4, 5, 6, 7, 125], "code": [2, 3, 4, 5, 6, 7, 25, 26, 27, 30, 42, 45, 46, 58, 62, 80, 107, 122], "auto_examples_python": 2, "zip": [2, 5, 124], "jupyt": [2, 3, 4, 5, 6, 7], "notebook": [2, 3, 4, 5, 6, 7], "auto_examples_jupyt": 2, "galleri": [2, 3, 4, 5, 6, 7, 123, 125], "gener": [2, 3, 4, 5, 6, 7, 20, 26, 27, 32, 41, 60, 61, 63, 69, 70, 89, 91, 102, 126], "sphinx": [2, 3, 4, 5, 6, 7], "click": [3, 4, 5, 6, 7, 119, 124], "full": [3, 4, 5, 6, 7, 119, 125], "each": [3, 25, 27, 30, 41, 59, 60, 61, 67, 68, 70, 76, 82, 85, 89, 91, 94, 96, 97, 102, 104, 119, 126], "s": [3, 4, 5, 6, 7, 12, 13, 18, 20, 24, 27, 29, 30, 34, 41, 47, 50, 53, 57, 58, 59, 60, 61, 62, 63, 66, 67, 70, 75, 76, 80, 82, 85, 87, 89, 91, 94, 102, 124, 125], "probabl": [3, 41, 60, 70, 75, 76, 80, 82, 83, 85, 86, 91, 94, 97], "being": [3, 58, 59, 75, 102, 118, 125], "report": [3, 59, 61], "studi": [3, 6, 59, 61], "calcul": [3, 76, 102, 119], "whether": [3, 7, 27, 30, 85, 102], "focu": 3, "peak": [3, 59, 61], "activ": [3, 6, 104, 124], "The": [3, 15, 19, 25, 27, 30, 32, 55, 56, 57, 59, 61, 67, 75, 76, 80, 82, 85, 87, 89, 91, 97, 101, 102, 107, 110, 114, 118, 119, 121, 125], "how": [3, 30, 67, 118, 126], "far": 3, "from": [3, 5, 6, 7, 15, 20, 24, 25, 27, 30, 32, 34, 41, 50, 55, 58, 59, 60, 61, 62, 63, 66, 67, 70, 75, 80, 82, 85, 86, 89, 91, 95, 96, 102, 117, 121, 124, 125, 126], "happen": [3, 75, 102], "import": [3, 4, 5, 6, 7, 16, 124, 126], "warn": [3, 4, 5, 6, 7], "filterwarn": [3, 4, 5, 6, 7], "ignor": [3, 4, 5, 6, 7], "pathlib": [3, 6], "path": [3, 6, 32, 41, 59, 60, 61, 70, 117, 124], "type": [3, 4, 5, 6, 7, 12, 13, 15, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 34, 41, 42, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 76, 78, 80, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 104, 105, 106, 118, 119, 124, 126], "iter": [3, 6, 12, 13, 15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 35, 41, 47, 48, 49, 50, 52, 53, 56, 58, 60, 61, 62, 63, 66, 67, 68, 70, 76, 78, 80, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98, 101, 102, 104, 107, 109, 110, 111, 114, 119, 126], "nibabel": [3, 4, 5, 6, 7, 118, 119, 124], "nilearn": [3, 5, 6, 7, 59, 124], "dataset": [3, 4, 5, 6, 7, 59, 61], "imag": [3, 4, 6, 15, 59, 61, 102, 110, 111, 119, 125], "plot": [3, 4, 5, 6, 7], "numpi": [3, 4, 6, 7, 35, 57, 126], "np": [3, 4, 6, 7, 53, 61], "neurolang": [3, 4, 5, 8], "frontend": [3, 5, 6, 9, 10, 12, 70, 126], "explicitvbr": [3, 4, 5, 7, 41, 50, 61, 70, 99, 119], "explicitvbroverlai": [3, 6, 41, 50, 70, 99, 119], "neurolangpdl": [3, 6, 41, 60, 70, 117, 126], "neurosynth_util": [3, 6, 10, 41], "get_ns_mni_peaks_report": [3, 6, 59], "data": [3, 5, 15, 20, 24, 41, 59, 60, 61, 70, 99, 119, 123, 124, 125], "prepar": 3, "data_dir": [3, 6, 59, 61, 117], "home": [3, 5, 6], "neurolang_data": [3, 6], "mni": [3, 6, 59, 61, 118], "resampl": [3, 6], "4mm": [3, 6], "mni_t1": [3, 6], "fetch_icbm152_2009": [3, 6], "str": [3, 4, 5, 6, 7, 41, 50, 54, 58, 59, 60, 61, 62, 63, 70, 98, 102, 107, 110, 111, 114, 118, 119, 122], "icbm": [3, 6], "t1": [3, 6, 105], "mni_t1_2mm": 3, "resample_img": [3, 6], "ey": [3, 6], "3": [3, 6, 30, 48, 52, 58, 61, 62, 85, 107, 110, 114, 125, 126], "2": [3, 5, 6, 13, 27, 30, 41, 42, 47, 52, 56, 58, 60, 61, 62, 63, 70, 74, 76, 80, 91, 94, 102, 107, 110, 114, 126], "probabilist": [3, 5, 7, 9, 10, 13, 30, 41, 47, 70, 117, 123, 125, 126], "logic": [3, 9, 10, 27, 49, 56, 61, 62, 63, 74, 82, 85, 89, 91, 94, 96, 97, 104, 107, 120, 123], "program": [3, 7, 12, 13, 19, 20, 21, 25, 26, 27, 28, 30, 41, 50, 60, 61, 62, 63, 67, 70, 75, 76, 82, 85, 87, 88, 89, 91, 94, 95, 97, 123, 124, 126], "nl": [3, 5, 6, 7, 61, 62, 117, 126], "ad": [3, 6, 30, 58, 61, 67, 75, 85, 89, 91, 96, 102, 117], "new": [3, 6, 27, 30, 41, 60, 70, 75, 83, 85, 94, 102, 126], "aggreg": [3, 6, 26, 35, 90, 97, 102, 107, 110, 111, 114, 117], "function": [3, 5, 6, 7, 12, 13, 20, 21, 25, 26, 32, 38, 39, 40, 41, 48, 50, 57, 58, 60, 61, 62, 63, 67, 68, 69, 70, 83, 86, 88, 91, 102, 103, 105, 107, 110, 114, 121], "build": [3, 6, 63], "region": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 41, 50, 60, 62, 70, 98, 119, 125], "overlai": [3, 6, 41, 50, 70, 99], "add_symbol": [3, 5, 6, 7, 61, 126], "def": [3, 4, 5, 6, 7, 119, 126], "agg_create_region_overlai": [3, 6], "i": [3, 6, 7, 30, 87, 107, 110, 114], "j": [3, 6, 18, 30, 82, 94], "k": [3, 6, 57, 99, 125], "p": [3, 6, 18, 19, 27, 28, 30, 41, 47, 59, 60, 67, 70, 76, 80, 82, 83, 85, 87, 91, 94, 95, 97], "c_": [3, 4, 6], "return": [3, 4, 5, 6, 7, 12, 13, 25, 27, 30, 32, 41, 42, 50, 55, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 75, 80, 82, 85, 89, 91, 94, 95, 96, 97, 99, 102, 104, 107, 109, 110, 114, 117, 118, 119, 126], "affin": [3, 4, 5, 6, 7, 41, 50, 61, 70, 99], "image_dim": [3, 4, 6, 41, 50, 70, 99], "shape": [3, 4, 6], "peak_data": [3, 6, 59], "ijk_posit": [3, 6], "round": [3, 6], "apply_affin": [3, 6], "linalg": [3, 6, 7], "inv": [3, 6], "x": [3, 4, 5, 6, 7, 18, 19, 27, 28, 30, 47, 48, 57, 59, 60, 62, 63, 67, 76, 80, 82, 83, 85, 87, 91, 94, 95, 96, 97, 102, 125, 126], "y": [3, 6, 7, 18, 27, 30, 47, 59, 60, 62, 83, 85, 87, 91, 94, 95, 96, 102, 125, 126], "z": [3, 6, 18, 47, 59, 95, 102, 126], "valu": [3, 6, 16, 19, 25, 29, 35, 41, 48, 50, 58, 59, 60, 61, 62, 63, 70, 76, 80, 83, 89, 91, 99, 102, 104, 105, 107, 109, 110, 111, 114, 117, 119], "astyp": [3, 6], "float": [3, 6, 7, 35, 41, 45, 46, 48, 57, 59, 60, 61, 62, 70, 72], "int": [3, 6, 18, 30, 35, 59, 61, 62, 63, 72, 102, 107, 110, 111, 114, 117, 118, 119, 126], "0": [3, 4, 5, 6, 7, 8, 14, 20, 21, 36, 41, 50, 52, 58, 59, 61, 62, 63, 70, 72, 76, 80, 97, 99, 107, 110, 114, 119, 126], "1": [3, 4, 5, 6, 13, 18, 20, 21, 24, 30, 34, 36, 41, 42, 47, 50, 52, 58, 59, 60, 61, 62, 63, 67, 70, 75, 76, 80, 82, 85, 91, 94, 99, 102, 107, 110, 114, 119, 124, 126], "id": [3, 6, 20, 24, 59, 61, 117, 118], "add_tuple_set": [3, 6, 61, 62, 126], "name": [3, 4, 5, 6, 7, 12, 13, 15, 16, 20, 24, 30, 41, 42, 46, 50, 60, 61, 62, 63, 70, 75, 102, 126], "focusreport": 3, "study_id": [3, 6], "load_neurosynth_study_id": [3, 6, 61], "add_uniform_probabilistic_choice_over_set": [3, 6, 41, 60, 70], "selectedstudi": [3, 6], "load_neurosynth_term_study_associ": [3, 6, 61], "terminstudytfidf": [3, 6], "tfidf_threshold": [3, 6, 59, 61], "1e": [3, 6, 7], "hstack": 3, "meshgrid": 3, "arang": 3, "dim": [3, 14, 61, 72, 99], "get_fdata": [3, 6], "swapax": 3, "reshap": 3, "t": [3, 6, 7, 18, 27, 30, 41, 47, 50, 58, 63, 69, 76, 80, 104, 124, 125], "environ": [3, 12, 13, 41, 50, 60, 61, 62, 70, 123, 124, 126], "e": [3, 5, 6, 7, 62, 63, 67, 68, 87, 95, 102, 125, 126], "voxelreport": 3, "max": [3, 119, 125], "exp": [3, 30, 56, 57, 67, 68, 85, 88, 102], "d": [3, 29, 30, 48, 52, 82, 87, 102, 125], "5": [3, 5, 7, 18, 20, 24, 34, 52, 102, 107, 110, 114, 126], "i1": [3, 48, 64], "j1": [3, 48], "k1": [3, 48], "i2": [3, 48, 64], "j2": [3, 48], "k2": [3, 48], "euclidean": [3, 48], "termassoci": [3, 6], "probmap": 3, "prob": [3, 6, 47, 60, 80, 87], "emot": 3, "img": [3, 6], "img_queri": [3, 6], "result": [3, 4, 5, 7, 20, 24, 41, 55, 58, 59, 60, 61, 62, 66, 67, 70, 75, 78, 82, 91, 94, 97, 102, 118, 119], "result_imag": [3, 6], "fetch_on": [3, 6, 19, 35, 107, 110, 111, 114], "spatial_imag": [3, 4, 5, 6, 7, 41, 50, 61, 70, 99], "plot_stat_map": [3, 6], "threshold": [3, 6, 59], "percentil": [3, 6], "95": [3, 6], "show": [3, 6], "total": [3, 4, 5, 6, 7, 8, 117], "run": [3, 5, 6, 7, 118, 119, 124], "time": [3, 4, 5, 6, 7, 16, 80, 94, 102, 124], "script": [3, 4, 5, 6, 7, 124], "minut": [3, 4, 5, 6, 7], "17": [3, 8], "916": [3, 8], "second": [3, 4, 5, 6, 7, 27, 62, 91, 104, 107, 117, 121, 122], "plot_cbma_spatial_prior": [3, 8], "py": [3, 4, 5, 6, 7, 8, 124], "ipynb": [3, 4, 5, 6, 7], "upload": [4, 5], "sulci": 4, "execut": [4, 5, 7, 8, 58, 62, 100, 102, 107, 118, 122, 124], "some": [4, 16, 42, 48, 67, 117, 123, 124, 126], "simpl": [4, 5], "matplotlib": [4, 5, 7, 119, 124], "pyplot": [4, 5, 7], "plt": [4, 5, 7], "nib": [4, 5, 7], "chase": [4, 12, 13, 18, 36, 41, 60, 62, 70, 78], "expression_walk": [4, 9, 10], "ew": 4, "express": [4, 7, 9, 10, 12, 13, 18, 19, 25, 27, 30, 31, 33, 34, 38, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 58, 60, 61, 62, 66, 67, 68, 69, 70, 76, 80, 82, 85, 89, 90, 91, 93, 94, 96, 97, 100, 101, 102, 104, 107, 110, 114, 121, 125], "region_solv": [4, 9, 10], "datalogprogram": [4, 12, 19, 25, 27, 30, 31, 57, 61, 62, 78, 80, 87, 88], "implic": [4, 18, 19, 25, 27, 28, 30, 31, 32, 47, 48, 53, 56, 62, 63, 67, 68, 80, 82, 85, 87, 91, 94, 95, 96, 97], "translatetolog": [4, 18, 27, 28, 66, 78], "up": [4, 30, 68, 124], "ir": [4, 41, 42, 58, 60, 61, 70], "shortcut": 4, "constant": [4, 19, 26, 27, 30, 47, 48, 61, 63, 66, 74, 75, 76, 80, 91, 96, 102, 104], "s_": 4, "symbol": [4, 12, 13, 15, 19, 25, 27, 30, 31, 41, 46, 47, 48, 50, 58, 60, 61, 62, 63, 66, 68, 70, 71, 75, 78, 80, 85, 88, 89, 91, 96, 97, 102, 104, 118, 119, 126], "imp_": 4, "fact_": 4, "eb_": 4, "expressionblock": [4, 25, 27, 67], "atlas_destrieux": [4, 5, 7], "fetch_atlas_destrieux_2009": [4, 5, 7], "map": [4, 5, 7, 29, 30, 58, 89, 91, 95, 102], "image_data": 4, "get_data": 4, "style": [4, 125], "region_dict": 4, "label": [4, 5, 7, 15, 32, 41, 59, 60, 61, 70, 76, 80, 82, 91, 94, 97, 99, 125], "continu": [4, 55], "transpos": 4, "nonzero": 4, "r": [4, 5, 20, 24, 34, 47, 62, 102, 124, 125], "decod": [4, 5, 7], "utf8": [4, 5, 7], "plot_roi": [4, 5, 7], "l": [4, 5, 7, 20, 24, 62, 125], "s_temporal_sup": 4, "out": [4, 5, 6, 7, 16, 25, 27, 41, 50, 57, 61, 70, 99], "displai": [4, 107, 119, 122], "orthoslic": 4, "object": [4, 14, 16, 18, 19, 20, 21, 22, 23, 24, 29, 32, 33, 35, 42, 43, 46, 52, 54, 56, 57, 58, 61, 63, 71, 72, 76, 83, 96, 99, 100, 102, 111, 117, 118, 119], "0x7fd0bb0178b0": 4, "make": [4, 55, 76, 80, 91, 125], "destrieux_fact": 4, "item": [4, 29, 107, 110, 114, 119], "class": [4, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 76, 78, 80, 83, 86, 87, 88, 89, 90, 91, 93, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 117, 118, 119, 126], "regionsolv": [4, 60, 98], "expressionbasicevalu": [4, 34, 58, 60, 78, 104], "function_lh": 4, "self": [4, 30, 94, 119], "bool": [4, 5, 7, 27, 30, 59, 60, 61, 62, 63, 64, 66, 68, 72, 82, 89, 91, 94, 102, 118, 119], "startswith": [4, 5, 7, 125], "function_rh": 4, "superior_sts_l": 4, "anatomical_superior_of": [4, 7], "region_l_st": 4, "name_": [4, 7], "r1": [4, 48], "print": [4, 126], "datalog_program": [4, 20, 21, 23, 36, 78], "\u03bb": 4, "unknown": [4, 18, 19, 35, 41, 60, 61, 62, 67, 70, 80, 105], "c": [4, 7, 18, 47, 54, 57, 83, 87, 124, 126], "and_": [4, 63], "callabl": [4, 12, 13, 18, 41, 50, 57, 60, 61, 62, 70, 105, 107, 110, 114], "type_system": [4, 9, 10, 18, 19, 35, 41, 60, 61, 62, 70], "dl": [4, 20, 24, 105], "walk": [4, 15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 42, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "solut": [4, 12, 13, 41, 60, 62, 70, 91, 97], "build_chase_solut": [4, 20, 21, 23, 36, 78], "extract": [4, 5, 6, 19, 25, 27, 66, 89], "first": [4, 27, 30, 41, 47, 49, 58, 60, 61, 62, 67, 70, 80, 94, 104, 107, 109, 121, 122, 126], "element": [4, 13, 29, 41, 47, 50, 60, 61, 62, 63, 70, 80, 102, 107, 109, 110, 111, 114, 126], "rsbv": 4, "replaceexpressionsbyvalu": 4, "unwrapped_it": [4, 19, 35], "figur": [4, 16, 25, 27, 119], "titl": [4, 7, 59], "25": [4, 8], "511": [4, 8], "plot_load_destrieux_datalog_ir": [4, 8], "exampl": [5, 8, 27, 32, 41, 60, 61, 62, 70, 76, 80, 91, 102, 107, 110, 114, 119, 123, 125], "neurolangdl": [5, 7, 41, 50, 70, 117, 126], "initialis": [5, 126], "engin": [5, 7, 62, 107, 115, 118], "fact": [5, 7, 13, 19, 25, 28, 31, 41, 45, 46, 47, 56, 60, 61, 62, 63, 70, 76, 78, 80, 85, 88, 89, 91, 126], "list": [5, 7, 12, 13, 20, 21, 25, 27, 32, 41, 42, 50, 52, 60, 61, 62, 67, 70, 95, 102, 107, 110, 114, 119], "atlas_label": [5, 7, 61], "add_atlas_set": [5, 7, 61], "destrieux_atla": [5, 125], "creat": [5, 6, 12, 13, 30, 41, 50, 60, 61, 62, 70, 117, 118, 119, 124], "circleci": [5, 6], "nilearn_data": 5, "destrieux_2009": 5, "http": [5, 6, 20, 24, 61, 85, 124], "www": 5, "nitrc": 5, "org": [5, 20, 24, 61, 85], "fr": 5, "php": 5, "11942": 5, "destrieux2009": 5, "tgz": 5, "done": [5, 6, 119], "min": [5, 6, 119], "2a2e5a5707983d509d9319c692c867ab": 5, "abstractset": [5, 6, 7, 41, 60, 61, 62, 70, 76, 98, 102, 126], "tupl": [5, 6, 7, 13, 18, 20, 21, 30, 36, 41, 48, 52, 58, 60, 61, 62, 63, 69, 70, 72, 75, 80, 82, 89, 91, 94, 97, 102, 107, 119, 122, 125, 126], "background": [5, 7], "vbr": [5, 7, 119], "76": [5, 7], "109": [5, 7], "64": [5, 7], "75": [5, 7], "92": [5, 7], "73": [5, 7], "74": [5, 7], "add": [5, 7, 13, 14, 18, 19, 29, 30, 31, 35, 41, 57, 60, 61, 62, 70, 72, 80, 96, 97, 102, 107, 109, 110, 111, 114, 117, 126], "util": [5, 7, 9, 10, 27, 124], "prefix": [5, 7], "superior": 5, "tempor": 5, "suluc": 5, "anterior": [5, 7], "central": [5, 7], "sulcu": [5, 125], "scope": [5, 6, 7, 12, 13, 41, 50, 60, 61, 62, 70, 125], "on_left_hemispher": 5, "visualis": 5, "subplot": [5, 7], "nrow": [5, 7], "len": [5, 126], "ncol": [5, 7], "figsiz": [5, 7], "10": [5, 7, 85, 125], "ax": [5, 7], "57": [5, 8], "270": [5, 8], "plot_load_destrieux_left_hemisphere_gyri": [5, 8], "panda": [6, 15, 59, 107, 110, 124], "pd": [6, 59, 119], "mni_t1_4mm": 6, "4": [6, 20, 24, 30, 34, 48, 52, 59, 61, 62, 67, 94, 107, 110, 114, 126], "icbm152_2009": 6, "osf": 6, "io": 6, "7pj92": 6, "e05b733c275cab0eec856067143c9dc9": 6, "mni_coord": 6, "peakreport": 6, "github": [6, 124], "com": [6, 124], "raw": 6, "master": [6, 124], "neurosynth_vers": 6, "7_coordin": 6, "tsv": [6, 59], "gz": [6, 59], "7_metadata": 6, "7_vocab": 6, "terms_sourc": 6, "abstract_typ": 6, "tfidf_featur": [6, 59], "npz": [6, 59], "terms_vocabulari": 6, "txt": 6, "9862924": 6, "001": 6, "0553942161114": 6, "activationgiventerm": 6, "auditori": 6, "activationgiventermimag": 6, "13": [6, 8], "618": [6, 8], "plot_neurosynth_implement": [6, 8], "one": [7, 26, 27, 30, 32, 33, 47, 59, 62, 68, 76, 87, 89, 91, 94, 95, 102, 118], "determin": [7, 123], "princip": 7, "direct": [7, 11, 14, 72, 99], "describ": [7, 30, 58, 61, 102], "string": [7, 52, 55, 56, 58, 62, 102, 107, 110, 114, 119], "paramet": [7, 12, 13, 25, 27, 30, 31, 41, 42, 58, 59, 60, 61, 62, 66, 67, 70, 75, 76, 82, 85, 89, 91, 94, 95, 96, 97, 102, 104, 107, 110, 114, 117, 118, 119, 121, 122], "check": [7, 27, 31, 66, 67, 124], "its": [7, 15, 25, 27, 47, 59, 61, 67, 76, 85, 95, 102, 104, 119, 124], "principal_direct": 7, "ep": 7, "6": [7, 107, 110, 114], "extens": [7, 126], "volumetr": [7, 119, 125], "analys": [7, 27, 95], "lr": 7, "ap": 7, "si": 7, "right": [7, 14, 25, 34, 62, 72, 85, 105, 125], "anterio": 7, "posterior": 7, "inferior": 7, "respect": [7, 76], "option": [7, 12, 13, 27, 30, 41, 58, 59, 60, 61, 62, 70, 72, 85, 107, 109, 117, 118, 119, 122], "minimum": [7, 59, 61], "differ": [7, 41, 59, 60, 70, 76, 85, 90, 97, 100, 102], "standard": 7, "deviat": 7, "default": [7, 12, 13, 16, 30, 41, 59, 60, 61, 62, 68, 70, 89, 91, 94, 107, 119, 122, 124], "wether": [7, 27, 62, 66, 74], "varianc": 7, "assum": [7, 27, 66, 68, 125], "ra": [7, 30, 91, 107, 110, 114], "os": 7, "xyz": 7, "space": [7, 48, 59, 61], "s_xyz": 7, "to_xyz": [7, 41, 50, 70, 99], "cov": 7, "eval": 7, "evec": 7, "eig": 7, "argmax": 7, "ab": 7, "abs_max_evec": 7, "squeez": 7, "sort_dir": 7, "argsort": 7, "fals": [7, 11, 13, 16, 31, 41, 50, 59, 60, 61, 62, 63, 70, 82, 86, 88, 91, 93, 94, 97, 99, 101, 105, 106, 118, 119], "els": [7, 42, 74, 119], "main_dir": 7, "In": [7, 41, 60, 63, 67, 70, 85, 94, 95, 102, 124, 126], "we": [7, 16, 91, 94, 95, 124, 125, 126], "primari": 7, "lobe": 7, "those": [7, 63, 67, 96], "vertic": [7, 14], "section": [7, 102], "later": 7, "fissur": 7, "These": [7, 59], "present": [7, 26, 107, 109, 118], "further": 7, "just": 7, "declar": [7, 41, 42, 60, 61, 62, 63, 70, 80, 125], "ones": [7, 67, 85], "left_sulcu": 7, "left_primary_sulcu": 7, "s_central": 7, "lat_fi": 7, "post": [7, 87, 95], "s_pericallos": 7, "s_parieto_occipit": 7, "s_calcarin": 7, "ant": 7, "horizont": 7, "left_frontal_lobe_sulcu": 7, "anatomical_anterior_of": 7, "after": [7, 16, 75, 80], "context": [7, 12, 13, 41, 50, 60, 61, 62, 63, 70, 107, 122], "finish": [7, 64, 107, 118, 122], "remain": [7, 27, 41, 52, 60, 67, 70, 121], "identifi": [7, 45, 46, 82], "pc": 7, "belong": 7, "along": [7, 124], "axi": [7, 14, 72], "other": [7, 14, 32, 41, 42, 47, 60, 61, 62, 70, 72, 80, 86, 102, 107, 109, 110, 111, 114, 117, 121, 124], "satisfi": [7, 58, 61], "same": [7, 25, 41, 48, 59, 60, 67, 70, 74, 96, 102, 104, 121, 126], "condit": [7, 45, 46, 53, 76, 83, 86, 91, 94, 97], "named_sulcu": 7, "exist": [7, 42, 61, 62, 63, 66, 69, 95, 96, 125], "other_region": 7, "anatomical_posterior_of": 7, "re": [7, 75, 91, 124, 126], "display_mod": 7, "sf": 7, "which": [7, 16, 26, 27, 30, 55, 56, 59, 61, 67, 75, 76, 80, 82, 85, 87, 89, 91, 94, 95, 97, 102, 117, 118, 119, 124, 125, 126], "15": [7, 8, 30, 118], "053": [7, 8], "plot_sulcal_queri": [7, 8], "03": 8, "09": 8, "368": 8, "auto_exampl": 8, "file": [8, 41, 59, 60, 70, 124], "01": 8, "mb": 8, "00": 8, "packag": [9, 124], "subpackag": 9, "config": [9, 10, 124], "submodul": 9, "relational_algebra": [9, 10, 20], "cd_relat": [9, 10], "aabb_tre": [9, 10, 41, 50, 70, 99], "command": [9, 10, 45, 46, 107, 122], "datalog_chas": [9, 10], "except": [9, 10, 20, 21, 29, 38, 41, 51, 58, 67, 96, 104, 105, 107, 109, 110, 111, 114, 119], "expression_pattern_match": [9, 10], "interval_algebra": [9, 10], "neurolang_compil": [9, 10], "perior_tre": [9, 10], "relational_algebra_proven": [9, 10], "solver": [9, 10, 13, 31, 67, 71, 97, 100], "typed_symbol_t": [9, 10], "dr": [10, 41], "ast": [10, 41, 45, 46, 58], "ast_tatsu": [10, 41], "deterministic_frontend": [10, 41], "frontend_extens": [10, 41], "probabilistic_frontend": [10, 41], "query_resolut": [10, 41, 104], "builder": [10, 12, 13, 41], "mixin": [10, 18, 41, 49, 57], "query_resolution_datalog": [10, 41], "query_resolution_express": [10, 41, 61], "resolut": [10, 20, 21, 27, 41, 80, 91, 94, 117], "relational_algebra_set": [10, 107], "server": [10, 107], "test": [10, 75, 107, 124], "data_manipul": [10, 107], "orderedset": [10, 27, 66, 107], "variou": [10, 61, 107], "cardinal_rel": 11, "reference_region": 11, "refine_overlap": 11, "stop_at": 11, "none": [11, 12, 14, 16, 18, 19, 20, 21, 23, 24, 25, 27, 29, 30, 32, 35, 36, 41, 45, 46, 50, 57, 58, 59, 60, 61, 62, 63, 69, 70, 71, 72, 75, 76, 78, 85, 86, 88, 90, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 119, 122], "program_ir": [12, 13, 41, 50, 60, 61, 62, 70], "determinist": [12, 13, 41, 50, 70, 76, 80, 89, 91, 95], "querybuilderdatalog": [12, 13, 41, 50, 60, 62, 70], "regionfrontenddatalogsolv": [12, 41, 50, 70], "attribut": [12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 33, 34, 35, 36, 41, 47, 48, 49, 50, 52, 53, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 76, 78, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 97, 98, 99, 101, 102, 104, 107, 110, 111, 114, 117], "current_program": [12, 13, 41, 50, 60, 62, 70, 126], "current": [12, 13, 26, 27, 41, 50, 60, 61, 62, 70, 75, 118], "dynam": [12, 13, 41, 50, 60, 61, 62, 70, 126], "can": [12, 13, 18, 30, 32, 41, 50, 56, 58, 60, 61, 62, 63, 67, 70, 76, 85, 87, 94, 95, 96, 102, 117, 124, 125, 126], "us": [12, 13, 15, 16, 18, 20, 21, 24, 25, 27, 30, 32, 41, 47, 50, 56, 58, 60, 61, 62, 63, 67, 68, 70, 76, 80, 85, 86, 94, 95, 102, 107, 110, 114, 117, 118, 119, 121, 122, 123, 124, 125], "write": [12, 13, 41, 50, 60, 61, 62, 70, 124], "correspond": [12, 13, 15, 25, 27, 30, 41, 42, 50, 58, 60, 61, 62, 63, 70, 85, 99, 119], "region_nam": [12, 13, 41, 50, 60, 61, 62, 70], "region_set_nam": [12, 13, 41, 50, 60, 61, 62, 70], "set_typ": [12, 13, 41, 50, 60, 61, 62, 70], "symbol_t": [12, 13, 19, 25, 41, 50, 60, 61, 62, 63, 70, 71, 78, 82, 88, 89, 90, 91, 92, 93, 102, 104], "projector": [12, 13, 41, 50, 60, 61, 62, 70], "through": [12, 13, 41, 42, 50, 58, 60, 61, 62, 63, 70, 91, 95, 97, 101, 102], "method": [12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 76, 78, 80, 83, 86, 87, 88, 89, 90, 91, 93, 97, 98, 99, 101, 102, 104, 106, 107, 109, 110, 111, 114, 117, 118, 119, 124], "magic_sets_rewrite_program": [12, 13, 41, 50, 60, 62, 70], "__init__": [12, 13], "capabl": [12, 13, 41, 60, 61, 62, 70], "usual": 12, "blank": 12, "chase_class": [12, 13, 20, 21, 41, 60, 62, 70], "comput": [12, 13, 30, 48, 74, 83, 91, 94, 102, 124, 125], "see": [12, 13, 41, 50, 58, 60, 61, 62, 63, 67, 70, 119, 123], "descript": [12, 13, 41, 50, 60, 61, 62, 63, 70], "probabilistic_solv": [13, 41, 60, 70], "solve_succ_queri": [13, 41, 60, 70, 82, 94, 97], "solve_succ_query_sdd_direct": [13, 41, 60, 70, 97], "probabilistic_marg_solv": [13, 41, 60, 70], "solve_marg_queri": [13, 41, 60, 70, 82, 94, 97], "check_qbased_pfact_tuple_un": [13, 41, 60, 70, 91], "complement": [13, 41, 60, 61, 62, 70], "extension": [13, 19, 25, 27, 41, 60, 61, 62, 70, 76, 91], "choic": [13, 41, 60, 70, 76, 80, 85, 86, 89], "sove": [13, 41, 60, 70], "front": [13, 41, 60, 63, 70], "end": [13, 41, 60, 63, 70, 107, 117, 122, 125], "order": [13, 27, 49, 57, 59, 61, 66, 67, 68, 85, 94, 102, 104, 121, 125], "indic": [13, 105, 107, 110, 114], "prioriti": [13, 104], "usag": 13, "lifted_solve_succ_queri": 13, "wmc_solve_succ_queri": 13, "lifted_solve_marg_queri": 13, "wmc_solve_marg_queri": 13, "aabb": [14, 72], "lb": [14, 72, 99], "ub": [14, 72, 99], "center": [14, 41, 50, 61, 70, 72, 99, 119], "limit": [14, 48, 72, 99, 118], "volum": [14, 61, 72], "width": [14, 41, 50, 70, 72, 99], "contain": [14, 25, 27, 41, 48, 59, 60, 61, 62, 68, 70, 72, 75, 76, 80, 85, 89, 91, 94, 96, 100, 107, 110, 114, 119], "overlap": [14, 64, 72], "union": [14, 25, 27, 28, 30, 33, 41, 42, 58, 60, 61, 62, 66, 67, 68, 70, 72, 82, 85, 87, 91, 94, 95, 96, 102, 107, 110, 114, 117, 119], "properti": [14, 15, 18, 19, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 41, 47, 48, 49, 50, 53, 56, 58, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 76, 78, 80, 83, 86, 87, 88, 89, 90, 91, 93, 97, 98, 99, 101, 102, 104, 107, 110, 111, 114, 117, 121], "node": [14, 20, 21, 27, 42, 72, 76], "box": [14, 72], "parent": [14, 67, 72, 76, 126], "height": [14, 72], "children": [14, 20, 21, 36, 42], "is_leaf": [14, 72], "tree": [14, 42, 55, 58, 72], "add_in_direct": 14, "add_left": 14, "add_right": 14, "expand_region_box": [14, 72], "query_overlapping_region": 14, "query_regions_axdir": [14, 72], "query_regions_contained_in_box": [14, 72], "region_id": [14, 72], "added_box": [14, 72], "aabb_from_vertic": 14, "commandsmixin": [15, 60], "arg": [15, 18, 20, 24, 25, 27, 28, 30, 31, 33, 34, 35, 47, 48, 49, 53, 56, 58, 60, 62, 66, 67, 68, 72, 75, 80, 86, 88, 90, 91, 93, 97, 98, 101, 102, 104, 118], "kwarg": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 35, 47, 48, 49, 53, 56, 58, 60, 66, 67, 68, 80, 86, 88, 90, 91, 93, 97, 98, 99, 101, 102, 104, 118], "patternwalk": [15, 18, 25, 27, 31, 47, 48, 49, 66, 67, 68, 76, 80, 88, 89, 90, 91, 97, 98, 101, 102, 104], "pattern": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 38, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "hold": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 94, 97, 98, 101, 102, 104, 117], "an": [15, 18, 19, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 47, 48, 49, 50, 53, 55, 56, 58, 60, 61, 62, 63, 66, 67, 68, 76, 78, 80, 82, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105, 107, 109, 110, 111, 114, 117, 119, 124, 125], "triplet": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "guard": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "action": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "pattern_match_express": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "pattern_match_expression_paramet": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "pattern_match_expression_tupl": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "pattern_match_tupl": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 47, 48, 49, 53, 56, 58, 60, 63, 66, 67, 68, 76, 78, 80, 87, 88, 89, 90, 91, 93, 97, 98, 101, 102, 104], "load_atla": 15, "process": [15, 18, 19, 25, 27, 30, 32, 41, 60, 62, 67, 70, 87], "fetch": [15, 118], "instanc": [15, 18, 20, 21, 23, 24, 25, 26, 27, 30, 36, 57, 58, 61, 85, 117, 125], "rais": [15, 27, 29, 41, 50, 60, 61, 63, 70, 95, 107, 109, 110, 111, 114, 119], "invalidcommandexpress": 15, "invalid": 15, "error": [15, 26, 119, 124], "occur": [15, 67, 124], "while": [15, 55], "load_csv": 15, "tabular": [15, 125], "given": [15, 27, 30, 58, 61, 62, 63, 67, 76, 85, 95, 96, 107, 110, 114, 118], "url": 15, "read_csv": 15, "relat": [15, 20, 24, 61, 75, 76, 78, 82, 85, 86, 89, 91, 94, 100, 101, 102], "ani": [15, 18, 19, 24, 25, 27, 28, 30, 31, 33, 34, 41, 42, 46, 47, 48, 49, 50, 52, 53, 56, 58, 60, 61, 62, 63, 66, 67, 68, 70, 76, 78, 80, 86, 87, 88, 89, 90, 91, 93, 97, 101, 102, 104, 119, 121, 126], "neurolangconfigpars": 16, "dict_typ": 16, "dict": [16, 25, 30, 41, 42, 52, 60, 61, 62, 70, 85, 89, 107, 110, 114, 118, 119], "allow_no_valu": 16, "delimit": 16, "comment_prefix": 16, "inline_comment_prefix": 16, "strict": 16, "true": [16, 19, 27, 30, 35, 41, 57, 58, 59, 60, 61, 62, 63, 66, 67, 70, 82, 83, 85, 86, 88, 89, 91, 94, 97, 105, 106, 118, 119, 126], "empty_lines_in_valu": 16, "default_sect": 16, "interpol": 16, "convert": [16, 42, 47, 55, 59, 67, 96, 101, 102], "configpars": 16, "disable_expression_type_print": 16, "enable_expression_type_print": 16, "expression_type_print": 16, "get_structural_knowledge_namespac": 16, "getboolean": 16, "getfloat": 16, "optionxform": 16, "set_structural_knowledge_namespac": 16, "switch_expression_type_print": 16, "set_query_backend": [16, 124], "backend": [16, 41, 50, 58, 63], "conveni": [16, 52, 102, 125], "set": [16, 18, 19, 25, 26, 27, 29, 30, 41, 47, 48, 60, 61, 62, 66, 67, 70, 72, 75, 76, 80, 82, 85, 87, 89, 91, 93, 94, 96, 97, 102, 107, 110, 111, 114, 117, 124, 125, 126], "switch_backend": 16, "chang": [16, 68], "enough": 16, "switch": 16, "sinc": [16, 124], "evalu": [16, 42, 94, 104], "so": [16, 67, 75], "need": [16, 25, 27, 59, 67, 95, 118, 121, 124, 126], "reimport": 16, "support": [18, 25, 56, 83, 107, 109, 119, 126], "accord": [18, 25, 30, 82], "For": [18, 30, 67, 76, 91, 94, 102, 104, 119, 125, 126], "encod": [18, 76, 85, 119], "count": [18, 67, 97, 126], "q": [18, 19, 27, 28, 47, 52, 62, 67, 80, 91, 94, 96], "aggregationappl": 18, "number": [18, 20, 21, 30, 36, 41, 52, 59, 60, 63, 70, 96, 102, 110, 111, 117, 126], "green": 18, "huang": 18, "b": [18, 41, 47, 60, 70, 76, 80, 87, 102], "loo": 18, "w": 18, "zhou": 18, "recurs": [18, 20, 21, 27, 42, 58, 67, 74, 104], "fnt": 18, "105": 18, "195": 18, "2012": [18, 82], "builtinaggregationmixin": [18, 60], "function_count": [18, 60], "constant_max": 18, "amax": 18, "constant_mean": 18, "mean": [18, 41, 60, 70, 125], "constant_std": 18, "std": 18, "constant_sum": 18, "sum": [18, 41, 58, 60, 70, 102], "chaseaggregationmixin": 18, "stratifiedchas": 18, "check_constraint": [18, 20, 21, 23, 36, 78], "compute_result_set": [18, 20, 21, 23, 24, 36, 78], "eliminate_already_comput": [18, 20, 21, 23, 24, 36, 78], "instance_upd": [18, 20, 21, 23], "rule": [18, 20, 21, 23, 24, 25, 26, 27, 30, 32, 36, 45, 46, 47, 48, 52, 56, 62, 74, 76, 78, 80, 82, 85, 87, 88, 91, 94, 95, 96, 97], "substitut": [18, 20, 21, 22, 23, 24, 69], "restriction_inst": [18, 20, 21, 23, 24], "consequ": [18, 19, 20, 21, 24, 25, 27, 28, 31, 32, 62, 63, 91, 94, 97], "datalogwithaggregationmixin": [18, 60], "statement_intensional_aggreg": [18, 60], "translatetologicwithaggreg": [18, 60], "build_conjunct": [18, 27, 28, 60, 66, 78], "build_conjunction_from_expression_block": [18, 27, 28, 60], "build_disjunct": [18, 27, 28, 60, 66, 78], "build_neg": [18, 27, 28, 60, 66, 78], "transform_function_application_consequent_to_aggreg": [18, 60], "translate_logic_oper": [18, 27, 28, 60, 66, 78], "translate_true_impl": [18, 27, 28, 60], "is_builtin_aggregation_functor": 18, "functor": [18, 23, 25, 27, 32, 34, 85, 86, 88], "compil": [19, 25, 58, 71, 97, 102], "intension": [19, 25, 27, 76, 95], "builtin": [19, 25, 31, 60, 78, 80, 88, 105], "datalogprogrammixin": [19, 25], "expressionwalk": [19, 24, 25, 27, 30, 47, 53, 56, 63, 68, 80, 87, 88, 90, 91, 93, 97, 101, 102], "included_const": [19, 25, 31, 60, 78, 80, 88, 104], "included_funct": [19, 25, 31, 60, 78, 80, 88, 104], "add_extensional_predicate_from_tupl": [19, 25, 31, 60, 78, 80, 88], "add_included_constants_and_functions_to_symbol_t": [19, 25, 31, 60, 78, 80, 88, 104], "extensional_databas": [19, 25, 31, 60, 78, 80, 88], "intensional_databas": [19, 25, 31, 60, 78, 80, 88], "new_set": [19, 25, 31, 60, 78, 80, 88, 104], "pop_scop": [19, 25, 31, 60, 71, 78, 80, 88, 104], "predicate_term": [19, 25, 31, 60, 78, 80, 88], "process_express": [19, 24, 25, 27, 30, 31, 34, 47, 53, 56, 58, 60, 63, 68, 78, 80, 87, 88, 90, 91, 93, 97, 101, 102, 104], "process_iterable_argu": [19, 24, 25, 27, 30, 31, 34, 47, 53, 56, 58, 60, 63, 68, 78, 80, 87, 88, 90, 91, 93, 97, 101, 102, 104], "push_scop": [19, 25, 31, 60, 71, 78, 80, 88, 104], "statement_intension": [19, 25, 31, 60, 78, 80, 88], "protected_keyword": [19, 25, 31, 60, 78, 80, 88], "cast": [19, 25, 28, 30, 31, 41, 46, 47, 52, 53, 57, 58, 59, 60, 61, 67, 70, 76, 86, 88, 89, 102], "change_typ": [19, 25, 28, 30, 31, 46, 47, 52, 53, 58, 67, 76, 86, 88, 89, 102], "get_wrapped_attribut": [19, 25, 28, 30, 31, 46, 47, 52, 53, 58, 67, 76, 86, 88, 89, 102], "anteced": [19, 25, 26, 27, 28, 30, 31, 48, 62, 63, 80], "logicoper": [19, 25, 28, 67, 89, 96], "form": [19, 28, 30, 31, 47, 48, 58, 62, 67, 68, 76, 82, 91, 94, 96, 97, 119], "nullconst": 19, "auto_infer_typ": 19, "verify_typ": [19, 86, 88], "undefin": 19, "unionofconjunctivequeri": 19, "wrappedrelationalalgebraset": [19, 35], "row_typ": [19, 20, 21, 35, 119], "verify_row_typ": [19, 35], "wrappedrelationalalgebrasetmixin": [19, 35], "relationalalgebraset": [19, 35, 48, 100, 102, 107, 110, 111, 114], "ariti": [19, 35, 107, 110, 111, 114], "column": [19, 20, 24, 27, 35, 47, 59, 75, 76, 89, 91, 101, 102, 107, 110, 111, 114, 119], "as_numpy_arrai": [19, 35, 107, 110, 111, 114], "as_pandas_datafram": [19, 35, 107, 110, 114], "copi": [19, 29, 35, 107, 109, 110, 111, 114, 124], "create_view_from": [19, 35, 107, 110, 111, 114], "cross_product": [19, 35, 107, 110, 111, 114], "dee": [19, 35, 107, 110, 111, 114], "discard": [19, 29, 35, 107, 109, 110, 111, 114], "dum": [19, 35, 107, 110, 111, 114], "equijoin": [19, 35, 101, 102, 107, 110, 111, 114], "groupbi": [19, 35, 102, 107, 110, 111, 114], "is_constant_tuple_or_tuple_of_const": [19, 35], "is_de": [19, 35, 107, 110, 111, 114], "is_dum": [19, 35, 107, 110, 111, 114], "is_empti": [19, 29, 35, 107, 110, 111, 114], "itervalu": [19, 35, 107, 110, 111, 114], "unwrap": [19, 35], "chasegener": [20, 21, 23, 78], "naiv": [20, 21], "algorithm": [20, 21, 24, 26, 30, 33, 34, 67], "aggregate_tuple_type_into_row_typ": [20, 21, 23, 36, 78], "build_chase_tre": [20, 21, 23, 36, 78], "build_nodes_from_rul": [20, 21, 23, 36, 78], "chase_step": [20, 21, 23, 24, 36, 78], "compose_all_subtitut": [20, 21, 23, 36, 78], "compose_substitutions_ignoring_conflict": [20, 21, 23, 36, 78], "compose_substitutions_no_conflict": [20, 21, 23, 36, 78], "compute_instance_upd": [20, 21, 23, 36, 78], "compute_new_tuple_and_typ": [20, 21, 23, 36, 78], "evaluate_builtin": [20, 21, 23, 36, 78], "evaluate_builtins_pred": [20, 21, 23, 36, 78], "extract_rule_pred": [20, 21, 23, 36, 78], "extract_variable_argu": [20, 21, 23, 36, 78], "get_args_to_project": [20, 21, 23, 36, 78], "infer_iterable_subtyp": [20, 21, 23, 36, 78], "is_containment_of_symbol_in_const": [20, 21, 23, 36, 78], "is_equality_between_constant_and_symbol": [20, 21, 23, 36, 78], "unify_builtin_substitut": [20, 21, 23, 36, 78], "unify_builtin_substitution_contain": [20, 21, 23, 36, 78], "unify_builtin_substitution_equ": [20, 21, 23, 36, 78], "tuple_typ": [20, 21], "chase_set": [20, 21], "static": [20, 21, 22, 23, 24, 27, 34, 35, 48, 61, 95, 99, 100, 101, 104], "new_substitut": [20, 21], "subs_kei": [20, 21], "new_tupl": [20, 21], "builtin_pred": [20, 21, 23], "predicates_to_evalu": [20, 21], "predic": [20, 21, 22, 23, 26, 27, 30, 41, 45, 46, 53, 58, 60, 61, 62, 63, 66, 67, 68, 70, 75, 76, 80, 85, 89, 95, 96, 104], "builtin_predicates_": [20, 21, 23], "evaluated_pred": [20, 21], "chasemgumixin": [20, 22, 23, 36], "obtain_substitut": [20, 22, 23, 24, 36, 78], "unify_substitut": [20, 22, 23], "args_to_project": [20, 22, 23, 24], "rule_predicates_iter": [20, 22, 23, 24], "chasena": [20, 21, 36, 78], "execute_chas": [20, 21, 23, 36, 78], "chasenamedrelationalalgebramixin": [20, 24, 78], "conjunct": [20, 24, 26, 27, 28, 30, 31, 33, 47, 48, 56, 63, 66, 67, 68, 76, 80, 82, 85, 94, 96], "solv": [20, 24, 25, 27, 30, 82, 87, 91, 94, 95, 97, 118, 126], "8": [20, 24, 34, 80, 107, 110, 114, 124], "abiteboul": [20, 24, 34, 67, 102, 125], "_": [20, 24], "algebra": [20, 24, 82, 89, 91, 94, 100, 101, 102], "hull": [20, 24, 34, 67, 102, 125], "v": [20, 24, 30, 34, 76, 80, 102, 125], "vianu": [20, 24, 34, 67, 102, 125], "foundat": [20, 24, 34, 67, 102, 125], "addison": [20, 24, 34, 102, 125], "weslei": [20, 24, 34, 102, 125], "1995": [20, 24, 34, 102, 125], "rewrite_antecedent_equ": [20, 24, 36, 78], "rewrite_constants_in_consequ": [20, 24, 36, 78], "rewrite_rule_consequent_constants_to_equ": [20, 24, 36, 78], "translate_conjunction_to_named_ra": [20, 24, 36, 78], "new_arg": [20, 24, 105], "new_equ": [20, 24], "chasenod": [20, 21, 36], "alia": [20, 21, 36, 52, 60, 98, 104], "field": [20, 21, 36, 52, 57], "chasenonrecurs": [20, 21], "non": [20, 21, 26, 27, 30, 74, 76, 82, 94, 102, 104], "chaserelationalalgebrapluscerimixin": [20, 23, 24, 36], "ceri": [20, 24], "unnam": [20, 24, 102], "posit": [20, 24, 25, 30, 67, 74, 96], "g": [20, 24, 33, 62, 63, 95, 125], "gottlob": [20, 24, 33], "lavazza": [20, 24], "proceed": [20, 24, 94], "12th": [20, 24], "intern": [20, 24], "confer": [20, 24], "veri": [20, 24, 124, 125], "larg": [20, 24, 61], "morgan": [20, 24, 125], "kaufmann": [20, 24], "inc": [20, 24], "san": [20, 24], "francisco": [20, 24], "ca": [20, 24], "usa": [20, 24, 94], "1986": [20, 24], "acm": [20, 24, 30, 33, 82, 94], "citat": [20, 24], "cfm": [20, 24], "645913": [20, 24], "671468": [20, 24], "vldb": [20, 24, 94], "86": [20, 24, 30], "pp": [20, 24, 30], "395": [20, 24], "402": [20, 24], "compute_substitut": [20, 23, 24], "translate_pred": [20, 23, 24], "translate_predicate_process_argu": [20, 23, 24], "translate_predicate_process_argument_symbol": [20, 23, 24], "translate_to_ra_plu": [20, 23, 24], "projected_var_nam": [20, 24], "pred_ra": [20, 24], "local_select": [20, 24], "local_column": [20, 24], "global_column": [20, 24], "chasesemina": [20, 21, 23], "semi": [20, 21], "linear": [20, 21, 27], "per_rule_upd": [20, 21, 23], "chasestratifi": [20, 21], "pick_chase_instance_for_stratum": [20, 21, 36], "stratum": [20, 21], "neurolangnonlinearprogramexcept": [20, 21], "neurolangexcept": [20, 21, 58, 67, 84, 104, 105], "neurolangprogramhasloopsexcept": [20, 21], "mgu": [20, 69], "negat": [20, 26, 27, 28, 33, 63, 64, 66, 67, 68, 94, 96, 125], "datalogchaseneg": 23, "datalogchasenegationgener": 23, "datalogchasenegationmgumixin": 23, "check_non_linear": 23, "evaluate_negative_builtin": 23, "obtain_negative_substitut": 23, "unify_negative_builtin_substitut": 23, "unify_negative_substitut": 23, "negativefactconstraint": 23, "head_functor": 23, "recursive_cal": 23, "negative_pred": 23, "datalogchasenegationrelationalalgebramixin": 23, "namedrelationalalgebraoptimis": 24, "pushinselect": [24, 91, 97, 101], "push_selection_in_extended_project": [24, 91, 97, 101], "push_selection_in_groupbi": [24, 91, 97, 101], "push_selection_in_left": [24, 91, 97, 101], "push_selection_in_leftnaturaljoin_left": [24, 91, 97, 101], "push_selection_in_leftnaturaljoin_right": [24, 91, 97, 101], "push_selection_in_project": [24, 91, 97, 101], "push_selection_in_replace_nul": [24, 91, 97, 101], "push_selection_in_right": [24, 91, 97, 101], "constraint": [25, 32, 41, 45, 46, 60, 63, 70], "datalogconstraintsmixin": 25, "add_existential_rul": [25, 60], "add_logic_constraint": [25, 60], "categorized_constraint": 25, "formula": [25, 27, 28, 34, 48, 67, 94, 96, 102, 121], "existential_rul": 25, "get_constraint": 25, "contraint": [25, 32], "dictionari": [25, 32, 41, 60, 62, 70, 104], "kei": [25, 80, 89, 104, 107, 110, 114, 117], "__constraints__": [25, 60], "set_constraint": 25, "receiv": [25, 58, 67], "organ": 25, "charg": [25, 32], "both": [25, 32, 102], "tabl": [25, 59, 61, 62, 80, 83, 89, 91, 104, 118, 126], "global": [25, 45, 46], "variabl": [25, 27, 30, 48, 61, 66, 67, 68, 74, 76, 80, 83, 85, 91, 94, 96, 125], "categorized_contraint": 25, "xrewrit": [25, 33], "optim": [25, 30, 33, 124], "associ": [25, 59, 61, 76, 85, 125], "datalogconstraintsprogram": [25, 60], "rightimpl": [25, 63], "bodi": [25, 27, 30, 45, 46, 47, 58, 61, 67, 82, 86, 95], "head": [25, 27, 30, 47, 52, 56, 58, 67, 76, 80, 85, 91, 95, 104], "invert": [25, 31, 63], "reachable_cod": [25, 27], "reachabl": [25, 27, 126], "edb": [25, 27], "idb": [25, 27, 95], "aggregatedvariablereplacedbyconstanterror": 26, "forbiddenexpressionerror": 26, "boundaggregationapplicationerror": 26, "invalidmagicseterror": 26, "magic": [26, 30, 87], "doe": [26, 67, 76], "argument": [26, 30, 45, 46, 47, 62, 63, 67, 69, 75, 104, 107, 109, 122], "bound": [26, 30, 48], "typic": [26, 41, 60, 61, 62, 70], "signal": [26, 58], "cannot": [26, 87, 118], "appli": [26, 67, 75, 94, 102], "subclass": [26, 58, 63, 119], "should": [26, 30, 58, 59, 61, 74, 75, 82, 85, 91, 94, 95, 97, 102, 121], "specifi": [26, 30, 41, 58, 60, 61, 62, 70, 119], "reason": 26, "why": 26, "negationinmagicsetsrewriteerror": 26, "noconstantpredicatefounderror": 26, "onli": [26, 27, 47, 56, 59, 62, 66, 67, 68, 76, 80, 85, 91, 94, 96, 104, 119, 125], "least": [26, 27, 30], "nonconjunctiveantecedentinmagicsetserror": 26, "collapseconjunctiveanteced": 27, "collapseconjunct": [27, 56, 68], "implication_with_collapsable_conjunctive_anteced": 27, "equalitysymbollefthandsidenormalisemixin": [27, 60], "reverse_equ": [27, 60], "sort_antecedent_equ": [27, 60], "equal": [27, 47, 48, 64, 85, 107, 110, 114, 121], "flattenqueryinnonrecursiveucq": 27, "flatten": 27, "ucq": [27, 96], "builtin_appl": 27, "negation_function_appl": 27, "query_pred": [27, 89, 97], "fa": [27, 53, 102], "qpred": 27, "freshenfreevari": 27, "implication_with_free_vari": 27, "headconstanttobodyequ": 27, "transform": [27, 41, 47, 50, 70, 87, 91, 99], "whose": [27, 41, 60, 70, 80, 96, 102], "term": [27, 31, 45, 46, 47, 59, 61, 80, 91, 102, 110, 111], "equival": [27, 47, 67, 68, 96, 102], "A": [27, 30, 33, 41, 47, 50, 55, 56, 63, 76, 85, 87, 91, 94, 95, 96, 104, 107, 110, 114, 117, 119, 125], "fresh": [27, 30, 41, 46, 47, 60, 61, 68, 70, 88, 89, 91, 96], "_f_": 27, "implication_with_constant_term_in_head": 27, "headrepeatedvariabletobodyequ": 27, "repeat": [27, 68, 85, 91, 94, 102], "without": [27, 67, 74, 94], "replac": [27, 47, 58, 68, 85, 87, 107, 109], "repetit": 27, "implication_with_repeated_variable_in_head": 27, "removeduplicatedantecedentpred": 27, "implication_with_duplicated_antecedent_pred": 27, "translatetodatalogsemant": 27, "unifyvariableequ": 27, "unifyvariableequalitiesmixin": 27, "add_equality_with_const": 27, "add_equality_with_symbol": 27, "build_substitutions_from_equ": 27, "extract_and_unify_var_eqs_in_impl": 27, "extract_variable_equ": 27, "eq_set": 27, "symb": 27, "const": 27, "all_body_preds_in_set": 27, "predicate_set": 27, "functor_set": 27, "prediacte_set": 27, "any_body_preds_in_set": 27, "conjunct_formula": 27, "f1": [27, 47], "f2": [27, 47], "two": [27, 32, 47, 62, 69, 85, 91, 96, 121, 124, 125, 126], "conjunct_if_need": 27, "more": [27, 56, 58, 107, 122, 125, 126], "than": [27, 105, 117, 121], "If": [27, 30, 41, 47, 50, 59, 61, 62, 63, 67, 69, 75, 91, 94, 118, 124], "empti": [27, 67], "pass": [27, 30, 42, 58, 59, 85, 104, 119], "instead": [27, 76, 95, 124], "dependency_matrix": 27, "dependeci": 27, "matrix": [27, 41, 50, 59, 70, 72, 99], "subset": 27, "meant": 27, "repres": [27, 41, 42, 50, 60, 63, 67, 70, 76, 85, 89, 100, 102, 105], "won": 27, "symbolnotfounderror": 27, "found": [27, 61], "depend": [27, 62, 78, 80, 87, 95, 126], "idb_symbol": 27, "ndarrai": [27, 61], "row": [27, 59, 76, 119], "origin": [27, 99, 105], "It": [27, 31, 59, 63, 76, 80, 100, 117, 118, 119, 121, 124], "adjac": 27, "graph": 27, "enforce_conjunctive_anteced": 27, "extract_logic_atom": [27, 66], "atom": [27, 41, 47, 50, 63, 66, 67, 68, 85, 89, 93, 94], "know": [27, 66], "format": [27, 61, 62, 66, 68], "lexicograph": [27, 66, 85], "extract_logic_free_vari": [27, 66], "free": [27, 66, 67, 74, 96], "extract_logic_pred": [27, 66], "flatten_queri": 27, "construct": [27, 58, 61, 75, 80, 85], "todo": [27, 76], "handl": [27, 47], "disjunct": [27, 33, 66, 67, 68, 82, 96], "implication_has_existential_variable_in_anteced": 27, "existenti": [27, 61, 66, 67, 68, 94, 96, 125], "is_aggregation_pred": 27, "is_aggregation_rul": 27, "is_conjunctive_express": 27, "is_conjunctive_expression_with_nested_pred": 27, "is_ground_pred": 27, "is_linear_rul": 27, "is_rule_with_builtin": 27, "known_builtin": [27, 85], "is_symb_to_const_equ": 27, "is_to_be_sorted_equ": 27, "is_var_equality_to_var_or_const": 27, "maybe_deconjunct_single_pr": 27, "remov": [27, 29, 68, 75, 91, 96, 107, 109, 110, 111, 114], "singl": [27, 76, 85, 89, 102], "unchang": 27, "multipl": [27, 41, 55, 59, 60, 70, 76, 85, 102], "alreadi": [27, 67, 75, 125], "maybe_disjunct": 27, "program_has_loop": 27, "program_represent": 27, "remove_conjunction_dupl": 27, "stratifi": [27, 30, 95], "datalog_inst": 27, "block": [27, 30, 67, 76, 117], "stratif": 27, "boolean": [27, 58, 76], "strata": 27, "wa": [27, 47, 67, 91, 104], "stratisfi": 27, "last": 27, "stratify_obtain_facts_stratum": 27, "to_process": 27, "seen": [27, 63, 85], "stratify_obtain_new_stratum": 27, "narylogicoper": [28, 68, 96], "unarylogicoper": 28, "expression_block": [28, 97], "frozeninst": 29, "frozenmapinst": 29, "as_map": 29, "as_set": 29, "like": [29, 87, 119, 124, 125], "provid": [29, 48, 61], "view": 29, "frozensetinst": 29, "mapinst": 29, "mutablemap": [29, 106], "setinst": 29, "mutableset": [29, 107, 109, 111], "do": [29, 41, 50, 60, 63, 67, 70, 107, 109, 110, 111, 114, 121, 124], "absent": [29, 107, 109, 110, 111, 114], "rewrit": [30, 33, 56, 87, 101], "f": [30, 80, 91, 96], "bancilhon": 30, "maier": [30, 125], "sagiv": 30, "ullman": [30, 102], "pod": [30, 94], "adornedsymbol": 30, "adorn": 30, "lefttorightsip": 30, "sip": 30, "balbin": 30, "h": 30, "iif": 30, "liter": 30, "isaac": 30, "graem": 30, "port": 30, "kotagiri": 30, "ramamohanarao": 30, "krishnamurthi": 30, "meenakshi": 30, "1991": 30, "effici": [30, 94, 126], "bottom": 30, "log": [30, 57, 107, 122], "11": 30, "305": 30, "replaceadornedsymbolwalk": 30, "replace_adorned_symbol": 30, "abc": 30, "sidewai": 30, "inform": [30, 32, 63, 105, 119, 125], "strategi": 30, "formal": [30, 102, 125], "what": 30, "anoth": [30, 67, 85, 87, 95], "creates_arc": 30, "adorned_head": 30, "arc": 30, "try": [30, 119], "call": [30, 32, 42, 58, 76, 118, 119, 124], "_create_arc": 30, "tail": 30, "adorn_anteced": 30, "rewritten_rul": 30, "adorn_cod": 30, "rewritten": [30, 85, 96], "techniqu": 30, "sips_class": 30, "create_balbin_magic_rul": 30, "adorned_rul": 30, "ensembl": 30, "pm": 30, "includ": [30, 49, 59, 100], "pseudo": 30, "create_magic_query_init": 30, "constant_pred": [30, 45, 46], "initi": [30, 31, 85, 87, 118], "magic_p": 30, "t_d": 30, "vector": [30, 99], "adornedexpress": 30, "edb_with_prob_symbol": 30, "magic_pred": 30, "bf": 30, "otherwis": [30, 62, 67, 76, 118], "magic_rewrit": 30, "311": 30, "reachable_adorned_cod": 30, "datalogprogramneg": 31, "datalogprogramnegationmixin": [31, 60, 80], "negation_const": [31, 60, 80], "negative_fact": [31, 60, 80], "possibl": [31, 41, 60, 68, 70, 76, 91, 96, 124], "when": [31, 47, 58, 61, 82, 87, 94, 95, 102, 107, 117, 119, 122], "normal": [31, 67, 68, 96, 102], "negativefact": 31, "neg": [31, 68, 96, 97], "compos": 31, "necessari": 31, "is_conjunctive_neg": 31, "ontologypars": 32, "connector_symbol": [32, 41, 60, 70], "load_format": 32, "xml": 32, "deriv": [32, 41, 60, 62, 70], "ontolog": [32, 33, 41, 60, 70, 125], "entiti": 32, "level": [32, 47, 67, 107, 122], "parse_ontolog": 32, "main": [32, 126], "One": [32, 76], "restrict": [32, 67], "somevaluesfrom": 32, "rest": 32, "extractfreevariablesrightimplicationwalk": 33, "extractfreevariableswalk": [33, 66, 68], "extract_variables_fa": [33, 66, 68], "extract_variables_q": [33, 66, 68], "extract_variables_": [33, 66, 68], "extract_variables_symbol": [33, 66, 68], "logic_oper": [33, 66, 68], "quantifi": [33, 58, 61, 66, 67, 68, 94, 96, 104, 125], "ontologyrewrit": 33, "union_of_constraint": 33, "factorization_step": 33, "rewriting_step": 33, "propos": 33, "orsi": 33, "pieri": 33, "transact": 33, "system": [33, 94, 102, 105, 123, 124], "vol": 33, "39": 33, "mai": [33, 80, 85, 107, 110, 114, 124], "2014": [33, 94], "q0": 33, "sigma": 33, "rename_count": 33, "translatetonamedra": 34, "partial": [34, 104], "classify_formulas_obtain_named_function_appl": 34, "classify_formulas_obtain_nam": 34, "eval_lambda": [34, 58, 60, 78, 104], "evaluate_funct": [34, 58, 60, 78, 104], "evaluate_function_infer_typ": [34, 58, 60, 78, 104], "evaluate_project": [34, 58, 60, 78, 104], "generate_ra_express": 34, "is_col_to_const_equ": 34, "obtain_negative_column": 34, "process_destroy_formula": 34, "process_equality_formula": 34, "process_equality_formulas_as_extended_project": 34, "process_equality_formulas_const": 34, "process_extended_projection_formula": 34, "process_negative_formula": 34, "process_positive_formula": 34, "process_selection_formula": 34, "translate_builtin_fa": 34, "translate_builtin_fa_const": 34, "translate_conjunct": 34, "translate_disjunct": 34, "translate_eq": 34, "translate_eq_c_c": 34, "translate_eq_c_fa": 34, "translate_eq_c_": 34, "translate_eq_fa_": 34, "translate_eq_s_c": 34, "translate_existential_pred": 34, "translate_fa": 34, "translate_neg": 34, "classified_formula": 34, "select": [34, 61, 101, 102, 107, 110, 111, 114], "selection_column": [34, 107, 110, 111, 114], "named_arg": 34, "neg_formula": 34, "output": [34, 61, 91], "named_column": 34, "wrappednamedrelationalalgebrafrozenset": 35, "wrappednamedrelationalalgebrafrozensetmixin": 35, "namedrelationalalgebrafrozenset": [35, 41, 60, 62, 70, 75, 82, 94, 102, 107, 110, 111, 114], "explod": [35, 107, 110, 111, 114], "extended_project": [35, 90, 97, 102, 107, 110, 111, 114], "left_naturaljoin": [35, 107, 110, 111, 114], "naturaljoin": [35, 102, 107, 110, 111, 114], "projection_to_unnam": [35, 107, 110, 111, 114], "rename_column": [35, 102, 107, 110, 111, 114], "replace_nul": [35, 90, 97, 102, 107, 110, 111, 114], "to_unnam": [35, 107, 110, 111, 114], "wrappedrelationalalgebrasetbasemixin": 35, "wrappedrelationalalgebrafrozenset": 35, "wrappedrelationalalgebrafrozensetmixin": 35, "relationalalgebrafrozenset": [35, 62, 107, 110, 111, 114, 119], "val": 35, "wrappedtypemap": 35, "backend_2_python": 35, "row_map": 35, "integ": [35, 45, 46, 58, 107, 109], "named_tuple_as_dict": 35, "datalogchas": 36, "datalogchasegener": 36, "datalogchasemgumixin": 36, "datalogchaserelationalalgebramixin": 36, "match": [38, 58, 75, 87, 107, 110, 114], "auxiliari": 40, "affine_matrix": [41, 50, 70, 99], "prebuild_tre": [41, 50, 61, 70, 99], "volumetricbrainregion": [41, 50, 70, 99], "bounding_box": [41, 50, 70, 99], "build_tre": [41, 50, 70, 99], "from_spatial_image_label": [41, 50, 70, 99], "generate_bounding_box": [41, 50, 70, 99], "remove_empty_bounding_box": [41, 50, 70, 99], "to_explicit_vbr": [41, 50, 70, 99], "to_ijk_set": [41, 50, 70, 99], "to_xyz_set": [41, 50, 70, 99], "voxels_ijk": [41, 50, 70, 99], "to_ijk": [41, 50, 70, 99], "ijk": [41, 50, 70, 99], "world": [41, 50, 60, 70, 99], "background_valu": [41, 50, 70, 99], "add_probabilistic_choice_from_tupl": [41, 60, 70, 80], "type_": [41, 60, 61, 62, 70, 105, 106], "attach": [41, 55, 60, 70, 76, 80, 91], "note": [41, 60, 70, 85, 91, 102, 124, 126], "contrari": [41, 60, 61, 70], "among": [41, 60, 70], "mutual": [41, 60, 70, 85], "exclus": [41, 60, 70, 85, 123], "detail": [41, 58, 60, 70, 119], "constitut": [41, 60, 70], "must": [41, 60, 67, 70, 91, 94, 97, 102, 107, 110, 114], "infer": [41, 60, 61, 62, 70, 82, 85, 91, 94, 105], "fe": [41, 60, 61, 62, 70], "distributiondoesnotsumtooneerror": [41, 60, 70, 84], "add_probabilistic_facts_from_tupl": [41, 60, 70, 80], "independ": [41, 60, 70, 76, 89], "uniform": [41, 60, 70], "over": [41, 52, 60, 67, 70, 126], "everi": [41, 42, 47, 60, 70, 105], "assign": [41, 58, 60, 70], "reman": [41, 60, 70], "load_ontolog": [41, 60, 70], "connector_symbol_nam": [41, 60, 70], "pars": [41, 42, 52, 55, 58, 60, 70, 119, 124], "store": [41, 59, 60, 70, 80], "them": [41, 56, 60, 70, 87], "randomli": [41, 60, 61, 70], "solve_al": [41, 60, 62, 70, 126], "predicate_nam": [41, 60, 62, 70], "content": [41, 60, 62, 70, 123], "abstract": [41, 42, 58, 60, 70, 107, 110, 117], "similar": [41, 60, 70], "though": [41, 60, 70], "natur": [41, 44, 55, 60, 62, 70], "intent": [41, 60, 62, 70, 95], "query_build": [41, 50, 61, 63], "querybuilderbas": [41, 50, 61, 62, 63], "symbol_nam": [41, 50, 61, 63], "Its": [41, 50, 63, 85], "most": [41, 50, 63, 69, 117], "recurr": [41, 50, 63], "neurolang_symbol": [41, 50, 63], "valueerror": [41, 50, 61, 63, 107, 109], "doesn": [41, 50, 63, 69], "sugar": [41, 44], "natural_syntax": [41, 44], "standard_syntax": [41, 44], "syntax_preprocess": [41, 44], "chart_pars": [41, 51], "drs_builder": [41, 51], "english_grammar": [41, 51], "translate_to_dl": [41, 51], "syntax": [42, 44, 47, 58, 62, 80, 124, 125], "text": [42, 45, 46, 52, 85], "languag": [42, 55, 62, 85, 87, 95, 123, 125], "walker": [42, 58, 87, 91, 102], "abl": [42, 125], "go": [42, 58, 96], "astnod": [42, 58], "astwalk": [42, 58], "translat": [42, 47, 49, 55, 58, 63, 67, 82, 91, 102], "input": [42, 61, 96], "child": [42, 126], "itself": [42, 61, 76, 80], "simpli": [42, 95, 124], "tatsuastconvert": 43, "parser": [44, 45, 46, 58], "datalogsemant": [45, 46], "local": [45, 46, 124], "arithmetic_oper": [45, 46, 102], "cmd_arg": [45, 46], "cmd_identifi": [45, 46], "comparison": [45, 46, 48, 58, 121], "existential_pred": [45, 46, 66, 68, 104], "ext_identifi": [45, 46], "factor": [45, 46, 68], "function_appl": [45, 46, 58, 66, 69], "head_pred": [45, 46], "keyword_arg": [45, 46], "keyword_item": [45, 46], "lambda_express": [45, 46], "negated_pred": [45, 46], "pos_arg": [45, 46], "pos_item": [45, 46], "probabilistic_express": 45, "probabilistic_fact": [45, 46, 60, 80], "probabilistic_rul": [45, 46], "signed_int_ext_identifi": [45, 46], "statement": [45, 46, 58, 104], "statement_funct": [45, 46], "externalsymbol": 46, "syntact": 47, "processor": 47, "set_symbol": 47, "column_posit": 47, "definit": [47, 55, 58, 76, 85, 86, 102, 125], "convertattrstoselectbycolumn": 47, "getattr": 47, "selectbyfirstcolumn": 47, "convers": [47, 64], "recognisessugar": 47, "recognis": 47, "s_sugar": 47, "selector": 47, "translatecolumnstoatom": 47, "case": [47, 54, 56, 58, 67, 91, 95, 102, 123, 124, 125], "specif": [47, 61, 74, 76, 96, 119, 124, 125, 126], "fresh0": 47, "fresh1": 47, "fresh2": 47, "application_column_sugar": 47, "conjunction_column_sugar": 47, "implication_column_sugar": 47, "translateheadconstantstoequ": 47, "head_constants_to_equ": 47, "translateprobabilisticquerymixin": [47, 60], "conditional_queri": [47, 60], "within_language_prob_queri": [47, 60, 80], "rewrite_conditional_queri": 47, "impl": [47, 53, 68, 87, 91], "p1": 47, "p2": 47, "translatequerybasedprobabilisticfactmixin": [47, 60], "query_based_probfact_wannab": [47, 60], "translatessugartoselectbycolumn": 47, "replace_s_getattr_by_first_column": 47, "translateselectbyfirstcolumn": 47, "eq": [47, 97], "implication_select_by_left_head": 47, "detecteuclideandistanceboundmatrix": 48, "detect": 48, "special": [48, 105], "reserv": 48, "dimension": 48, "upper": 48, "point": [48, 72, 99, 102, 126], "therebi": 48, "consid": [48, 63, 85, 96], "rang": [48, 67, 107, 110, 114], "r2": 48, "any_other_express": 48, "get_distance_upper_bound": 48, "get_range_pred_for_coord": 48, "get_var_to_euclidean_equ": 48, "coord_arg": 48, "translateeuclideandistanceboundmatrixmixin": [48, 60], "euclidean_spatial_bound": [48, 60], "safe_range_pred_to_coord_set": [48, 60], "solve_spatial_bound": [48, 60], "upper_bound_to_max_dist": [48, 60], "range_pr": 48, "functionappl": [48, 86, 88, 93, 96, 102, 104], "first_coord_arrai": 48, "arrai": [48, 55, 61, 72, 126], "second_coord_arrai": 48, "max_dist": 48, "upper_bound": 48, "probfol2datalogmixin": [49, 60], "marg": [49, 91, 94, 97], "translate_impl": [49, 60, 67], "translate_marg_queri": [49, 60], "imp": [49, 67], "chart": 52, "chartpars": 52, "grammar": [52, 53, 55, 58], "lexicon": 52, "recogn": 52, "edg": [52, 76], "complet": [52, 58, 102, 124], "used_edg": 52, "unif": [52, 91, 105], "dictlexicon": [52, 54], "get_mean": [52, 54], "token": [52, 54, 55], "word": [52, 59, 124], "rootrul": 52, "constitu": 52, "quot": 52, "next_token": 52, "yield_comma": 52, "yield_quot": 52, "yield_word": 52, "span": 52, "refer": [53, 102], "drs2fol": 53, "unary_conjunct": 53, "conj": 53, "drsbuilder": 53, "comma_and": 53, "float_dr": 53, "indefinite_noun_phras": 53, "join_dr": 53, "lit_noun_phras": 53, "proper_nam": 53, "quoted_pred": 53, "sentence_list": 53, "simple_and": 53, "single_sentence_list": 53, "var_apposit": 53, "var_noun_phras": 53, "sl": 53, "indent": [53, 119], "tab": 53, "englishbaselexicon": 54, "nom": 54, "notnom": 54, "gen": 54, "femal": 54, "male": 54, "thing": 54, "num": 54, "plural": 54, "singular": 54, "ambiguoussentenceexcept": 55, "sentenc": [55, 56, 67], "interpret": [55, 56, 61, 62, 126], "parseexcept": 55, "problem": 55, "got": 55, "couldnotparseexcept": 55, "imposs": [55, 80], "grammarexcept": 55, "parsedatalogpredicateexcept": 55, "embed": 55, "fragment": 55, "insid": [55, 66, 67], "control": 55, "dure": [55, 64], "stage": 55, "tokenizeexcept": 55, "translatetodatalogexcept": 55, "transformintoconjunctionofdatalogsent": 56, "distributeimplicationswithconjunctivehead": [56, 68], "distributeuniversalquantifi": [56, 68], "allow": [56, 80, 82, 102, 124, 126], "flexibl": [56, 102], "wai": [56, 124], "becaus": [56, 59, 67, 76], "properli": 56, "distribut": [56, 68, 76, 124], "distribute_implication_with_conjunctive_head": [56, 68], "distribute_universal_quantifi": [56, 68], "translatetodatalog": 56, "translate_block": 56, "translate_logical_sent": 56, "translate_sent": 56, "numpyfunctionsmixin": [57, 60], "common": 57, "mathemat": [57, 125], "neurolangfrontend": 57, "constant_x": 57, "constant_co": 57, "same_kind": 57, "dtype": 57, "subok": 57, "signatur": 57, "extobj": 57, "ufunc": 57, "co": 57, "constant_exp": 57, "constant_log": 57, "constant_log10": 57, "log10": 57, "constant_sin": 57, "sin": 57, "constant_tan": 57, "tan": 57, "written": [58, 125], "obtain": [58, 62, 67, 69, 91, 95, 97, 126], "ba": 58, "existentialpred": 58, "neurolangintermediaterepresent": 58, "type_name_map": 58, "and_test": 58, "dotted_identifi": 58, "negated_argu": 58, "point_float": 58, "power": 58, "product": [58, 101, 102], "neurolangintermediaterepresentationcompil": [58, 71], "get_intermediate_represent": 58, "patternmatch": 58, "find": [58, 95], "goe": 58, "pattern_match": 58, "follow": [58, 67, 76, 80, 94, 124, 126], "everyth": [58, 124], "subtyp": 58, "pattern_0": 58, "pattern_1": 58, "pattern_n": 58, "etc": [58, 61], "length": [58, 102, 118, 119], "n": [58, 59, 76, 82, 94, 97], "ellipsi": 58, "wildcard": 58, "upon": 58, "add_match": 58, "decor": [58, 61], "turn": 58, "ebnf": 58, "tatsu": 58, "studyid": [59, 61], "tfidf": [59, 61], "imaginari": [59, 102, 110, 111], "part": [59, 61, 85, 91, 95, 102, 110, 111], "complex": [59, 102, 110, 111, 125], "real": [59, 102, 110, 111], "fetch_feature_data": 59, "version": [59, 61], "7": [59, 61, 76], "verbos": [59, 125], "convert_study_id": [59, 61], "datafram": [59, 107, 110, 114, 119], "featur": 59, "vocabulari": 59, "compress": 59, "spars": 59, "onc": [59, 102, 124], "reconstruct": 59, "dens": [59, 61], "per": 59, "well": [59, 62, 95, 117, 119, 124], "size": [59, 94, 119], "directori": [59, 61, 124], "save": [59, 61, 124], "param": [59, 119], "_fetch_fil": 59, "fetch_neurosynth_peak_data": 59, "metadata": [59, 61, 119], "also": [59, 67, 118, 124, 125, 126], "therefor": 59, "pr": 59, "table_id": 59, "table_num": 59, "peak_id": 59, "fetch_study_metadata": 59, "own": 59, "line": [59, 124], "doi": [59, 85, 125], "author": 59, "year": 59, "journal": 59, "talaraich": 59, "get_ns_term_study_associ": 59, "pair": [59, 85, 102, 107, 110, 114], "With": [59, 126], "come": 59, "kept": 59, "regionfrontendcplogicsolv": 60, "querybasedprobfacttodetrul": [60, 91], "cplogicmixin": [60, 80], "typedsymboltablemixin": 60, "pchoice_pred_symb": [60, 80, 85], "pfact_pred_symb": [60, 80], "predicate_symbol": [60, 80], "probabilistic_predicate_symbol": [60, 80], "function_anatomical_anterior_of": 60, "function_anatomical_inferior_of": 60, "function_anatomical_posterior_of": 60, "function_anatomical_superior_of": 60, "function_anterior_of": 60, "function_inferior_of": 60, "function_left_of": 60, "function_overlap": 60, "function_posterior_of": 60, "function_regexp": [60, 98], "function_region_union": [60, 98], "function_right_of": 60, "function_superior_of": 60, "marg_impl": [60, 80], "query_based_probafact": [60, 91], "union_with_probabilistic_fact": [60, 80], "union_with_query_based_pfact": [60, 91], "within_language_marg_queri": [60, 80], "within_language_succ_queri": [60, 80], "__pchoice_pred_symb_set_symb__": [60, 80], "__pfact_pred_symb_set_symb__": [60, 80], "manag": [61, 107, 117, 118, 122, 124], "manipul": 61, "brain": [61, 119], "neurosynthmixin": [61, 62], "platform": 61, "scale": 61, "autom": 61, "synthesi": 61, "magnet": 61, "reson": 61, "fmri": 61, "cbma": 61, "load_neurosynth_mni_peaks_report": 61, "pmid": 61, "tf": 61, "idf": 61, "logic_program": 61, "typicali": 61, "overrid": 61, "automat": 61, "latter": [61, 62], "p_ir": [61, 62], "l1": [61, 62], "l2": [61, 62], "nan": [61, 62], "l3": [61, 62], "quantified_vari": 61, "univers": [61, 67, 68, 125], "cosid": 61, "satifi": 61, "proposit": [61, 125], "quatifi": 61, "del_symbol": 61, "delet": 61, "could": [61, 62, 89, 119, 124, 125], "querysymbolsproxi": 61, "stai": 61, "exit": 61, "yield": [61, 80, 117], "mode": 61, "fly": 61, "leq": 61, "get_symbol": [61, 118], "retriev": 61, "via": 61, "either": [61, 102, 117, 124, 125], "correct": 61, "new_symbol": 61, "disappear": 61, "typedsymbolt": [61, 106], "known": 61, "regionmixin": [61, 62], "atlas": 61, "dataobjimag": 61, "group": [61, 85, 102], "dataobj": 61, "ofinterest": 61, "add_region": 61, "add_region_set": 61, "region_set": [61, 98, 99], "create_region": 61, "interest": 61, "put": [61, 117], "make_implicit_regions_explicit": 61, "notimplementederror": 61, "now": [61, 104, 124, 126], "new_region_symbol": 61, "sphere": 61, "radiu": [61, 99], "spheric": 61, "3d": 61, "basic_represent": 62, "add_constraint": [62, 126], "befor": [62, 64, 75, 107, 122, 124], "crate": 62, "execute_datalog_program": 62, "classic": [62, 125], "against": 62, "prog": 62, "execute_nat_datalog_program": 62, "query_express": 62, "predicate_parameter_nam": 62, "get": [62, 85, 105, 118, 119, 123, 124], "perform": [62, 107, 122, 124, 125], "inferenti": 62, "three": 62, "modal": 62, "meet": [62, 64, 124], "memori": [62, 107, 110, 114, 118, 126], "read": 62, "descrpit": 62, "reset_program": 62, "clear": 62, "ergonom": 63, "manner": [63, 117, 125, 126], "attent": 63, "paid": 63, "enunci": 63, "truth": 63, "anyth": 63, "oper": [63, 64, 66, 68, 75, 96, 100, 102, 104, 121], "help": [63, 124], "reprsent": 63, "even": 63, "altern": [63, 125, 126], "infix": 63, "applic": [63, 69, 102, 104, 119, 124], "operator_repr": 63, "built": [63, 80, 126], "or_": [63, 97], "verifi": [63, 68], "denot": [63, 94], "translateexpressiontofrontendexpress": 63, "foral": [63, 94, 125], "right_impl": 63, "walk_function_appl": [63, 66], "op_bind": 63, "op": 63, "rop_bind": 63, "get_intervals_rel": 64, "interv": 64, "other_region_interv": 64, "v_befor": 64, "v_dure": 64, "v_equal": 64, "v_finish": 64, "v_meet": 64, "v_overlap": 64, "v_start": 64, "walklogicprogramaggregatingset": [66, 68], "extractlogicatom": 66, "extract_predicates_fa": 66, "extractlogicpred": 66, "hasexistentialpred": 66, "nari": 66, "logicsolv": 66, "evaluate_conjunct": 66, "evaluate_disjunct": 66, "evaluate_impl": 66, "evaluate_implication_false_anteced": 66, "evaluate_implication_false_consequ": 66, "evaluate_implication_true_anteced": 66, "evaluate_implication_true_consequ": 66, "evaluate_neg": 66, "invers": 66, "ormat": 66, "has_existential_quantifi": 66, "logicexpress": [66, 96], "is_logic_function_appl": 66, "horn": 67, "claus": 67, "hornclaus": 67, "fol": 67, "safe": [67, 82, 89, 117], "furthermor": 67, "theori": [67, 85], "behind": 67, "mostli": 67, "taken": 67, "chapter": [67, 102], "convertsrnftohornclaus": 67, "auxiliar": 67, "convert_srnf_to_horn_claus": 67, "negated_atom": 67, "negated_existenti": [67, 68], "fol2datalogmixin": 67, "fol2datalogtranslationexcept": 67, "hornfact": 67, "movenegationstoatomsorexistentialquantifi": 67, "movenegationstoatom": [67, 68], "negated_conjunct": [67, 68], "negated_disjunct": [67, 68], "negated_neg": [67, 68], "negated_univers": [67, 68], "walk_const": [67, 68, 93], "walk_funct": [67, 68, 93], "walk_nari": [67, 68, 93], "walk_neg": [67, 68, 93], "walk_quantifi": [67, 68, 93], "walk_symbol": [67, 68, 93], "neurolangtranslatetohornclauseexcept": 67, "rangerestrictedvari": 67, "logicexpressionwalk": [67, 68, 93], "involv": [67, 102], "intersect": [67, 72, 102], "translatehornclausestodatalog": 67, "horn_fact": 67, "horn_rul": 67, "_answer_": 67, "requir": [67, 91, 124, 126], "appear": [67, 95, 125], "stack": 67, "remaind": 67, "introduc": [67, 87], "care": [67, 91], "ensur": 67, "To": [67, 125], "alongsid": [67, 76], "precis": 67, "alter": 67, "overal": 67, "convert_to_srnf": 67, "fol_query_to_datalog_program": 67, "throw": 67, "is_safe_rang": 67, "range_restricted_vari": 67, "translate_horn_clauses_to_datalog": 67, "straightforward": 67, "checkconjunctivequerywithneg": 68, "f_app": 68, "collapseconjunctionsmixin": 68, "collapsedisjunct": 68, "collapsedisjunctionsmixin": 68, "desambiguatequantifiedvari": 68, "varial": 68, "nary_logic_oper": [68, 96], "distributeconjunct": 68, "rotat": 68, "split": [68, 96, 125], "distributedisjunct": 68, "uq": 68, "eliminateimpl": 68, "ocurr": 68, "remove_impl": 68, "extractboundvari": 68, "process_function_appl": 68, "process_symbol": 68, "extractconjunctivequerywithneg": 68, "pure_conjunct": 68, "extractfolfreevari": 68, "fonegelogicexpress": 68, "fo": 68, "abort_impl": 68, "abort_universal_pred": 68, "factorquantifiersmixin": 68, "conjunction_with_quantifi": 68, "disjunction_with_quantifi": 68, "freshenvariableswhenquantifi": 68, "free_vari": 68, "replace_variable_in_quantifi": 68, "walk_through_impl": 68, "guaranteeconjunct": 68, "identitywalk": 68, "guarantee_conjunct": 68, "guaranteedisjunct": 68, "makeexistentialsimplicit": 68, "makeuniversalsimplicit": 68, "movenegationstoatomssimpleoperationsmixin": 68, "move": 68, "furthest": 68, "movenegationstoatomsinfoneg": 68, "On": [68, 124], "movequantifiersup": 68, "prenex": 68, "movequantifiersupfoneg": 68, "pushexistentialsdown": 68, "pushexistentialsdownmixin": 68, "dont_push_when_it_can_be_unsaf": 68, "nested_existenti": 68, "push_eliminate_trivial_oper": 68, "push_existential_down": 68, "push_existential_down_disjunct": 68, "remove_trivial_existenti": 68, "pushquantifiersdown": 68, "pushuniversalsdownmixin": 68, "push_universal_down_conjunct": 68, "push_universal_down_conjunction_not_saf": 68, "push_universal_down_disjunct": 68, "remove_trivial_univers": 68, "pushuniversalsdown": 68, "removeduplicatedconjunctsdisjunct": 68, "removeexistentialonvari": 68, "variables_to_elimin": 68, "removeexistentialpred": 68, "removetrivialoper": 68, "remove_double_neg": 68, "remove_singl": 68, "removeuniversalpred": 68, "replacefreesymbolwalk": 68, "symbol_replac": 68, "replacesymbolwalk": 68, "replace_free_vari": 68, "stop_if_bound": 68, "usedquantifi": 68, "convert_to_pnf_with_cnf_matrix": 68, "convert_to_pnf_with_dnf_matrix": 68, "nary_op_has_duplicated_formula": 68, "nary_op": 68, "apply_substitut": 69, "apply_substitution_argu": 69, "compose_substitut": 69, "subs1": 69, "subs2": 69, "merge_substitut": 69, "most_general_unifi": 69, "expression1": 69, "expression2": 69, "unifi": [69, 96, 125], "most_general_unifier_argu": 69, "args1": 69, "args2": 69, "most_general_unifier_extract_argu": 69, "intermediate_represent": 71, "boundari": 72, "boundedaabb": 72, "adjust_direct": 72, "adjust_posit": 72, "adjust_to_bound": 72, "cardinal_til": 72, "contains_tupl": 72, "direction_matrix": 72, "expand": 72, "expand_object": 72, "expand_tupl": 72, "bounded_area": 72, "another_box": 72, "methdispatch": 72, "func": 72, "is_contain": 74, "q1": [74, 96], "q2": [74, 96], "caveat": 74, "judg": 74, "is_contained_rul": 74, "build_always_true_provenance_rel": 75, "prob_col": 75, "proven": [75, 82, 91, 94, 97], "columnstr": [75, 76, 102], "provenancealgebraset": [75, 82, 91, 94, 97], "fresh_name_rel": 75, "ra_set": [75, 85], "rename_columns_for_args_to_match": 75, "src_arg": 75, "dst_arg": 75, "renam": [75, 102, 107, 110, 111, 114], "target": 75, "relationalalgebraoper": [75, 89, 91, 102], "unsolv": 75, "nest": 75, "scheme": 75, "cplogic_to_gm": 75, "gm_provenance_solv": 75, "ground": [75, 76, 85, 86, 96], "problog_solv": 75, "andplatenod": 76, "node_symbol": 76, "platenod": 76, "random": [76, 83, 85], "sens": 76, "cpd": 76, "let": [76, 85, 94, 119, 125], "y_1": 76, "y_n": 76, "AND": [76, 104], "y_i": 76, "bernoulliplatenod": 76, "probability_column": [76, 89], "probabilisticplatenod": 76, "bernoulli": 76, "although": 76, "factori": 76, "margin": 76, "batch": 76, "extra": [76, 97], "would": 76, "_p_": 76, "cplogicgroundingtographicalmodeltransl": 76, "add_plate_nod": 76, "block_of_ground": 76, "parent_node_symbol": 76, "extensional_set_ground": 76, "intensional_rule_ground": 76, "probabilistic_choice_ground": 76, "ari": 76, "probfact_set_ground": 76, "graphicalmodel": 76, "get_nod": 76, "get_parent_node_symbol": 76, "narychoiceplatenod": 76, "chosen": 76, "cp": [76, 82, 85, 91, 94, 97], "event": [76, 85], "a_1": 76, "p_1": 76, "a_n": 76, "p_n": 76, "p_2": 76, "a_2": 76, "narychoiceresultplatenod": 76, "is_extensional_ground": 76, "build_extensional_ground": 78, "pred_symb": [78, 85], "tuple_set": 78, "build_ground": 78, "cpl_program": [78, 82, 89, 91, 94, 97], "dl_instanc": 78, "build_pchoice_ground": 78, "build_pfact_grounding_from_set": 78, "build_probabilistic_ground": 78, "grounding_cl": 78, "build_rule_ground": 78, "st_item": 78, "cplogic_to_datalog": 78, "get_grounding_depend": 78, "get_grounding_pred_symb": 78, "grounded_exp": 78, "get_grounding_pred": 78, "ground_cplogic_program": 78, "remove_probability_column": 78, "topological_sort_ground": 78, "topological_sort_groundings_util": 78, "visit": 78, "extend": [80, 85, 102], "semant": [80, 96], "problog": 80, "probabilsit": 80, "9": [80, 85], "pchoice_pred_symb_set_symb": 80, "pfact_pred_symb_set_symb": 80, "probabilistic_choic": 80, "query_based_probabilistic_fact": 80, "arithmet": [80, 102], "ins": 80, "enforc": 80, "thu": 80, "discov": 80, "fulli": 80, "cplogicprogram": [80, 82, 89, 91, 94, 95, 97], "plan": [82, 89, 91], "liftabl": 82, "segment": 82, "nonlift": [82, 89], "dalvi": [82, 94], "suciu": [82, 94], "dichotomi": [82, 94], "59": 82, "87": 82, "cpl": [82, 91, 94, 97], "run_relational_algebra_solv": [82, 91, 94, 97], "succ": [82, 94, 97], "discretedistribut": 83, "expect": [83, 102], "fun": 83, "tabledistribut": 83, "conditioned_on": 83, "forbiddenconditionalquerynoprob": 84, "unsupportedqueryerror": 84, "forbiddenconditionalquerynonconjunct": 84, "malformedprobabilistictupleerror": 84, "noteasilyshatterableerror": 84, "unsupportedsolvererror": 84, "nothierarchicalqueryexcept": 84, "repeatedtuplesinprobabilisticrelationerror": 84, "n_repeated_tupl": 84, "n_tupl": 84, "messag": [84, 107, 122], "uncomparabledistributionserror": 84, "unsupportedprobabilisticqueryerror": 84, "add_to_union": 85, "to_add": 85, "unino": 85, "new_union": 85, "build_probabilistic_fact_set": 85, "pfact": 85, "check_probabilistic_choice_set_probabilities_sum_to_on": 85, "const_or_symb_as_python_typ": 85, "construct_within_language_succ_result": 85, "provset": 85, "get_probchoice_variable_equ": 85, "sort": [85, 119], "get_within_language_prob_query_prob_term": 85, "group_preds_by_functor": 85, "filter_set": 85, "filter": 85, "group_probabilistic_facts_by_pred_symb": 85, "is_builtin": 85, "pred": 85, "is_probabilistic_fact": 85, "alpha": 85, "x_1": 85, "dot": 85, "x_n": 85, "top": [85, 124], "venneken": 85, "joost": 85, "marc": 85, "deneck": 85, "mauric": 85, "bruynoogh": 85, "causal": 85, "practic": 85, "2009": [85, 102], "245": 85, "308": 85, "1017": 85, "s1471068409003767": 85, "is_probabilistic_predicate_symbol": 85, "is_query_based_probfact": 85, "is_within_language_prob_queri": 85, "lift_optimization_for_choice_pred": 85, "enfornc": 85, "separate_deterministic_probabilistic_cod": 85, "query_pr": 85, "det_symbol": 85, "prob_symbol": 85, "union_contains_probabilistic_fact": 85, "within_language_succ_query_to_intensional_rul": 85, "probabilisticbinarylogicoper": 86, "binarylogicoper": 86, "probabilisticchoiceground": 86, "differenti": 86, "probabilisticpred": 86, "probabilisticqueri": 86, "validate_argu": [86, 88], "replacewlqwalk": 87, "wlq_express": 87, "d2": 87, "look": 87, "replace_probabilistic_pred": 87, "replace_probabilistic_queri": 87, "expr": 87, "probabilistic_postprocess_magic_rul": 87, "magic_rul": 87, "wlq": [87, 95], "someth": 87, "step": [87, 124, 126], "update_rules_with_new_prob_express": 87, "rules_to_upd": 87, "wlq_expr": 87, "ppdlmixin": 88, "ppdl_rule": 88, "ppdldeltasymbol": 88, "dist_nam": 88, "n_term": 88, "ppdldeltaterm": 88, "get_dterm": 88, "datom": 88, "get_dterm_index": 88, "is_ppdl_rul": 88, "deterministicfactset": 89, "getprobabilisticsetatom": 89, "resolve_symbol": 89, "non_liftable_queri": 89, "lift": [89, 94], "probabilisticchoiceset": 89, "probabilisticfactset": 89, "classify_and_wrap_symbol": 89, "ra_set_dict": 89, "wrapper": 89, "generate_probabilistic_symbol_table_for_queri": 89, "wrap": 89, "cplogic": 89, "relationship": 89, "is_atom_a_deterministic_rel": 89, "mach": 89, "is_atom_a_probabilistic_choice_rel": 89, "is_atom_a_probabilistic_fact_rel": 89, "probsemiringsolv": 90, "probsemiringsolvermixin": 90, "relationalalgebrasolv": [90, 102], "arithmetic_string_express": [90, 97, 102], "concatenate_constant_column": [90, 97, 102], "cycle_in_build_provenance_algebra_set": [90, 97], "deterministic_fact_set": [90, 97], "deterministic_fact_set_gener": 90, "eliminate_superfluous_project": [90, 97], "empty_deterministic_fact_set": 90, "name_columns_int_rap": [90, 97], "name_columns_rap": [90, 97], "number_columns_rap": [90, 97], "probabilistic_choice_set": [90, 97], "probabilistic_choice_set_to_symbol": 90, "probabilistic_fact_set": [90, 97], "probabilistic_fact_set_invalid": [90, 97], "projection_rap": [90, 97], "projection_rap_columnint": [90, 97], "projection_rap_columnint_subset": [90, 97], "prov_arithmetic_oper": [90, 97, 102], "prov_concatenate_constant_column": [90, 97], "prov_extended_project": [90, 97], "prov_naturaljoin": [90, 97], "prov_naturaljoin_invers": 90, "prov_product": [90, 97], "prov_rename_column": [90, 97], "prov_union": [90, 97], "push_projection_in_determinist": 90, "ra_const": [90, 97, 102], "ra_differ": [90, 97, 102], "ra_equijoin": [90, 97, 102], "ra_intersect": [90, 97, 102], "ra_left_naturaljoin": [90, 97, 102], "ra_name_column": [90, 97, 102], "ra_naturaljoin": [90, 97, 102], "ra_number_column": [90, 97, 102], "ra_product": [90, 97, 102], "ra_project": [90, 97, 102], "ra_rename_column": [90, 97, 102], "ra_symbol": [90, 97, 102], "ra_union": [90, 97, 102], "selection_between_column": [90, 97, 102], "selection_by_const": [90, 97, 102], "selection_general_selection_by_const": [90, 97, 102], "selection_provenance_set": [90, 97], "selection_rap_eq_columnint": [90, 97], "selection_rap_eq_columnint_columnint": [90, 97], "set_destroi": [90, 97, 102], "buildprovenancealgebrasetwalkintomixin": 90, "relationalalgebraprovenancecountingsolvermixin": 90, "deterministic_set": [90, 97], "det_fact_set": 90, "prob_choice_set": [90, 97], "prob_fact_set": [90, 97], "probsemiringtorelationalalgebrasolv": [90, 91], "resolvesymbolmixin": 90, "symbol_from_t": [90, 104], "filterzeroprob": 91, "add_zero_filt": 91, "floatarithmeticsimplifi": 91, "simplify_mul_left": 91, "simplify_mul_right": 91, "take": [91, 97], "proper": 91, "_f1_": 91, "_f2_": 91, "sure": 91, "expos": [91, 121], "user": [91, 119, 123, 124], "her": 91, "raqueryoptimis": [91, 97], "eliminatetrivialproject": [91, 101], "renameoptim": [91, 97, 101], "simplifyextendedprojectionswithconst": [91, 101], "pushunnamedselectionsup": [91, 101], "convert_extended_projection_2_project": [91, 101], "convert_extended_projection_2_renam": [91, 101], "convert_rename_column": [91, 97, 101], "eliminate_trivial_nested_project": [91, 101], "eliminate_trivial_nested_unnamed_project": [91, 101], "eliminate_trivial_number_column": [91, 97, 101], "eliminate_trivial_project": [91, 101], "eliminate_trivial_projection_number_column": [91, 97, 101], "eliminate_trivial_selection_number_column": [91, 97, 101], "invert_selection_ord": [91, 101], "merge_nested_rename_column": [91, 97, 101], "merge_rename_column_group_bi": [91, 97, 101], "merge_rename_columns_extended_project": [91, 97, 101], "nested_extended_projection_const": [91, 101], "nested_extended_projection_leftnaturaljoin_const": [91, 101], "nested_extended_projection_leftnaturaljoin_constantr": [91, 101], "nested_extended_projection_naturaljoin_constant_l": [91, 101], "nested_extended_projection_naturaljoin_constantr": [91, 101], "push_computed_columns_up": [91, 101], "push_computed_columns_up_flip": [91, 101], "push_computed_columns_up_left": [91, 101], "push_rename_past_groupbi": [91, 97, 101], "push_rename_past_project": [91, 97, 101], "push_rename_past_select": [91, 97, 101], "push_replace_null_in_ext_proj": [91, 101], "push_selection_above_name_column": [91, 101], "push_selection_above_project": [91, 101], "remove_trivial_renam": [91, 97, 101], "replace_trivial_agg_groupbi": [91, 101], "simplify_projection_extended_project": [91, 101], "simplify_renames_nam": [91, 97, 101], "split_rename_left_naturaljoin": [91, 97, 101], "split_rename_naturaljoin": [91, 97, 101], "standardize_projected_column": [91, 101], "switch_rename_replace_nul": [91, 97, 101], "compute_probabilistic_solut": 91, "det_edb": 91, "pfact_db": 91, "pchoice_edb": 91, "prob_idb": 91, "succ_prob_solv": 91, "marg_prob_solv": 91, "generate_provenance_query_solv": 91, "solver_class": 91, "rap": 91, "namedalgebraset": 91, "lift_solve_marg_queri": 91, "succ_solv": 91, "reintroduce_unified_head_term": 91, "ra_queri": 91, "flat_queri": 91, "unified_queri": 91, "reintroduc": 91, "binari": [91, 104], "partially_rank_queri": 92, "verify_that_the_query_is_rank": 92, "normalizenotequ": 93, "flip_ne_argu": 93, "relationalalgebraselectionconjunct": 93, "selection_conjunct": 93, "shatterequ": 93, "symbol_set": 93, "shatter_inequ": 93, "shatter_symbol": 93, "atom_to_constant_to_ra_condit": 93, "conditions_per_symbol": 93, "ucq_queri": 93, "sets_per_symbol": 93, "shatter_const": 93, "shatter_al": 93, "implent": 94, "hierarch": 94, "small": 94, "theorem": 94, "join": 94, "Then": [94, 101, 124, 126], "polynomi": 94, "hard": 94, "robert": 94, "fink": 94, "dan": 94, "olteanu": 94, "33rd": 94, "sigmod": 94, "sigact": 94, "sigart": 94, "symposium": 94, "principl": 94, "14": 94, "144": 94, "155": 94, "york": 94, "ny": 94, "nilesh": 94, "16": 94, "523": 94, "544": 94, "2007": 94, "extract_atom_sets_and_detect_self_join": 94, "is_hierarchical_without_self_join": 94, "sai": [94, 125, 126], "get_list_of_intensional_rul": 95, "want": [95, 124, 126], "reachable_code_from_queri": 95, "answer": 95, "necesarrili": 95, "formul": 95, "stratify_program": 95, "isol": 95, "strat": 95, "separ": [95, 119], "unsupportedprogramerror": 95, "add_existentials_except": 96, "exclud": 96, "quantif": 96, "convert_rule_to_ucq": 96, "convert_to_cnf_existential_ucq": 96, "cnf": 96, "convert_to_dnf_existential_ucq": 96, "dnf": 96, "minimise_formulas_contain": 96, "compon": 96, "containment_op": 96, "head_var": 96, "minimize_component_conjunct": 96, "qn": 96, "qi": 96, "qj": 96, "minimis": 96, "minimize_component_disjunct": 96, "minimize_ucq_in_cnf": 96, "minimize_ucq_in_dnf": 96, "split_positive_negative_formula": 96, "n_ary_log": 96, "unify_existential_vari": 96, "reduc": [96, 101], "weight": 97, "model": 97, "approach": 97, "knowledg": 97, "deterministicfactsettransl": 97, "deterministic_fact_set_const": 97, "eliminatesuperfluousprojectionmixin": 97, "sddwmcsemiringsolv": 97, "relationalalgebraprovenanceexpressionsemringsolv": 97, "generate_sdd_express": 97, "get_new_bernoulli_vari": 97, "wmc_weight": 97, "adjusted_prob": 97, "tag_express": 97, "previous_express": 97, "semiringraptosdd": 97, "var_count": 97, "symbols_to_liter": 97, "mul": 97, "wmcsemiringsolv": 97, "build_global_sdd_model_row": 97, "literal_prob": 97, "generate_probability_t": 97, "generate_weight": 97, "symbol_prob": 97, "literals_to_symbol": 97, "model_count_and_per_row_prob": 97, "initial_var_count": 97, "perform_wmc": 97, "sdd_compil": 97, "sdd_program": 97, "prob_set_program": 97, "prob_set_result": 97, "prepare_initial_queri": 97, "sdd_compilation_and_wmc": 97, "sdd_solver_global_model": 97, "set_prob": 97, "sdd_solver_per_individual_row": 97, "per_row_model": 97, "solve_succ_query_boolean_diagram": 97, "regexp": 98, "type_nam": 98, "implicitvbr": 99, "planarvolum": 99, "1000": 99, "project_point_to_plan": 99, "pointset": 99, "points_ijk": 99, "sphericalvolum": 99, "image_shap": 99, "region_differ": 99, "region_intersect": 99, "region_set_from_masked_data": 99, "region_union": 99, "take_principal_region": 99, "optimis": 100, "productsimplif": 101, "single_product": 101, "relationalalgebraoptimis": 101, "rewriteselect": 101, "mix": [101, 102], "equi": 101, "composit": 101, "get_ar": 101, "merge_select": 101, "selection_between_columns_product": 101, "selection_by_constant_on_product": 101, "selection_on_equijoin": 101, "selection_on_equijoin_column": 101, "selection_push_right": 101, "selection_selection_swap": 101, "selection_shorten_right": 101, "sort_formula_arg": 101, "split_relations_column": 101, "swap_formula_arg": 101, "push": 101, "down": 101, "reach": 101, "flip": 101, "binaryrelationalalgebraoper": 102, "columnint": 102, "denomin": [102, 110, 111], "ration": [102, 110, 111], "lowest": [102, 110, 111], "numer": [102, 110, 111], "concatenateconstantcolumn": 102, "column_nam": 102, "column_valu": 102, "unaryrelationalalgebraoper": 102, "newli": 102, "destroi": 102, "src_column": [102, 107, 110, 111, 114], "dst_column": [102, 107, 110, 111, 114], "collect": 102, "concaten": 102, "concept": [102, 125], "destruct": 102, "20": [102, 107, 122], "onto": 102, "relation_left": 102, "relation_right": 102, "columns_left": 102, "columns_right": 102, "extendedproject": 102, "projection_list": 102, "garcia": 102, "molina": 102, "hector": 102, "jeffrei": 102, "jennif": 102, "widom": 102, "book": 102, "functionapplicationlistmemb": 102, "fun_exp": 102, "member": 102, "effect": 102, "impli": 102, "destin": [102, 126], "groupbyaggreg": 102, "aggregate_funct": [102, 107, 110, 111, 114], "leftnaturaljoin": 102, "naryrelationalalgebraoper": 102, "namecolumn": 102, "give": [102, 104], "resolv": [102, 124], "numbercolumn": 102, "interfac": 102, "agg_op": 102, "concat_op": 102, "proj_op": 102, "arithmetic_op": 102, "name_column": 102, "number_column": 102, "renamecolumn": 102, "src": [102, 107, 109, 110, 111, 114], "dst": [102, 107, 109, 110, 111, 114], "shall": 102, "replaceconstantcolumnstrbysymbol": 102, "column_int": 102, "column_str": 102, "replacenul": 102, "stringarithmeticwalk": 102, "basic": 102, "negative_valu": 102, "operation_sum": 102, "process_constant_column_int": 102, "process_constant_column_str": 102, "process_constant_float": 102, "process_constant_int": 102, "process_constant_str": 102, "translatable_numpy_oper": 102, "cst_col_int": 102, "cst_col_str": 102, "cst": 102, "get_expression_column": 102, "int2columnint_const": 102, "col": 102, "is_arithmetic_oper": 102, "is_translatable_oper": 102, "str2columnstr_const": 102, "booleanoperationssolv": 104, "rewrite_boolean_and": 104, "rewrite_boolean_and_l": 104, "rewrite_boolean_and_r": 104, "rewrite_boolean_invers": 104, "rewrite_boolean_or": 104, "rewrite_boolean_or_l": 104, "rewrite_boolean_or_r": 104, "booleanrewritesolv": 104, "bring_constants_up_left": 104, "cast_binari": 104, "cast_unari": 104, "conjunction_composition_du": 104, "conjunction_definition_du": 104, "conjunction_distribut": 104, "dual_oper": 104, "neg_disj_to_conj": 104, "simplify_double_invers": 104, "partial_binary_evalu": 104, "OR": 104, "potenti": 104, "did": 104, "modifi": 104, "firstorderlogicsolv": 104, "numericoperationssolv": 104, "genericsolv": 104, "wip": 104, "plural_type_nam": 104, "set_symbol_t": 104, "universal_pred": 104, "quantifier_head_symbols_and_adom": 104, "domain": 104, "typevar": 104, "undeterminedtyp": 104, "typedsymboltableevalu": 104, "neurolangpredicateexcept": 104, "siek": 105, "vachharajani": 105, "gradual": 105, "2008": 105, "neurolangtypeexcept": 105, "_final": 105, "_immut": 105, "compat": [105, 119], "less": [105, 125], "get_arg": 105, "get_generic_typ": 105, "typ": 105, "infer_typ": 105, "deep": 105, "recursive_callback": 105, "infer_type_builtin": 105, "infer_type_iter": 105, "infer_type_map": 105, "is_consist": 105, "type1": 105, "type2": 105, "is_leq_inform": 105, "is_leq_informative_parameterized_right": 105, "is_leq_informative_union": 105, "is_parameter": 105, "is_parametr": 105, "is_typ": 105, "replace_type_vari": 105, "type_hint": 105, "type_var": 105, "replace_type_variable_fix_python36_37": 105, "typing_callable_from_annotated_funct": 105, "annot": 105, "unify_typ": 105, "t2": 105, "enclosing_scop": 106, "readonli": 106, "create_scop": 106, "set_readonli": 106, "symbols_by_typ": 106, "include_subtyp": 106, "group_column": [107, 110, 111, 114], "classmethod": [107, 110, 111, 114], "join_indic": [107, 110, 111, 114], "eval_express": [107, 110, 111, 114], "sequenc": [107, 109], "issubset": [107, 109], "issuperset": [107, 109], "stop": [107, 109], "recommend": [107, 109, 124], "select_criteria": [107, 110, 111, 114], "relationalalgebrastringexpress": [107, 110, 114], "selet_criteria": [107, 110, 114], "criteria": [107, 110, 114], "col0": [107, 110, 114], "col1": [107, 110, 114], "col2": [107, 110, 114], "log_perform": [107, 122], "logger": [107, 122], "init_messag": [107, 122], "init_arg": [107, 122], "end_messag": [107, 122], "end_arg": [107, 122], "init": [107, 122], "elaps": [107, 122], "info": [107, 122], "dask_help": [107, 110], "dask_sql": [107, 110], "app": [107, 115, 119], "respons": [107, 115], "parse_region_label_map": 108, "labeled_im": 108, "selected_label": 108, "relationalalgebracolumnint": [110, 111], "relationalalgebracolumn": [110, 111], "relationalalgebracolumnstr": [110, 111], "destrieuxengineconf": 117, "neurolangengineconfigur": [117, 118], "combin": [117, 125], "neurolangengineset": 117, "keep": [117, 118], "track": [117, 118], "semaphor": 117, "acquir": 117, "releas": 117, "concurr": 117, "add_engin": 117, "increas": 117, "timeout": 117, "contextmanag": 117, "until": 117, "At": 117, "back": 117, "timout": 117, "invok": 117, "neurosynthengineconf": 117, "brain_mask": 117, "add_ploting_funct": 117, "init_frontend": 117, "mni_mask": 117, "load_destrieux_atla": 117, "load_neurosynth_data": 117, "nifti1imag": [117, 118], "lrucachedict": 118, "cache_len": 118, "ordereddict": 118, "eject": 118, "lru": 118, "neurolangquerymanag": 118, "mani": 118, "pool": 118, "thread": 118, "worker": 118, "submit": 118, "results_cach": 118, "uuid": [118, 119], "futur": [118, 119, 124], "cancel": [118, 119], "attempt": 118, "task": 118, "get_atla": 118, "engine_typ": 118, "get_result": 118, "request": [118, 119], "cach": 118, "job": 118, "dispatch": 118, "threadpool": 118, "executor": 118, "submit_queri": 118, "customqueryresultsencod": 119, "skipkei": 119, "ensure_ascii": 119, "check_circular": 119, "allow_nan": 119, "sort_kei": 119, "jsonencod": 119, "obj": 119, "serializ": 119, "o": 119, "typeerror": 119, "arbitrari": 119, "you": [119, 124], "queryresult": 119, "50": 119, "asc": 119, "get_valu": 119, "tornado": 119, "json": 119, "serial": 119, "get_function_metadata": 119, "get_result_item_column": 119, "set_error_detail": 119, "set_results_detail": 119, "get_result_item": 119, "get_item_valu": 119, "df": 119, "get_result_item_valu": 119, "slice": 119, "base64_encode_nifti": 119, "base64": 119, "nifti2imag": 119, "base64_encode_spati": 119, "spatialimag": 119, "calculate_image_cent": 119, "serializevbr": 119, "image_row": 119, "seri": 119, "hash": 119, "serialize_mplt_thumbnail": 119, "thumbnail": 119, "mpltfigurehandl": 119, "purpos": 121, "logic_exp_commutative_equ": 121, "exp1": 121, "exp2": 121, "compar": 121, "commut": 121, "pure": 121, "apart": 121, "specialis": 123, "neuroimag": 123, "our": [123, 125], "instal": 123, "guid": 123, "programm": 123, "scipi": 124, "scikit": 124, "learn": 124, "joblib": 124, "scientif": 124, "troubl": 124, "pythonxi": 124, "press": 124, "win": 124, "cmd": 124, "enter": 124, "ex": 124, "pip": 124, "u": 124, "correctli": 124, "navig": 124, "doubl": 124, "ubuntu": 124, "debian": 124, "ask": 124, "your": 124, "administr": 124, "sometim": 124, "sklearn": 124, "access": 124, "ctrl": 124, "alt": 124, "consol": 124, "pop": [124, 125], "git": 124, "latest": 124, "shell": 124, "clone": 124, "readili": 124, "updat": 124, "pull": 124, "root": 124, "realli": 124, "still": 124, "snapshot": 124, "link": 124, "unzip": 124, "archiv": 124, "previou": 124, "again": 124, "setup": 124, "By": 124, "librari": 124, "howev": 124, "reli": 124, "dask": 124, "sql": 124, "benefit": 124, "parallel": 124, "might": [124, 126], "improv": 124, "slow": 124, "guarante": 124, "faster": 124, "maven": 124, "java": 124, "machin": 124, "sudo": 124, "apt": 124, "Or": 124, "conda": 124, "forg": 124, "ve": 124, "repositori": 124, "final": [124, 125, 126], "enabl": 124, "edit": 124, "configur": 124, "locat": 124, "under": 124, "ini": 124, "explor": [125, 126], "heterogen": 125, "sound": 125, "abiteboul1995": 125, "maier2018": 125, "whole": 125, "idea": 125, "assert": 125, "gyru": 125, "formalis": 125, "operatornam": 125, "_hemispher": 125, "_gyru": 125, "leftarrow": 125, "wedg": 125, "_label": 125, "shorten": 125, "_atla": 125, "notat": 125, "drop": 125, "arrow": 125, "lead": 125, "left_hemisphere_gyru": 125, "merit": 125, "cortex": 125, "_region": 125, "_sulcu": 125, "vee": 125, "begin": 125, "neurlang": 125, "left_hemisphere_region": 125, "left_hemisphere_sulcu": 125, "good": 125, "maximum": 125, "As": 125, "countri": 125, "_popul": 125, "_per": 125, "_countri": 125, "provinc": 125, "popul": 125, "_provinc": 125, "max_population_per_countri": 125, "population_per_country_provinc": 125, "tekl": 125, "kifer": 125, "m": 125, "warren": 125, "histori": 125, "outlook": 125, "ed": 125, "liu": 125, "100": 125, "machineri": 125, "claypool": 125, "2018": 125, "1145": 125, "3191315": 125, "3191317": 125, "basi": 126, "came": 126, "python_embedded_": 126, "datalog_": 126, "connect": 126, "pleas": 126, "creation": 126, "suppos": 126, "distinct": 126, "agg_count": 126, "arriv": 126, "count_arriv": 126, "tgd": 126, "person": 126, "john": 126, "carl": 126, "mari": 126, "pat": 126, "anna": 126, "pete": 126, "has_par": 126, "chri": 126, "has_grand_par": 126}, "objects": {"": [[10, 0, 0, "-", "neurolang"]], "neurolang": [[11, 0, 0, "-", "CD_relations"], [12, 2, 1, "", "NeurolangDL"], [13, 2, 1, "", "NeurolangPDL"], [14, 0, 0, "-", "aabb_tree"], [15, 0, 0, "-", "commands"], [16, 0, 0, "-", "config"], [17, 0, 0, "-", "datalog"], [36, 0, 0, "-", "datalog_chase"], [37, 0, 0, "-", "exceptions"], [38, 0, 0, "-", "expression_pattern_matching"], [39, 0, 0, "-", "expression_walker"], [40, 0, 0, "-", "expressions"], [41, 0, 0, "-", "frontend"], [64, 0, 0, "-", "interval_algebra"], [65, 0, 0, "-", "logic"], [70, 0, 0, "-", "neurolang"], [71, 0, 0, "-", "neurolang_compiler"], [72, 0, 0, "-", "perior_tree"], [73, 0, 0, "-", "probabilistic"], [98, 0, 0, "-", "region_solver"], [99, 0, 0, "-", "regions"], [100, 0, 0, "-", "relational_algebra"], [103, 0, 0, "-", "relational_algebra_provenance"], [104, 0, 0, "-", "solver"], [105, 0, 0, "-", "type_system"], [106, 0, 0, "-", "typed_symbol_table"], [107, 0, 0, "-", "utils"]], "neurolang.CD_relations": [[11, 1, 1, "", "cardinal_relation"]], "neurolang.NeurolangDL": [[12, 3, 1, "", "__init__"]], "neurolang.NeurolangPDL": [[13, 3, 1, "", "__init__"]], "neurolang.aabb_tree": [[14, 2, 1, "", "AABB"], [14, 2, 1, "", "Node"], [14, 2, 1, "", "Tree"], [14, 1, 1, "", "aabb_from_vertices"]], "neurolang.aabb_tree.AABB": [[14, 4, 1, "", "center"], [14, 3, 1, "", "contains"], [14, 4, 1, "", "dim"], [14, 4, 1, "", "lb"], [14, 4, 1, "", "limits"], [14, 3, 1, "", "overlaps"], [14, 4, 1, "", "ub"], [14, 3, 1, "", "union"], [14, 4, 1, "", "volume"], [14, 4, 1, "", "width"]], "neurolang.aabb_tree.Node": [[14, 4, 1, "", "children"], [14, 4, 1, "", "is_leaf"], [14, 4, 1, "", "left"], [14, 4, 1, "", "right"]], "neurolang.aabb_tree.Tree": [[14, 3, 1, "", "add"], [14, 3, 1, "", "add_in_direction"], [14, 3, 1, "", "add_left"], [14, 3, 1, "", "add_right"], [14, 3, 1, "", "expand_region_box"], [14, 3, 1, "", "query_overlapping_regions"], [14, 3, 1, "", "query_regions_axdir"], [14, 3, 1, "", "query_regions_contained_in_box"]], "neurolang.commands": [[15, 2, 1, "", "CommandsMixin"]], "neurolang.commands.CommandsMixin": [[15, 3, 1, "", "load_atlas"], [15, 3, 1, "", "load_csv"], [15, 5, 1, "", "type"]], "neurolang.config": [[16, 2, 1, "", "NeurolangConfigParser"]], "neurolang.config.NeurolangConfigParser": [[16, 3, 1, "", "disable_expression_type_printing"], [16, 3, 1, "", "enable_expression_type_printing"], [16, 3, 1, "", "expression_type_printing"], [16, 3, 1, "", "get_structural_knowledge_namespace"], [16, 3, 1, "", "set_query_backend"], [16, 3, 1, "", "set_structural_knowledge_namespace"], [16, 3, 1, "", "switch_backend"], [16, 3, 1, "", "switch_expression_type_printing"]], "neurolang.datalog": [[18, 0, 0, "-", "aggregation"], [19, 0, 0, "-", "basic_representation"], [20, 0, 0, "-", "chase"], [25, 0, 0, "-", "constraints_representation"], [26, 0, 0, "-", "exceptions"], [27, 0, 0, "-", "expression_processing"], [28, 0, 0, "-", "expressions"], [29, 0, 0, "-", "instance"], [30, 0, 0, "-", "magic_sets"], [31, 0, 0, "-", "negation"], [32, 0, 0, "-", "ontologies_parser"], [33, 0, 0, "-", "ontologies_rewriter"], [34, 0, 0, "-", "translate_to_named_ra"], [35, 0, 0, "-", "wrapped_collections"]], "neurolang.datalog.aggregation": [[18, 2, 1, "", "BuiltinAggregationMixin"], [18, 2, 1, "", "ChaseAggregationMixin"], [18, 2, 1, "", "DatalogWithAggregationMixin"], [18, 2, 1, "", "TranslateToLogicWithAggregation"], [18, 1, 1, "", "is_builtin_aggregation_functor"]], "neurolang.datalog.aggregation.BuiltinAggregationMixin": [[18, 5, 1, "", "constant_max"], [18, 5, 1, "", "constant_mean"], [18, 5, 1, "", "constant_std"], [18, 5, 1, "", "constant_sum"], [18, 3, 1, "", "function_count"]], "neurolang.datalog.aggregation.ChaseAggregationMixin": [[18, 3, 1, "", "check_constraints"], [18, 3, 1, "", "compute_result_set"], [18, 3, 1, "", "eliminate_already_computed"]], "neurolang.datalog.aggregation.DatalogWithAggregationMixin": [[18, 3, 1, "", "statement_intensional_aggregation"], [18, 5, 1, "", "type"]], "neurolang.datalog.aggregation.TranslateToLogicWithAggregation": [[18, 3, 1, "", "transform_function_application_consequent_to_aggregation"], [18, 5, 1, "", "type"]], "neurolang.datalog.basic_representation": [[19, 2, 1, "", "DatalogProgram"], [19, 2, 1, "", "Fact"], [19, 2, 1, "", "Implication"], [19, 2, 1, "", "NullConstant"], [19, 2, 1, "", "Undefined"], [19, 2, 1, "", "UnionOfConjunctiveQueries"], [19, 2, 1, "", "WrappedRelationalAlgebraSet"]], "neurolang.datalog.basic_representation.DatalogProgram": [[19, 5, 1, "", "protected_keywords"], [19, 5, 1, "", "type"]], "neurolang.datalog.basic_representation.Fact": [[19, 4, 1, "", "fact"], [19, 5, 1, "", "type"]], "neurolang.datalog.basic_representation.Implication": [[19, 5, 1, "", "type"]], "neurolang.datalog.basic_representation.NullConstant": [[19, 5, 1, "", "type"]], "neurolang.datalog.basic_representation.Undefined": [[19, 5, 1, "", "type"]], "neurolang.datalog.basic_representation.WrappedRelationalAlgebraSet": [[19, 3, 1, "", "unwrap"]], "neurolang.datalog.chase": [[20, 2, 1, "", "ChaseGeneral"], [20, 2, 1, "", "ChaseMGUMixin"], [20, 2, 1, "", "ChaseNaive"], [20, 2, 1, "", "ChaseNamedRelationalAlgebraMixin"], [20, 2, 1, "", "ChaseNode"], [20, 2, 1, "", "ChaseNonRecursive"], [20, 2, 1, "", "ChaseRelationalAlgebraPlusCeriMixin"], [20, 2, 1, "", "ChaseSemiNaive"], [20, 2, 1, "", "ChaseStratified"], [20, 6, 1, "", "NeuroLangNonLinearProgramException"], [20, 6, 1, "", "NeuroLangProgramHasLoopsException"], [21, 0, 0, "-", "general"], [22, 0, 0, "-", "mgu"], [23, 0, 0, "-", "negation"], [24, 0, 0, "-", "relational_algebra"]], "neurolang.datalog.chase.ChaseGeneral": [[20, 3, 1, "", "aggregate_tuple_type_into_row_type"], [20, 3, 1, "", "build_chase_solution"], [20, 3, 1, "", "build_chase_tree"], [20, 3, 1, "", "build_nodes_from_rules"], [20, 3, 1, "", "chase_step"], [20, 3, 1, "", "check_constraints"], [20, 3, 1, "", "compose_all_subtitutions"], [20, 3, 1, "", "compose_substitutions_ignoring_conflicts"], [20, 3, 1, "", "compose_substitutions_no_conflict"], [20, 3, 1, "", "compute_instance_update"], [20, 3, 1, "", "compute_new_tuple_and_type"], [20, 3, 1, "", "compute_result_set"], [20, 3, 1, "", "eliminate_already_computed"], [20, 3, 1, "", "evaluate_builtins"], [20, 3, 1, "", "evaluate_builtins_predicates"], [20, 3, 1, "", "extract_rule_predicates"], [20, 3, 1, "", "extract_variable_arguments"], [20, 3, 1, "", "get_args_to_project"], [20, 3, 1, "", "infer_iterable_subtype"], [20, 3, 1, "", "is_containment_of_symbol_in_constant"], [20, 3, 1, "", "is_equality_between_constant_and_symbol"], [20, 3, 1, "", "unify_builtin_substitution"], [20, 3, 1, "", "unify_builtin_substitution_containment"], [20, 3, 1, "", "unify_builtin_substitution_equality"]], "neurolang.datalog.chase.ChaseMGUMixin": [[20, 3, 1, "", "obtain_substitutions"], [20, 3, 1, "", "unify_substitution"]], "neurolang.datalog.chase.ChaseNaive": [[20, 3, 1, "", "execute_chase"]], "neurolang.datalog.chase.ChaseNamedRelationalAlgebraMixin": [[20, 3, 1, "", "chase_step"], [20, 3, 1, "", "compute_result_set"], [20, 3, 1, "", "eliminate_already_computed"], [20, 3, 1, "", "obtain_substitutions"], [20, 3, 1, "", "rewrite_antecedent_equalities"], [20, 3, 1, "", "rewrite_constants_in_consequent"], [20, 3, 1, "", "rewrite_rule_consequent_constants_to_equalities"], [20, 3, 1, "", "translate_conjunction_to_named_ra"]], "neurolang.datalog.chase.ChaseNode": [[20, 5, 1, "", "children"], [20, 5, 1, "", "instance"]], "neurolang.datalog.chase.ChaseNonRecursive": [[20, 3, 1, "", "check_constraints"], [20, 3, 1, "", "execute_chase"]], "neurolang.datalog.chase.ChaseRelationalAlgebraPlusCeriMixin": [[20, 3, 1, "", "compute_substitutions"], [20, 3, 1, "", "obtain_substitutions"], [20, 3, 1, "", "translate_predicate"], [20, 3, 1, "", "translate_predicate_process_argument"], [20, 3, 1, "", "translate_predicate_process_argument_symbol"], [20, 3, 1, "", "translate_to_ra_plus"]], "neurolang.datalog.chase.ChaseSemiNaive": [[20, 3, 1, "", "check_constraints"], [20, 3, 1, "", "execute_chase"], [20, 3, 1, "", "per_rule_update"]], "neurolang.datalog.chase.ChaseStratified": [[20, 3, 1, "", "build_chase_solution"], [20, 3, 1, "", "pick_chase_instance_for_stratum"]], "neurolang.datalog.chase.general": [[21, 2, 1, "", "ChaseGeneral"], [21, 2, 1, "", "ChaseNaive"], [21, 2, 1, "", "ChaseNode"], [21, 2, 1, "", "ChaseNonRecursive"], [21, 2, 1, "", "ChaseSemiNaive"], [21, 2, 1, "", "ChaseStratified"], [21, 6, 1, "", "NeuroLangNonLinearProgramException"], [21, 6, 1, "", "NeuroLangProgramHasLoopsException"]], "neurolang.datalog.chase.general.ChaseGeneral": [[21, 3, 1, "", "aggregate_tuple_type_into_row_type"], [21, 3, 1, "", "build_chase_solution"], [21, 3, 1, "", "build_chase_tree"], [21, 3, 1, "", "build_nodes_from_rules"], [21, 3, 1, "", "chase_step"], [21, 3, 1, "", "check_constraints"], [21, 3, 1, "", "compose_all_subtitutions"], [21, 3, 1, "", "compose_substitutions_ignoring_conflicts"], [21, 3, 1, "", "compose_substitutions_no_conflict"], [21, 3, 1, "", "compute_instance_update"], [21, 3, 1, "", "compute_new_tuple_and_type"], [21, 3, 1, "", "compute_result_set"], [21, 3, 1, "", "eliminate_already_computed"], [21, 3, 1, "", "evaluate_builtins"], [21, 3, 1, "", "evaluate_builtins_predicates"], [21, 3, 1, "", "extract_rule_predicates"], [21, 3, 1, "", "extract_variable_arguments"], [21, 3, 1, "", "get_args_to_project"], [21, 3, 1, "", "infer_iterable_subtype"], [21, 3, 1, "", "is_containment_of_symbol_in_constant"], [21, 3, 1, "", "is_equality_between_constant_and_symbol"], [21, 3, 1, "", "unify_builtin_substitution"], [21, 3, 1, "", "unify_builtin_substitution_containment"], [21, 3, 1, "", "unify_builtin_substitution_equality"]], "neurolang.datalog.chase.general.ChaseNaive": [[21, 3, 1, "", "execute_chase"]], "neurolang.datalog.chase.general.ChaseNode": [[21, 5, 1, "", "children"], [21, 5, 1, "", "instance"]], "neurolang.datalog.chase.general.ChaseNonRecursive": [[21, 3, 1, "", "check_constraints"], [21, 3, 1, "", "execute_chase"]], "neurolang.datalog.chase.general.ChaseSemiNaive": [[21, 3, 1, "", "check_constraints"], [21, 3, 1, "", "execute_chase"], [21, 3, 1, "", "per_rule_update"]], "neurolang.datalog.chase.general.ChaseStratified": [[21, 3, 1, "", "build_chase_solution"], [21, 3, 1, "", "pick_chase_instance_for_stratum"]], "neurolang.datalog.chase.mgu": [[22, 2, 1, "", "ChaseMGUMixin"]], "neurolang.datalog.chase.mgu.ChaseMGUMixin": [[22, 3, 1, "", "obtain_substitutions"], [22, 3, 1, "", "unify_substitution"]], "neurolang.datalog.chase.negation": [[23, 2, 1, "", "DatalogChaseNegation"], [23, 2, 1, "", "DatalogChaseNegationGeneral"], [23, 2, 1, "", "DatalogChaseNegationMGUMixin"], [23, 2, 1, "", "DatalogChaseNegationRelationalAlgebraMixin"], [23, 2, 1, "", "NegativeFactConstraints"]], "neurolang.datalog.chase.negation.DatalogChaseNegationGeneral": [[23, 3, 1, "", "chase_step"], [23, 3, 1, "", "check_non_linear"], [23, 3, 1, "", "evaluate_negative_builtins"], [23, 3, 1, "", "extract_rule_predicates"], [23, 3, 1, "", "get_args_to_project"], [23, 3, 1, "", "unify_negative_builtin_substitution"]], "neurolang.datalog.chase.negation.DatalogChaseNegationMGUMixin": [[23, 3, 1, "", "obtain_negative_substitutions"], [23, 3, 1, "", "unify_negative_substitution"]], "neurolang.datalog.chase.negation.DatalogChaseNegationRelationalAlgebraMixin": [[23, 3, 1, "", "obtain_negative_substitutions"]], "neurolang.datalog.chase.negation.NegativeFactConstraints": [[23, 3, 1, "", "check_constraints"]], "neurolang.datalog.chase.relational_algebra": [[24, 2, 1, "", "ChaseNamedRelationalAlgebraMixin"], [24, 2, 1, "", "ChaseRelationalAlgebraPlusCeriMixin"], [24, 2, 1, "", "NamedRelationalAlgebraOptimiser"]], "neurolang.datalog.chase.relational_algebra.ChaseNamedRelationalAlgebraMixin": [[24, 3, 1, "", "chase_step"], [24, 3, 1, "", "compute_result_set"], [24, 3, 1, "", "eliminate_already_computed"], [24, 3, 1, "", "obtain_substitutions"], [24, 3, 1, "", "rewrite_antecedent_equalities"], [24, 3, 1, "", "rewrite_constants_in_consequent"], [24, 3, 1, "", "rewrite_rule_consequent_constants_to_equalities"], [24, 3, 1, "", "translate_conjunction_to_named_ra"]], "neurolang.datalog.chase.relational_algebra.ChaseRelationalAlgebraPlusCeriMixin": [[24, 3, 1, "", "compute_substitutions"], [24, 3, 1, "", "obtain_substitutions"], [24, 3, 1, "", "translate_predicate"], [24, 3, 1, "", "translate_predicate_process_argument"], [24, 3, 1, "", "translate_predicate_process_argument_symbol"], [24, 3, 1, "", "translate_to_ra_plus"]], "neurolang.datalog.chase.relational_algebra.NamedRelationalAlgebraOptimiser": [[24, 5, 1, "", "type"]], "neurolang.datalog.constraints_representation": [[25, 2, 1, "", "DatalogConstraintsMixin"], [25, 2, 1, "", "DatalogConstraintsProgram"], [25, 2, 1, "", "RightImplication"], [25, 1, 1, "", "reachable_code"]], "neurolang.datalog.constraints_representation.DatalogConstraintsMixin": [[25, 3, 1, "", "add_existential_rules"], [25, 3, 1, "", "add_logic_constraint"], [25, 5, 1, "", "categorized_constraints"], [25, 3, 1, "", "constraints"], [25, 5, 1, "", "existential_rules"], [25, 3, 1, "", "get_constraints"], [25, 5, 1, "", "protected_keywords"], [25, 3, 1, "", "set_constraints"], [25, 5, 1, "", "type"]], "neurolang.datalog.constraints_representation.DatalogConstraintsProgram": [[25, 5, 1, "", "protected_keywords"], [25, 5, 1, "", "type"]], "neurolang.datalog.constraints_representation.RightImplication": [[25, 5, 1, "", "type"]], "neurolang.datalog.exceptions": [[26, 6, 1, "", "AggregatedVariableReplacedByConstantError"], [26, 6, 1, "", "BoundAggregationApplicationError"], [26, 6, 1, "", "InvalidMagicSetError"], [26, 6, 1, "", "NegationInMagicSetsRewriteError"], [26, 6, 1, "", "NoConstantPredicateFoundError"], [26, 6, 1, "", "NonConjunctiveAntecedentInMagicSetsError"]], "neurolang.datalog.expression_processing": [[27, 2, 1, "", "CollapseConjunctiveAntecedents"], [27, 2, 1, "", "EqualitySymbolLeftHandSideNormaliseMixin"], [27, 2, 1, "", "FlattenQueryInNonRecursiveUCQ"], [27, 2, 1, "", "FreshenFreeVariables"], [27, 2, 1, "", "HeadConstantToBodyEquality"], [27, 2, 1, "", "HeadRepeatedVariableToBodyEquality"], [27, 2, 1, "", "RemoveDuplicatedAntecedentPredicates"], [27, 2, 1, "", "TranslateToDatalogSemantics"], [27, 2, 1, "", "UnifyVariableEqualities"], [27, 2, 1, "", "UnifyVariableEqualitiesMixin"], [27, 1, 1, "", "all_body_preds_in_set"], [27, 1, 1, "", "any_body_preds_in_set"], [27, 1, 1, "", "conjunct_formulas"], [27, 1, 1, "", "conjunct_if_needed"], [27, 1, 1, "", "dependency_matrix"], [27, 1, 1, "", "enforce_conjunctive_antecedent"], [27, 1, 1, "", "extract_logic_atoms"], [27, 1, 1, "", "extract_logic_free_variables"], [27, 1, 1, "", "extract_logic_predicates"], [27, 1, 1, "", "flatten_query"], [27, 1, 1, "", "implication_has_existential_variable_in_antecedent"], [27, 1, 1, "", "is_aggregation_predicate"], [27, 1, 1, "", "is_aggregation_rule"], [27, 1, 1, "", "is_conjunctive_expression"], [27, 1, 1, "", "is_conjunctive_expression_with_nested_predicates"], [27, 1, 1, "", "is_ground_predicate"], [27, 1, 1, "", "is_linear_rule"], [27, 1, 1, "", "is_rule_with_builtin"], [27, 1, 1, "", "is_symb_to_const_equality"], [27, 1, 1, "", "is_to_be_sorted_equality"], [27, 1, 1, "", "is_var_equality_to_var_or_const"], [27, 1, 1, "", "maybe_deconjunct_single_pred"], [27, 1, 1, "", "maybe_disjunct"], [27, 1, 1, "", "program_has_loops"], [27, 1, 1, "", "reachable_code"], [27, 1, 1, "", "remove_conjunction_duplicates"], [27, 1, 1, "", "stratify"], [27, 1, 1, "", "stratify_obtain_facts_stratum"], [27, 1, 1, "", "stratify_obtain_new_stratum"]], "neurolang.datalog.expression_processing.CollapseConjunctiveAntecedents": [[27, 3, 1, "", "implication_with_collapsable_conjunctive_antecedent"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.EqualitySymbolLeftHandSideNormaliseMixin": [[27, 3, 1, "", "reverse_equality"], [27, 3, 1, "", "sort_antecedent_equalities"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.FlattenQueryInNonRecursiveUCQ": [[27, 3, 1, "", "builtin_application"], [27, 3, 1, "", "conjunction"], [27, 3, 1, "", "negation"], [27, 3, 1, "", "negation_function_application"], [27, 3, 1, "", "query_predicate"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.FreshenFreeVariables": [[27, 3, 1, "", "implication_with_free_variables"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.HeadConstantToBodyEquality": [[27, 3, 1, "", "implication_with_constant_term_in_head"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.HeadRepeatedVariableToBodyEquality": [[27, 3, 1, "", "implication_with_repeated_variable_in_head"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.RemoveDuplicatedAntecedentPredicates": [[27, 3, 1, "", "implication_with_duplicated_antecedent_predicate"], [27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.TranslateToDatalogSemantics": [[27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.UnifyVariableEqualities": [[27, 5, 1, "", "type"]], "neurolang.datalog.expression_processing.UnifyVariableEqualitiesMixin": [[27, 3, 1, "", "add_equality_with_constant"], [27, 3, 1, "", "add_equality_with_symbol"], [27, 3, 1, "", "build_substitutions_from_equalities"], [27, 3, 1, "", "extract_and_unify_var_eqs_in_implication"], [27, 3, 1, "", "extract_variable_equalities"], [27, 5, 1, "", "type"]], "neurolang.datalog.expressions": [[28, 2, 1, "", "Conjunction"], [28, 2, 1, "", "Fact"], [28, 2, 1, "", "Implication"], [28, 2, 1, "", "Negation"], [28, 2, 1, "", "TranslateToLogic"], [28, 2, 1, "", "UnaryLogicOperator"], [28, 2, 1, "", "Union"]], "neurolang.datalog.expressions.Conjunction": [[28, 5, 1, "", "type"]], "neurolang.datalog.expressions.Fact": [[28, 4, 1, "", "fact"], [28, 5, 1, "", "type"]], "neurolang.datalog.expressions.Implication": [[28, 5, 1, "", "type"]], "neurolang.datalog.expressions.Negation": [[28, 5, 1, "", "type"]], "neurolang.datalog.expressions.TranslateToLogic": [[28, 3, 1, "", "build_conjunction_from_expression_block"], [28, 3, 1, "", "translate_true_implication"], [28, 5, 1, "", "type"]], "neurolang.datalog.expressions.UnaryLogicOperator": [[28, 5, 1, "", "type"]], "neurolang.datalog.expressions.Union": [[28, 5, 1, "", "type"]], "neurolang.datalog.instance": [[29, 2, 1, "", "FrozenInstance"], [29, 2, 1, "", "FrozenMapInstance"], [29, 2, 1, "", "FrozenSetInstance"], [29, 2, 1, "", "Instance"], [29, 2, 1, "", "MapInstance"], [29, 2, 1, "", "SetInstance"]], "neurolang.datalog.instance.FrozenInstance": [[29, 3, 1, "", "copy"], [29, 3, 1, "", "is_empty"]], "neurolang.datalog.instance.FrozenMapInstance": [[29, 3, 1, "", "as_map"], [29, 3, 1, "", "as_set"], [29, 3, 1, "", "items"], [29, 3, 1, "", "values"]], "neurolang.datalog.instance.FrozenSetInstance": [[29, 3, 1, "", "as_map"], [29, 3, 1, "", "as_set"]], "neurolang.datalog.instance.Instance": [[29, 3, 1, "", "copy"]], "neurolang.datalog.instance.MapInstance": [[29, 3, 1, "", "as_map"], [29, 3, 1, "", "as_set"]], "neurolang.datalog.instance.SetInstance": [[29, 3, 1, "", "add"], [29, 3, 1, "", "as_map"], [29, 3, 1, "", "as_set"], [29, 3, 1, "", "discard"]], "neurolang.datalog.magic_sets": [[30, 2, 1, "", "AdornedSymbol"], [30, 2, 1, "", "LeftToRightSIPS"], [30, 2, 1, "", "ReplaceAdornedSymbolWalker"], [30, 2, 1, "", "SIPS"], [30, 1, 1, "", "adorn_antecedent"], [30, 1, 1, "", "adorn_code"], [30, 1, 1, "", "create_balbin_magic_rules"], [30, 1, 1, "", "create_magic_query_inits"], [30, 1, 1, "", "edb_with_prob_symbols"], [30, 1, 1, "", "magic_predicate"], [30, 1, 1, "", "magic_rewrite"], [30, 1, 1, "", "reachable_adorned_code"]], "neurolang.datalog.magic_sets.AdornedSymbol": [[30, 4, 1, "", "name"], [30, 5, 1, "", "type"]], "neurolang.datalog.magic_sets.ReplaceAdornedSymbolWalker": [[30, 3, 1, "", "implication"], [30, 3, 1, "", "replace_adorned_symbol"], [30, 5, 1, "", "type"]], "neurolang.datalog.magic_sets.SIPS": [[30, 3, 1, "", "creates_arcs"]], "neurolang.datalog.negation": [[31, 2, 1, "", "DatalogProgramNegation"], [31, 2, 1, "", "DatalogProgramNegationMixin"], [31, 2, 1, "", "NegativeFact"], [31, 1, 1, "", "is_conjunctive_negation"]], "neurolang.datalog.negation.DatalogProgramNegation": [[31, 5, 1, "", "protected_keywords"], [31, 5, 1, "", "type"]], "neurolang.datalog.negation.DatalogProgramNegationMixin": [[31, 3, 1, "", "negation_constant"], [31, 3, 1, "", "negative_fact"], [31, 3, 1, "", "statement_intensional"], [31, 5, 1, "", "type"]], "neurolang.datalog.negation.NegativeFact": [[31, 4, 1, "", "fact"], [31, 5, 1, "", "type"]], "neurolang.datalog.ontologies_parser": [[32, 2, 1, "", "OntologyParser"]], "neurolang.datalog.ontologies_parser.OntologyParser": [[32, 3, 1, "", "parse_ontology"]], "neurolang.datalog.ontologies_rewriter": [[33, 2, 1, "", "ExtractFreeVariablesRightImplicationWalker"], [33, 2, 1, "", "OntologyRewriter"]], "neurolang.datalog.ontologies_rewriter.ExtractFreeVariablesRightImplicationWalker": [[33, 3, 1, "", "extract_variables_s"], [33, 5, 1, "", "type"]], "neurolang.datalog.ontologies_rewriter.OntologyRewriter": [[33, 3, 1, "", "Xrewrite"], [33, 3, 1, "", "factorization_step"], [33, 3, 1, "", "rewriting_step"]], "neurolang.datalog.translate_to_named_ra": [[34, 2, 1, "", "TranslateToNamedRA"]], "neurolang.datalog.translate_to_named_ra.TranslateToNamedRA": [[34, 3, 1, "", "classify_formulas_obtain_named_function_applications"], [34, 3, 1, "", "classify_formulas_obtain_names"], [34, 3, 1, "", "generate_ra_expression"], [34, 3, 1, "", "is_col_to_const_equality"], [34, 3, 1, "", "obtain_negative_columns"], [34, 3, 1, "", "process_destroy_formulas"], [34, 3, 1, "", "process_equality_formula"], [34, 3, 1, "", "process_equality_formulas"], [34, 3, 1, "", "process_equality_formulas_as_extended_projections"], [34, 3, 1, "", "process_equality_formulas_constant"], [34, 3, 1, "", "process_extended_projection_formulas"], [34, 3, 1, "", "process_negative_formulas"], [34, 3, 1, "", "process_positive_formulas"], [34, 3, 1, "", "process_selection_formulas"], [34, 3, 1, "", "translate_builtin_fa"], [34, 3, 1, "", "translate_builtin_fa_constants"], [34, 3, 1, "", "translate_conjunction"], [34, 3, 1, "", "translate_disjunction"], [34, 3, 1, "", "translate_eq"], [34, 3, 1, "", "translate_eq_c_c"], [34, 3, 1, "", "translate_eq_c_fa"], [34, 3, 1, "", "translate_eq_c_s"], [34, 3, 1, "", "translate_eq_fa_s"], [34, 3, 1, "", "translate_eq_s_c"], [34, 3, 1, "", "translate_existential_predicate"], [34, 3, 1, "", "translate_fa"], [34, 3, 1, "", "translate_negation"], [34, 5, 1, "", "type"]], "neurolang.datalog.wrapped_collections": [[35, 2, 1, "", "WrappedNamedRelationalAlgebraFrozenSet"], [35, 2, 1, "", "WrappedNamedRelationalAlgebraFrozenSetMixin"], [35, 2, 1, "", "WrappedRelationalAlgebraFrozenSet"], [35, 2, 1, "", "WrappedRelationalAlgebraFrozenSetMixin"], [35, 2, 1, "", "WrappedRelationalAlgebraSet"], [35, 2, 1, "", "WrappedRelationalAlgebraSetBaseMixin"], [35, 2, 1, "", "WrappedRelationalAlgebraSetMixin"], [35, 2, 1, "", "WrappedTypeMap"], [35, 1, 1, "", "named_tuple_as_dict"]], "neurolang.datalog.wrapped_collections.WrappedNamedRelationalAlgebraFrozenSet": [[35, 3, 1, "", "unwrap"]], "neurolang.datalog.wrapped_collections.WrappedNamedRelationalAlgebraFrozenSetMixin": [[35, 4, 1, "", "row_type"]], "neurolang.datalog.wrapped_collections.WrappedRelationalAlgebraFrozenSet": [[35, 3, 1, "", "unwrap"]], "neurolang.datalog.wrapped_collections.WrappedRelationalAlgebraSet": [[35, 3, 1, "", "unwrap"]], "neurolang.datalog.wrapped_collections.WrappedRelationalAlgebraSetBaseMixin": [[35, 3, 1, "", "is_constant_tuple_or_tuple_of_constants"], [35, 4, 1, "", "row_type"], [35, 3, 1, "", "unwrapped_iter"]], "neurolang.datalog.wrapped_collections.WrappedRelationalAlgebraSetMixin": [[35, 3, 1, "", "add"], [35, 3, 1, "", "discard"]], "neurolang.datalog.wrapped_collections.WrappedTypeMap": [[35, 3, 1, "", "backend_2_python"], [35, 5, 1, "", "row_maps"]], "neurolang.datalog_chase": [[36, 2, 1, "", "ChaseNode"], [36, 5, 1, "", "DatalogChase"], [36, 2, 1, "", "DatalogChaseGeneral"], [36, 5, 1, "", "DatalogChaseMGUMixin"], [36, 5, 1, "", "DatalogChaseRelationalAlgebraMixin"]], "neurolang.datalog_chase.ChaseNode": [[36, 5, 1, "", "children"], [36, 5, 1, "", "instance"]], "neurolang.frontend": [[41, 2, 1, "", "ExplicitVBR"], [41, 2, 1, "", "ExplicitVBROverlay"], [41, 2, 1, "", "NeurolangDL"], [41, 2, 1, "", "NeurolangPDL"], [41, 2, 1, "", "Symbol"], [42, 0, 0, "-", "ast"], [43, 0, 0, "-", "ast_tatsu"], [44, 0, 0, "-", "datalog"], [50, 0, 0, "-", "deterministic_frontend"], [51, 0, 0, "-", "drs"], [57, 0, 0, "-", "frontend_extensions"], [58, 0, 0, "-", "neurolang"], [59, 0, 0, "-", "neurosynth_utils"], [60, 0, 0, "-", "probabilistic_frontend"], [61, 0, 0, "-", "query_resolution"], [62, 0, 0, "-", "query_resolution_datalog"], [63, 0, 0, "-", "query_resolution_expressions"]], "neurolang.frontend.ExplicitVBR": [[41, 4, 1, "", "aabb_tree"], [41, 4, 1, "", "bounding_box"], [41, 3, 1, "", "build_tree"], [41, 3, 1, "", "generate_bounding_box"], [41, 3, 1, "", "spatial_image"], [41, 3, 1, "", "to_ijk"], [41, 3, 1, "", "to_xyz"]], "neurolang.frontend.ExplicitVBROverlay": [[41, 3, 1, "", "spatial_image"]], "neurolang.frontend.NeurolangPDL": [[41, 3, 1, "", "add_probabilistic_choice_from_tuples"], [41, 3, 1, "", "add_probabilistic_facts_from_tuples"], [41, 3, 1, "", "add_uniform_probabilistic_choice_over_set"], [41, 4, 1, "", "current_program"], [41, 3, 1, "", "load_ontology"], [41, 3, 1, "", "solve_all"]], "neurolang.frontend.Symbol": [[41, 4, 1, "", "expression"], [41, 4, 1, "", "neurolang_symbol"], [41, 4, 1, "", "symbol"], [41, 4, 1, "", "value"]], "neurolang.frontend.ast": [[42, 2, 1, "", "ASTNode"], [42, 2, 1, "", "ASTWalker"]], "neurolang.frontend.ast.ASTWalker": [[42, 3, 1, "", "evaluate"]], "neurolang.frontend.ast_tatsu": [[43, 2, 1, "", "TatsuASTConverter"]], "neurolang.frontend.datalog": [[45, 0, 0, "-", "natural_syntax"], [46, 0, 0, "-", "standard_syntax"], [47, 0, 0, "-", "sugar"], [49, 0, 0, "-", "syntax_preprocessing"]], "neurolang.frontend.datalog.natural_syntax": [[45, 2, 1, "", "DatalogSemantics"], [45, 1, 1, "", "parser"]], "neurolang.frontend.datalog.natural_syntax.DatalogSemantics": [[45, 3, 1, "", "constant_predicate"], [45, 3, 1, "", "head_predicate"], [45, 3, 1, "", "predicate"], [45, 3, 1, "", "probabilistic_expression"]], "neurolang.frontend.datalog.standard_syntax": [[46, 2, 1, "", "DatalogSemantics"], [46, 2, 1, "", "ExternalSymbol"], [46, 1, 1, "", "parser"]], "neurolang.frontend.datalog.standard_syntax.DatalogSemantics": [[46, 3, 1, "", "argument"], [46, 3, 1, "", "arguments"], [46, 3, 1, "", "arithmetic_operation"], [46, 3, 1, "", "body"], [46, 3, 1, "", "cmd_args"], [46, 3, 1, "", "cmd_identifier"], [46, 3, 1, "", "command"], [46, 3, 1, "", "comparison"], [46, 3, 1, "", "condition"], [46, 3, 1, "", "constant_predicate"], [46, 3, 1, "", "constraint"], [46, 3, 1, "", "existential_predicate"], [46, 3, 1, "", "expressions"], [46, 3, 1, "", "ext_identifier"], [46, 3, 1, "", "fact"], [46, 3, 1, "", "factor"], [46, 3, 1, "", "float"], [46, 3, 1, "", "function_application"], [46, 3, 1, "", "head_predicate"], [46, 3, 1, "", "identifier"], [46, 3, 1, "", "integer"], [46, 3, 1, "", "keyword_args"], [46, 3, 1, "", "keyword_item"], [46, 3, 1, "", "lambda_expression"], [46, 3, 1, "", "negated_predicate"], [46, 3, 1, "", "pos_args"], [46, 3, 1, "", "pos_item"], [46, 3, 1, "", "predicate"], [46, 3, 1, "", "probabilistic_fact"], [46, 3, 1, "", "probabilistic_rule"], [46, 3, 1, "", "query"], [46, 3, 1, "", "rule"], [46, 3, 1, "", "signed_int_ext_identifier"], [46, 3, 1, "", "start"], [46, 3, 1, "", "statement"], [46, 3, 1, "", "statement_function"], [46, 3, 1, "", "term"], [46, 3, 1, "", "text"]], "neurolang.frontend.datalog.standard_syntax.ExternalSymbol": [[46, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar": [[47, 2, 1, "", "Column"], [47, 2, 1, "", "ConvertAttrSToSelectByColumn"], [47, 2, 1, "", "RecogniseSSugar"], [47, 2, 1, "", "SelectByFirstColumn"], [47, 2, 1, "", "TranslateColumnsToAtoms"], [47, 2, 1, "", "TranslateHeadConstantsToEqualities"], [47, 2, 1, "", "TranslateProbabilisticQueryMixin"], [47, 2, 1, "", "TranslateQueryBasedProbabilisticFactMixin"], [47, 2, 1, "", "TranslateSSugarToSelectByColumn"], [47, 2, 1, "", "TranslateSelectByFirstColumn"], [48, 0, 0, "-", "spatial"]], "neurolang.frontend.datalog.sugar.Column": [[47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.ConvertAttrSToSelectByColumn": [[47, 3, 1, "", "conversion"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.RecogniseSSugar": [[47, 3, 1, "", "constant"], [47, 3, 1, "", "others"], [47, 3, 1, "", "s_sugar"], [47, 3, 1, "", "symbol"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.SelectByFirstColumn": [[47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.TranslateColumnsToAtoms": [[47, 3, 1, "", "application_column_sugar"], [47, 3, 1, "", "conjunction_column_sugar"], [47, 3, 1, "", "implication_column_sugar"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.TranslateHeadConstantsToEqualities": [[47, 3, 1, "", "head_constants_to_equalities"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.TranslateProbabilisticQueryMixin": [[47, 3, 1, "", "conditional_query"], [47, 3, 1, "", "rewrite_conditional_query"], [47, 5, 1, "", "type"], [47, 3, 1, "", "within_language_prob_query"]], "neurolang.frontend.datalog.sugar.TranslateQueryBasedProbabilisticFactMixin": [[47, 3, 1, "", "query_based_probfact_wannabe"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.TranslateSSugarToSelectByColumn": [[47, 3, 1, "", "replace_s_getattr_by_first_column"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.TranslateSelectByFirstColumn": [[47, 3, 1, "", "application_column_sugar"], [47, 3, 1, "", "conjunction_column_sugar"], [47, 3, 1, "", "implication_column_sugar"], [47, 3, 1, "", "implication_select_by_left_head"], [47, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.spatial": [[48, 2, 1, "", "DetectEuclideanDistanceBoundMatrix"], [48, 2, 1, "", "TranslateEuclideanDistanceBoundMatrixMixin"]], "neurolang.frontend.datalog.sugar.spatial.DetectEuclideanDistanceBoundMatrix": [[48, 3, 1, "", "any_other_expression"], [48, 3, 1, "", "get_distance_upper_bound"], [48, 3, 1, "", "get_range_pred_for_coord"], [48, 3, 1, "", "get_var_to_euclidean_equality"], [48, 3, 1, "", "implication"], [48, 5, 1, "", "type"]], "neurolang.frontend.datalog.sugar.spatial.TranslateEuclideanDistanceBoundMatrixMixin": [[48, 3, 1, "", "euclidean_spatial_bound"], [48, 3, 1, "", "safe_range_pred_to_coord_set"], [48, 3, 1, "", "solve_spatial_bound"], [48, 5, 1, "", "type"], [48, 3, 1, "", "upper_bound_to_max_dist"]], "neurolang.frontend.datalog.syntax_preprocessing": [[49, 2, 1, "", "ProbFol2DatalogMixin"]], "neurolang.frontend.datalog.syntax_preprocessing.ProbFol2DatalogMixin": [[49, 3, 1, "", "translate_implication"], [49, 3, 1, "", "translate_marg_query"], [49, 5, 1, "", "type"]], "neurolang.frontend.deterministic_frontend": [[50, 2, 1, "", "ExplicitVBR"], [50, 2, 1, "", "ExplicitVBROverlay"], [50, 2, 1, "", "NeurolangDL"], [50, 2, 1, "", "Symbol"]], "neurolang.frontend.deterministic_frontend.ExplicitVBR": [[50, 4, 1, "", "aabb_tree"], [50, 4, 1, "", "bounding_box"], [50, 3, 1, "", "build_tree"], [50, 3, 1, "", "generate_bounding_box"], [50, 3, 1, "", "spatial_image"], [50, 3, 1, "", "to_ijk"], [50, 3, 1, "", "to_xyz"]], "neurolang.frontend.deterministic_frontend.ExplicitVBROverlay": [[50, 3, 1, "", "spatial_image"]], "neurolang.frontend.deterministic_frontend.Symbol": [[50, 4, 1, "", "expression"], [50, 4, 1, "", "neurolang_symbol"], [50, 4, 1, "", "symbol"], [50, 4, 1, "", "value"]], "neurolang.frontend.drs": [[52, 0, 0, "-", "chart_parser"], [53, 0, 0, "-", "drs_builder"], [54, 0, 0, "-", "english_grammar"], [55, 0, 0, "-", "exceptions"], [56, 0, 0, "-", "translate_to_dl"]], "neurolang.frontend.drs.chart_parser": [[52, 2, 1, "", "Chart"], [52, 2, 1, "", "ChartParser"], [52, 2, 1, "", "DictLexicon"], [52, 2, 1, "", "Grammar"], [52, 2, 1, "", "Lexicon"], [52, 2, 1, "", "RootRule"], [52, 2, 1, "", "Rule"], [52, 2, 1, "", "Tokenizer"]], "neurolang.frontend.drs.chart_parser.ChartParser": [[52, 2, 1, "", "Edge"], [52, 3, 1, "", "parse"], [52, 3, 1, "", "recognize"]], "neurolang.frontend.drs.chart_parser.ChartParser.Edge": [[52, 5, 1, "", "completed"], [52, 5, 1, "", "head"], [52, 5, 1, "", "remaining"], [52, 5, 1, "", "rule"], [52, 5, 1, "", "unification"], [52, 5, 1, "", "used_edges"]], "neurolang.frontend.drs.chart_parser.DictLexicon": [[52, 3, 1, "", "get_meanings"]], "neurolang.frontend.drs.chart_parser.Grammar": [[52, 5, 1, "", "type"]], "neurolang.frontend.drs.chart_parser.Lexicon": [[52, 3, 1, "", "get_meanings"]], "neurolang.frontend.drs.chart_parser.RootRule": [[52, 5, 1, "", "type"]], "neurolang.frontend.drs.chart_parser.Rule": [[52, 5, 1, "", "type"]], "neurolang.frontend.drs.chart_parser.Tokenizer": [[52, 3, 1, "", "next_token"], [52, 3, 1, "", "tokenize"], [52, 3, 1, "", "yield_comma"], [52, 3, 1, "", "yield_quote"], [52, 3, 1, "", "yield_word"]], "neurolang.frontend.drs.drs_builder": [[53, 2, 1, "", "DRS"], [53, 2, 1, "", "DRS2FOL"], [53, 2, 1, "", "DRSBuilder"], [53, 1, 1, "", "indent"]], "neurolang.frontend.drs.drs_builder.DRS": [[53, 5, 1, "", "type"]], "neurolang.frontend.drs.drs_builder.DRS2FOL": [[53, 3, 1, "", "drs"], [53, 3, 1, "", "implication"], [53, 5, 1, "", "type"], [53, 3, 1, "", "unary_conjunction"]], "neurolang.frontend.drs.drs_builder.DRSBuilder": [[53, 3, 1, "", "comma_and"], [53, 3, 1, "", "conditional"], [53, 3, 1, "", "float_drs"], [53, 3, 1, "", "implication"], [53, 3, 1, "", "indefinite_noun_phrase"], [53, 3, 1, "", "join_drs"], [53, 3, 1, "", "lit_noun_phrase"], [53, 3, 1, "", "predicate"], [53, 3, 1, "", "proper_names"], [53, 3, 1, "", "quoted_predicate"], [53, 3, 1, "", "sentence_list"], [53, 3, 1, "", "simple_and"], [53, 3, 1, "", "single_sentence_list"], [53, 5, 1, "", "type"], [53, 3, 1, "", "var_apposition"], [53, 3, 1, "", "var_noun_phrase"]], "neurolang.frontend.drs.english_grammar": [[54, 2, 1, "", "EnglishBaseLexicon"], [54, 2, 1, "", "case"], [54, 2, 1, "", "gen"], [54, 2, 1, "", "num"]], "neurolang.frontend.drs.english_grammar.EnglishBaseLexicon": [[54, 3, 1, "", "get_meanings"]], "neurolang.frontend.drs.english_grammar.case": [[54, 5, 1, "", "nom"], [54, 5, 1, "", "notnom"]], "neurolang.frontend.drs.english_grammar.gen": [[54, 5, 1, "", "female"], [54, 5, 1, "", "male"], [54, 5, 1, "", "thing"]], "neurolang.frontend.drs.english_grammar.num": [[54, 5, 1, "", "plural"], [54, 5, 1, "", "singular"]], "neurolang.frontend.drs.exceptions": [[55, 6, 1, "", "AmbiguousSentenceException"], [55, 6, 1, "", "CouldNotParseException"], [55, 6, 1, "", "GrammarException"], [55, 6, 1, "", "ParseDatalogPredicateException"], [55, 6, 1, "", "ParseException"], [55, 6, 1, "", "TokenizeException"], [55, 6, 1, "", "TranslateToDatalogException"]], "neurolang.frontend.drs.translate_to_dl": [[56, 2, 1, "", "TransformIntoConjunctionOfDatalogSentences"], [56, 2, 1, "", "TranslateToDatalog"]], "neurolang.frontend.drs.translate_to_dl.TransformIntoConjunctionOfDatalogSentences": [[56, 5, 1, "", "type"]], "neurolang.frontend.drs.translate_to_dl.TranslateToDatalog": [[56, 3, 1, "", "translate_block"], [56, 3, 1, "", "translate_logical_sentence"], [56, 3, 1, "", "translate_sentence"]], "neurolang.frontend.frontend_extensions": [[57, 2, 1, "", "NumpyFunctionsMixin"]], "neurolang.frontend.frontend_extensions.NumpyFunctionsMixin": [[57, 5, 1, "", "constant_cos"], [57, 5, 1, "", "constant_exp"], [57, 5, 1, "", "constant_log"], [57, 5, 1, "", "constant_log10"], [57, 5, 1, "", "constant_sin"], [57, 5, 1, "", "constant_tan"]], "neurolang.frontend.neurolang": [[58, 2, 1, "", "ExistentialPredicate"], [58, 6, 1, "", "NeuroLangException"], [58, 2, 1, "", "NeuroLangIntermediateRepresentation"], [58, 2, 1, "", "NeuroLangIntermediateRepresentationCompiler"], [58, 2, 1, "", "PatternMatcher"], [58, 1, 1, "", "add_match"], [58, 1, 1, "", "parser"]], "neurolang.frontend.neurolang.ExistentialPredicate": [[58, 5, 1, "", "type"]], "neurolang.frontend.neurolang.NeuroLangIntermediateRepresentation": [[58, 3, 1, "", "and_test"], [58, 3, 1, "", "assignment"], [58, 3, 1, "", "comparison"], [58, 3, 1, "", "dotted_identifier"], [58, 3, 1, "", "function_application"], [58, 3, 1, "", "integer"], [58, 3, 1, "", "negated_argument"], [58, 3, 1, "", "point_float"], [58, 3, 1, "", "power"], [58, 3, 1, "", "predicate"], [58, 3, 1, "", "product"], [58, 3, 1, "", "projection"], [58, 3, 1, "", "query"], [58, 3, 1, "", "statement"], [58, 3, 1, "", "string"], [58, 3, 1, "", "sum"], [58, 3, 1, "", "tuple"], [58, 3, 1, "", "value"]], "neurolang.frontend.neurolang.NeuroLangIntermediateRepresentationCompiler": [[58, 3, 1, "", "compile"], [58, 3, 1, "", "get_intermediate_representation"], [58, 5, 1, "", "type"]], "neurolang.frontend.neurolang.PatternMatcher": [[58, 3, 1, "", "match"], [58, 3, 1, "", "pattern_match"], [58, 3, 1, "", "pattern_match_expression"], [58, 3, 1, "", "pattern_match_expression_parameters"], [58, 3, 1, "", "pattern_match_expression_tuple"], [58, 3, 1, "", "pattern_match_tuple"], [58, 4, 1, "", "patterns"], [58, 5, 1, "", "type"]], "neurolang.frontend.neurosynth_utils": [[59, 2, 1, "", "StudyID"], [59, 2, 1, "", "TfIDf"], [59, 1, 1, "", "fetch_feature_data"], [59, 1, 1, "", "fetch_neurosynth_peak_data"], [59, 1, 1, "", "fetch_study_metadata"], [59, 1, 1, "", "get_ns_mni_peaks_reported"], [59, 1, 1, "", "get_ns_term_study_associations"]], "neurolang.frontend.probabilistic_frontend": [[60, 2, 1, "", "NeurolangPDL"], [60, 2, 1, "", "RegionFrontendCPLogicSolver"]], "neurolang.frontend.probabilistic_frontend.NeurolangPDL": [[60, 3, 1, "", "add_probabilistic_choice_from_tuples"], [60, 3, 1, "", "add_probabilistic_facts_from_tuples"], [60, 3, 1, "", "add_uniform_probabilistic_choice_over_set"], [60, 4, 1, "", "current_program"], [60, 3, 1, "", "load_ontology"], [60, 3, 1, "", "solve_all"]], "neurolang.frontend.probabilistic_frontend.RegionFrontendCPLogicSolver": [[60, 3, 1, "", "function_anatomical_anterior_of"], [60, 3, 1, "", "function_anatomical_inferior_of"], [60, 3, 1, "", "function_anatomical_posterior_of"], [60, 3, 1, "", "function_anatomical_superior_of"], [60, 3, 1, "", "function_anterior_of"], [60, 3, 1, "", "function_inferior_of"], [60, 3, 1, "", "function_left_of"], [60, 3, 1, "", "function_overlapping"], [60, 3, 1, "", "function_posterior_of"], [60, 3, 1, "", "function_right_of"], [60, 3, 1, "", "function_superior_of"], [60, 5, 1, "", "protected_keywords"], [60, 5, 1, "", "type"]], "neurolang.frontend.query_resolution": [[61, 2, 1, "", "NeuroSynthMixin"], [61, 2, 1, "", "QueryBuilderBase"], [61, 2, 1, "", "QuerySymbolsProxy"], [61, 2, 1, "", "RegionMixin"]], "neurolang.frontend.query_resolution.NeuroSynthMixin": [[61, 3, 1, "", "load_neurosynth_mni_peaks_reported"], [61, 3, 1, "", "load_neurosynth_study_ids"], [61, 3, 1, "", "load_neurosynth_term_study_associations"]], "neurolang.frontend.query_resolution.QueryBuilderBase": [[61, 3, 1, "", "add_symbol"], [61, 3, 1, "", "add_tuple_set"], [61, 3, 1, "", "all"], [61, 3, 1, "", "del_symbol"], [61, 4, 1, "", "environment"], [61, 3, 1, "", "exists"], [61, 4, 1, "", "functions"], [61, 3, 1, "", "get_symbol"], [61, 3, 1, "", "new_symbol"], [61, 4, 1, "", "scope"], [61, 4, 1, "", "symbol_table"], [61, 4, 1, "", "symbols"], [61, 4, 1, "", "types"]], "neurolang.frontend.query_resolution.RegionMixin": [[61, 3, 1, "", "add_atlas_set"], [61, 3, 1, "", "add_region"], [61, 3, 1, "", "add_region_set"], [61, 3, 1, "", "create_region"], [61, 3, 1, "", "make_implicit_regions_explicit"], [61, 3, 1, "", "new_region_symbol"], [61, 4, 1, "", "region_names"], [61, 4, 1, "", "region_set_names"], [61, 3, 1, "", "sphere"]], "neurolang.frontend.query_resolution_datalog": [[62, 2, 1, "", "QueryBuilderDatalog"]], "neurolang.frontend.query_resolution_datalog.QueryBuilderDatalog": [[62, 3, 1, "", "add_constraint"], [62, 3, 1, "", "add_tuple_set"], [62, 4, 1, "", "current_program"], [62, 3, 1, "", "execute_datalog_program"], [62, 3, 1, "", "execute_nat_datalog_program"], [62, 3, 1, "", "magic_sets_rewrite_program"], [62, 3, 1, "", "predicate_parameter_names"], [62, 3, 1, "", "query"], [62, 3, 1, "", "reset_program"], [62, 3, 1, "", "solve_all"]], "neurolang.frontend.query_resolution_expressions": [[63, 2, 1, "", "All"], [63, 2, 1, "", "Exists"], [63, 2, 1, "", "Expression"], [63, 2, 1, "", "Fact"], [63, 2, 1, "", "Implication"], [63, 2, 1, "", "Operation"], [63, 2, 1, "", "Query"], [63, 2, 1, "", "RightImplication"], [63, 2, 1, "", "Symbol"], [63, 2, 1, "", "TranslateExpressionToFrontEndExpression"], [63, 1, 1, "", "op_bind"], [63, 1, 1, "", "rop_bind"]], "neurolang.frontend.query_resolution_expressions.Expression": [[63, 3, 1, "", "do"], [63, 3, 1, "", "help"], [63, 4, 1, "", "type"]], "neurolang.frontend.query_resolution_expressions.Operation": [[63, 5, 1, "", "operator_repr"]], "neurolang.frontend.query_resolution_expressions.Symbol": [[63, 4, 1, "", "expression"], [63, 4, 1, "", "neurolang_symbol"], [63, 4, 1, "", "symbol"], [63, 4, 1, "", "value"]], "neurolang.frontend.query_resolution_expressions.TranslateExpressionToFrontEndExpression": [[63, 3, 1, "", "conjunction"], [63, 3, 1, "", "constant"], [63, 3, 1, "", "exists"], [63, 3, 1, "", "fact"], [63, 3, 1, "", "forall"], [63, 3, 1, "", "implication"], [63, 3, 1, "", "negation"], [63, 3, 1, "", "right_implication"], [63, 3, 1, "", "symbol"], [63, 5, 1, "", "type"], [63, 3, 1, "", "walk_function_application"]], "neurolang.interval_algebra": [[64, 1, 1, "", "before"], [64, 1, 1, "", "converse"], [64, 1, 1, "", "during"], [64, 1, 1, "", "equals"], [64, 1, 1, "", "finishes"], [64, 1, 1, "", "get_intervals_relations"], [64, 1, 1, "", "meets"], [64, 1, 1, "", "negate"], [64, 1, 1, "", "overlaps"], [64, 1, 1, "", "starts"], [64, 1, 1, "", "v_before"], [64, 1, 1, "", "v_during"], [64, 1, 1, "", "v_equals"], [64, 1, 1, "", "v_finishes"], [64, 1, 1, "", "v_meets"], [64, 1, 1, "", "v_overlaps"], [64, 1, 1, "", "v_starts"]], "neurolang.logic": [[66, 0, 0, "-", "expression_processing"], [67, 0, 0, "-", "horn_clauses"], [68, 0, 0, "-", "transformations"], [69, 0, 0, "-", "unification"]], "neurolang.logic.expression_processing": [[66, 2, 1, "", "ExtractFreeVariablesWalker"], [66, 2, 1, "", "ExtractLogicAtoms"], [66, 2, 1, "", "ExtractLogicPredicates"], [66, 2, 1, "", "HasExistentialPredicates"], [66, 2, 1, "", "LogicSolver"], [66, 2, 1, "", "TranslateToLogic"], [66, 2, 1, "", "WalkLogicProgramAggregatingSets"], [66, 1, 1, "", "extract_logic_atoms"], [66, 1, 1, "", "extract_logic_free_variables"], [66, 1, 1, "", "extract_logic_predicates"], [66, 1, 1, "", "has_existential_quantifiers"], [66, 1, 1, "", "is_logic_function_application"]], "neurolang.logic.expression_processing.ExtractFreeVariablesWalker": [[66, 3, 1, "", "extract_variables_fa"], [66, 3, 1, "", "extract_variables_q"], [66, 3, 1, "", "extract_variables_s"], [66, 3, 1, "", "extract_variables_symbol"], [66, 5, 1, "", "type"]], "neurolang.logic.expression_processing.ExtractLogicAtoms": [[66, 3, 1, "", "constant"], [66, 3, 1, "", "extract_predicates_fa"], [66, 3, 1, "", "symbol"], [66, 5, 1, "", "type"]], "neurolang.logic.expression_processing.ExtractLogicPredicates": [[66, 3, 1, "", "constant"], [66, 3, 1, "", "extract_predicates_fa"], [66, 3, 1, "", "negation"], [66, 3, 1, "", "symbol"], [66, 5, 1, "", "type"]], "neurolang.logic.expression_processing.HasExistentialPredicates": [[66, 3, 1, "", "existential_predicate"], [66, 3, 1, "", "nary"], [66, 3, 1, "", "operator"], [66, 5, 1, "", "type"], [66, 3, 1, "", "walk_function_application"]], "neurolang.logic.expression_processing.LogicSolver": [[66, 3, 1, "", "evaluate_conjunction"], [66, 3, 1, "", "evaluate_disjunction"], [66, 3, 1, "", "evaluate_implication"], [66, 3, 1, "", "evaluate_implication_false_antecedent"], [66, 3, 1, "", "evaluate_implication_false_consequent"], [66, 3, 1, "", "evaluate_implication_true_antecedent"], [66, 3, 1, "", "evaluate_implication_true_consequent"], [66, 3, 1, "", "evaluate_negation"], [66, 5, 1, "", "type"]], "neurolang.logic.expression_processing.TranslateToLogic": [[66, 3, 1, "", "build_conjunction"], [66, 3, 1, "", "build_disjunction"], [66, 3, 1, "", "build_negation"], [66, 3, 1, "", "translate_logic_operator"], [66, 5, 1, "", "type"]], "neurolang.logic.expression_processing.WalkLogicProgramAggregatingSets": [[66, 3, 1, "", "conjunction"], [66, 3, 1, "", "disjunction"], [66, 3, 1, "", "logic_operator"], [66, 3, 1, "", "negation"], [66, 3, 1, "", "quantifier"], [66, 5, 1, "", "type"], [66, 3, 1, "", "union"]], "neurolang.logic.horn_clauses": [[67, 2, 1, "", "ConvertSRNFToHornClause"], [67, 2, 1, "", "Fol2DatalogMixin"], [67, 6, 1, "", "Fol2DatalogTranslationException"], [67, 2, 1, "", "HornClause"], [67, 2, 1, "", "HornFact"], [67, 2, 1, "", "MoveNegationsToAtomsOrExistentialQuantifiers"], [67, 6, 1, "", "NeuroLangTranslateToHornClauseException"], [67, 2, 1, "", "RangeRestrictedVariables"], [67, 2, 1, "", "TranslateHornClausesToDatalog"], [67, 1, 1, "", "convert_srnf_to_horn_clauses"], [67, 1, 1, "", "convert_to_srnf"], [67, 1, 1, "", "fol_query_to_datalog_program"], [67, 1, 1, "", "is_safe_range"], [67, 1, 1, "", "range_restricted_variables"], [67, 1, 1, "", "translate_horn_clauses_to_datalog"]], "neurolang.logic.horn_clauses.ConvertSRNFToHornClause": [[67, 3, 1, "", "atom"], [67, 3, 1, "", "conjunction"], [67, 3, 1, "", "disjunction"], [67, 3, 1, "", "existential"], [67, 3, 1, "", "negated_atom"], [67, 3, 1, "", "negated_existential"], [67, 5, 1, "", "type"], [67, 3, 1, "", "unknown"]], "neurolang.logic.horn_clauses.Fol2DatalogMixin": [[67, 3, 1, "", "translate_implication"], [67, 5, 1, "", "type"]], "neurolang.logic.horn_clauses.HornClause": [[67, 5, 1, "", "type"]], "neurolang.logic.horn_clauses.HornFact": [[67, 5, 1, "", "type"]], "neurolang.logic.horn_clauses.MoveNegationsToAtomsOrExistentialQuantifiers": [[67, 3, 1, "", "negated_existential"], [67, 5, 1, "", "type"]], "neurolang.logic.horn_clauses.RangeRestrictedVariables": [[67, 3, 1, "", "conjunction"], [67, 3, 1, "", "disjunction"], [67, 3, 1, "", "existential"], [67, 3, 1, "", "function"], [67, 3, 1, "", "negation"], [67, 5, 1, "", "type"]], "neurolang.logic.horn_clauses.TranslateHornClausesToDatalog": [[67, 3, 1, "", "horn_fact"], [67, 3, 1, "", "horn_rule"], [67, 3, 1, "", "quantifier"], [67, 5, 1, "", "type"], [67, 3, 1, "", "union"]], "neurolang.logic.transformations": [[68, 2, 1, "", "CheckConjunctiveQueryWithNegation"], [68, 2, 1, "", "CollapseConjunctions"], [68, 2, 1, "", "CollapseConjunctionsMixin"], [68, 2, 1, "", "CollapseDisjunctions"], [68, 2, 1, "", "CollapseDisjunctionsMixin"], [68, 2, 1, "", "DesambiguateQuantifiedVariables"], [68, 2, 1, "", "DistributeConjunctions"], [68, 2, 1, "", "DistributeDisjunctions"], [68, 2, 1, "", "DistributeImplicationsWithConjunctiveHeads"], [68, 2, 1, "", "DistributeUniversalQuantifiers"], [68, 2, 1, "", "EliminateImplications"], [68, 2, 1, "", "ExtractBoundVariables"], [68, 2, 1, "", "ExtractConjunctiveQueryWithNegation"], [68, 2, 1, "", "ExtractFOLFreeVariables"], [68, 2, 1, "", "FONegELogicExpression"], [68, 2, 1, "", "FactorQuantifiersMixin"], [68, 2, 1, "", "FreshenVariablesWhenQuantified"], [68, 2, 1, "", "GuaranteeConjunction"], [68, 2, 1, "", "GuaranteeDisjunction"], [68, 2, 1, "", "LogicExpressionWalker"], [68, 2, 1, "", "MakeExistentialsImplicit"], [68, 2, 1, "", "MakeUniversalsImplicit"], [68, 2, 1, "", "MoveNegationsToAtoms"], [68, 2, 1, "", "MoveNegationsToAtomsInFONegE"], [68, 2, 1, "", "MoveNegationsToAtomsSimpleOperationsMixin"], [68, 2, 1, "", "MoveQuantifiersUp"], [68, 2, 1, "", "MoveQuantifiersUpFONegE"], [68, 2, 1, "", "PushExistentialsDown"], [68, 2, 1, "", "PushExistentialsDownMixin"], [68, 2, 1, "", "PushQuantifiersDown"], [68, 2, 1, "", "PushUniversalsDown"], [68, 2, 1, "", "PushUniversalsDownMixin"], [68, 2, 1, "", "RemoveDuplicatedConjunctsDisjuncts"], [68, 2, 1, "", "RemoveExistentialOnVariables"], [68, 2, 1, "", "RemoveExistentialPredicates"], [68, 2, 1, "", "RemoveTrivialOperations"], [68, 2, 1, "", "RemoveUniversalPredicates"], [68, 2, 1, "", "ReplaceFreeSymbolWalker"], [68, 2, 1, "", "UsedQuantifiers"], [68, 1, 1, "", "convert_to_pnf_with_cnf_matrix"], [68, 1, 1, "", "convert_to_pnf_with_dnf_matrix"], [68, 1, 1, "", "nary_op_has_duplicated_formulas"]], "neurolang.logic.transformations.CheckConjunctiveQueryWithNegation": [[68, 3, 1, "", "conjunction"], [68, 3, 1, "", "default"], [68, 3, 1, "", "existential_predicate"], [68, 3, 1, "", "f_app"], [68, 3, 1, "", "negation"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.CollapseConjunctions": [[68, 5, 1, "", "type"]], "neurolang.logic.transformations.CollapseConjunctionsMixin": [[68, 3, 1, "", "conjunction"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.CollapseDisjunctions": [[68, 5, 1, "", "type"]], "neurolang.logic.transformations.CollapseDisjunctionsMixin": [[68, 3, 1, "", "disjunction"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.DesambiguateQuantifiedVariables": [[68, 3, 1, "", "implication"], [68, 3, 1, "", "nary_logic_operator"], [68, 3, 1, "", "quantifier"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.DistributeConjunctions": [[68, 3, 1, "", "distribute"], [68, 3, 1, "", "rotate"], [68, 3, 1, "", "split"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.DistributeDisjunctions": [[68, 3, 1, "", "distribute"], [68, 3, 1, "", "rotate"], [68, 3, 1, "", "split"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.DistributeImplicationsWithConjunctiveHeads": [[68, 3, 1, "", "distribute_implication_with_conjunctive_head"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.DistributeUniversalQuantifiers": [[68, 3, 1, "", "distribute_universal_quantifier"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.EliminateImplications": [[68, 3, 1, "", "remove_implication"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.ExtractBoundVariables": [[68, 3, 1, "", "process_function_application"], [68, 3, 1, "", "process_symbol"], [68, 3, 1, "", "quantifier"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.ExtractConjunctiveQueryWithNegation": [[68, 3, 1, "", "conjunction"], [68, 3, 1, "", "existential_predicate"], [68, 3, 1, "", "f_app"], [68, 3, 1, "", "neg"], [68, 3, 1, "", "pure_conjunction"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.ExtractFOLFreeVariables": [[68, 3, 1, "", "extract_variables_s"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.FONegELogicExpression": [[68, 3, 1, "", "abort_implication"], [68, 3, 1, "", "abort_universal_predicate"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.FactorQuantifiersMixin": [[68, 3, 1, "", "conjunction_with_quantifiers"], [68, 3, 1, "", "disjunction_with_quantifiers"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.FreshenVariablesWhenQuantified": [[68, 3, 1, "", "replace_variable_in_quantifier"], [68, 5, 1, "", "type"], [68, 3, 1, "", "walk_through_implication"]], "neurolang.logic.transformations.GuaranteeConjunction": [[68, 3, 1, "", "guarantee_conjunction"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.GuaranteeDisjunction": [[68, 3, 1, "", "guarantee_conjunction"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.LogicExpressionWalker": [[68, 5, 1, "", "type"], [68, 3, 1, "", "walk_constant"], [68, 3, 1, "", "walk_function"], [68, 3, 1, "", "walk_nary"], [68, 3, 1, "", "walk_negation"], [68, 3, 1, "", "walk_quantifier"], [68, 3, 1, "", "walk_symbol"]], "neurolang.logic.transformations.MakeExistentialsImplicit": [[68, 3, 1, "", "existential"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.MakeUniversalsImplicit": [[68, 5, 1, "", "type"], [68, 3, 1, "", "universal"]], "neurolang.logic.transformations.MoveNegationsToAtoms": [[68, 3, 1, "", "negated_existential"], [68, 3, 1, "", "negated_universal"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.MoveNegationsToAtomsInFONegE": [[68, 3, 1, "", "negated_universal"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.MoveNegationsToAtomsSimpleOperationsMixin": [[68, 3, 1, "", "negated_conjunction"], [68, 3, 1, "", "negated_disjunction"], [68, 3, 1, "", "negated_negation"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.MoveQuantifiersUp": [[68, 3, 1, "", "negated_existential"], [68, 3, 1, "", "negated_universal"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.MoveQuantifiersUpFONegE": [[68, 5, 1, "", "type"]], "neurolang.logic.transformations.PushExistentialsDown": [[68, 5, 1, "", "type"]], "neurolang.logic.transformations.PushExistentialsDownMixin": [[68, 3, 1, "", "dont_push_when_it_can_be_unsafe"], [68, 3, 1, "", "nested_existential"], [68, 3, 1, "", "push_eliminate_trivial_operation"], [68, 3, 1, "", "push_existential_down"], [68, 3, 1, "", "push_existential_down_disjunction"], [68, 3, 1, "", "remove_trivial_existential"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.PushQuantifiersDown": [[68, 5, 1, "", "type"]], "neurolang.logic.transformations.PushUniversalsDown": [[68, 5, 1, "", "type"]], "neurolang.logic.transformations.PushUniversalsDownMixin": [[68, 3, 1, "", "push_eliminate_trivial_operation"], [68, 3, 1, "", "push_universal_down_conjunction"], [68, 3, 1, "", "push_universal_down_conjunction_not_safe"], [68, 3, 1, "", "push_universal_down_disjunction"], [68, 3, 1, "", "remove_trivial_universal"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.RemoveDuplicatedConjunctsDisjuncts": [[68, 3, 1, "", "conjunction"], [68, 3, 1, "", "disjunction"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.RemoveExistentialOnVariables": [[68, 3, 1, "", "existential"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.RemoveExistentialPredicates": [[68, 3, 1, "", "existential_predicate"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.RemoveTrivialOperations": [[68, 3, 1, "", "implication"], [68, 3, 1, "", "remove_double_negation"], [68, 3, 1, "", "remove_single"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.RemoveUniversalPredicates": [[68, 5, 1, "", "type"], [68, 3, 1, "", "universal"]], "neurolang.logic.transformations.ReplaceFreeSymbolWalker": [[68, 3, 1, "", "stop_if_bound"], [68, 5, 1, "", "type"]], "neurolang.logic.transformations.UsedQuantifiers": [[68, 3, 1, "", "conjunction"], [68, 3, 1, "", "disjunction"], [68, 3, 1, "", "function"], [68, 3, 1, "", "implication"], [68, 3, 1, "", "negation"], [68, 3, 1, "", "quantifier"], [68, 3, 1, "", "symbol"], [68, 5, 1, "", "type"]], "neurolang.logic.unification": [[69, 1, 1, "", "apply_substitution"], [69, 1, 1, "", "apply_substitution_arguments"], [69, 1, 1, "", "compose_substitutions"], [69, 1, 1, "", "merge_substitutions"], [69, 1, 1, "", "most_general_unifier"], [69, 1, 1, "", "most_general_unifier_arguments"], [69, 1, 1, "", "most_general_unifier_extract_arguments"]], "neurolang.neurolang": [[70, 2, 1, "", "ExplicitVBR"], [70, 2, 1, "", "ExplicitVBROverlay"], [70, 2, 1, "", "NeurolangDL"], [70, 2, 1, "", "NeurolangPDL"]], "neurolang.neurolang.ExplicitVBR": [[70, 4, 1, "", "aabb_tree"], [70, 4, 1, "", "bounding_box"], [70, 3, 1, "", "build_tree"], [70, 3, 1, "", "generate_bounding_box"], [70, 3, 1, "", "spatial_image"], [70, 3, 1, "", "to_ijk"], [70, 3, 1, "", "to_xyz"]], "neurolang.neurolang.ExplicitVBROverlay": [[70, 3, 1, "", "spatial_image"]], "neurolang.neurolang.NeurolangPDL": [[70, 3, 1, "", "add_probabilistic_choice_from_tuples"], [70, 3, 1, "", "add_probabilistic_facts_from_tuples"], [70, 3, 1, "", "add_uniform_probabilistic_choice_over_set"], [70, 4, 1, "", "current_program"], [70, 3, 1, "", "load_ontology"], [70, 3, 1, "", "solve_all"]], "neurolang.neurolang_compiler": [[71, 2, 1, "", "NeuroLangIntermediateRepresentationCompiler"]], "neurolang.neurolang_compiler.NeuroLangIntermediateRepresentationCompiler": [[71, 3, 1, "", "compile"], [71, 3, 1, "", "pop_scope"], [71, 3, 1, "", "push_scope"], [71, 4, 1, "", "symbol_table"]], "neurolang.perior_tree": [[72, 2, 1, "", "Boundary"], [72, 2, 1, "", "BoundedAABB"], [72, 2, 1, "", "Node"], [72, 2, 1, "", "Tree"], [72, 1, 1, "", "methdispatch"]], "neurolang.perior_tree.Boundary": [[72, 3, 1, "", "adjust_direction"], [72, 3, 1, "", "adjust_position"]], "neurolang.perior_tree.BoundedAABB": [[72, 3, 1, "", "adjust_to_bound"], [72, 3, 1, "", "cardinal_tiles"], [72, 4, 1, "", "center"], [72, 3, 1, "", "contains"], [72, 3, 1, "", "contains_tuple"], [72, 3, 1, "", "direction_matrix"], [72, 3, 1, "", "expand"], [72, 3, 1, "", "expand_object"], [72, 3, 1, "", "expand_tuple"], [72, 3, 1, "", "intersects"], [72, 4, 1, "", "volume"], [72, 4, 1, "", "width"]], "neurolang.perior_tree.Node": [[72, 4, 1, "", "is_leaf"]], "neurolang.perior_tree.Tree": [[72, 3, 1, "", "add"], [72, 3, 1, "", "expand_region_box"], [72, 3, 1, "", "query_regions_axdir"], [72, 3, 1, "", "query_regions_contained_in_box"]], "neurolang.probabilistic": [[74, 0, 0, "-", "containment"], [75, 0, 0, "-", "cplogic"], [82, 0, 0, "-", "dalvi_suciu_lift"], [83, 0, 0, "-", "distributions"], [84, 0, 0, "-", "exceptions"], [85, 0, 0, "-", "expression_processing"], [86, 0, 0, "-", "expressions"], [87, 0, 0, "-", "magic_sets_processing"], [88, 0, 0, "-", "ppdl"], [89, 0, 0, "-", "probabilistic_ra_utils"], [90, 0, 0, "-", "probabilistic_semiring_solver"], [91, 0, 0, "-", "query_resolution"], [92, 0, 0, "-", "ranking"], [93, 0, 0, "-", "shattering"], [94, 0, 0, "-", "small_dichotomy_theorem_based_solver"], [95, 0, 0, "-", "stratification"], [96, 0, 0, "-", "transforms"], [97, 0, 0, "-", "weighted_model_counting"]], "neurolang.probabilistic.containment": [[74, 1, 1, "", "is_contained"], [74, 1, 1, "", "is_contained_rule"]], "neurolang.probabilistic.cplogic": [[75, 1, 1, "", "build_always_true_provenance_relation"], [76, 0, 0, "-", "cplogic_to_gm"], [75, 1, 1, "", "fresh_name_relation"], [78, 0, 0, "-", "grounding"], [80, 0, 0, "-", "program"], [75, 1, 1, "", "rename_columns_for_args_to_match"]], "neurolang.probabilistic.cplogic.cplogic_to_gm": [[76, 2, 1, "", "AndPlateNode"], [76, 2, 1, "", "BernoulliPlateNode"], [76, 2, 1, "", "CPLogicGroundingToGraphicalModelTranslator"], [76, 2, 1, "", "GraphicalModel"], [76, 2, 1, "", "NaryChoicePlateNode"], [76, 2, 1, "", "NaryChoiceResultPlateNode"], [76, 2, 1, "", "PlateNode"], [76, 2, 1, "", "ProbabilisticPlateNode"], [76, 1, 1, "", "is_extensional_grounding"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.AndPlateNode": [[76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.BernoulliPlateNode": [[76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.CPLogicGroundingToGraphicalModelTranslator": [[76, 3, 1, "", "add_plate_node"], [76, 3, 1, "", "block_of_groundings"], [76, 3, 1, "", "extensional_set_grounding"], [76, 3, 1, "", "intensional_rule_grounding"], [76, 3, 1, "", "probabilistic_choice_grounding"], [76, 3, 1, "", "probfact_set_grounding"], [76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.GraphicalModel": [[76, 3, 1, "", "get_node"], [76, 3, 1, "", "get_parent_node_symbols"], [76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.NaryChoicePlateNode": [[76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.NaryChoiceResultPlateNode": [[76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.PlateNode": [[76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.cplogic_to_gm.ProbabilisticPlateNode": [[76, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.grounding": [[78, 2, 1, "", "Chase"], [78, 2, 1, "", "Datalog"], [78, 1, 1, "", "build_extensional_grounding"], [78, 1, 1, "", "build_grounding"], [78, 1, 1, "", "build_pchoice_grounding"], [78, 1, 1, "", "build_pfact_grounding_from_set"], [78, 1, 1, "", "build_probabilistic_grounding"], [78, 1, 1, "", "build_rule_grounding"], [78, 1, 1, "", "cplogic_to_datalog"], [78, 1, 1, "", "get_grounding_dependencies"], [78, 1, 1, "", "get_grounding_pred_symb"], [78, 1, 1, "", "get_grounding_predicate"], [78, 1, 1, "", "ground_cplogic_program"], [78, 1, 1, "", "remove_probability_column"], [78, 1, 1, "", "topological_sort_groundings"], [78, 1, 1, "", "topological_sort_groundings_util"]], "neurolang.probabilistic.cplogic.grounding.Datalog": [[78, 5, 1, "", "protected_keywords"], [78, 5, 1, "", "type"]], "neurolang.probabilistic.cplogic.program": [[80, 2, 1, "", "CPLogicMixin"], [80, 2, 1, "", "CPLogicProgram"]], "neurolang.probabilistic.cplogic.program.CPLogicMixin": [[80, 3, 1, "", "add_probabilistic_choice_from_tuples"], [80, 3, 1, "", "add_probabilistic_facts_from_tuples"], [80, 3, 1, "", "extensional_database"], [80, 3, 1, "", "marg_implication"], [80, 5, 1, "", "pchoice_pred_symb_set_symb"], [80, 4, 1, "", "pchoice_pred_symbs"], [80, 5, 1, "", "pfact_pred_symb_set_symb"], [80, 4, 1, "", "pfact_pred_symbs"], [80, 4, 1, "", "predicate_symbols"], [80, 3, 1, "", "probabilistic_choices"], [80, 3, 1, "", "probabilistic_fact"], [80, 3, 1, "", "probabilistic_facts"], [80, 4, 1, "", "probabilistic_predicate_symbols"], [80, 5, 1, "", "protected_keywords"], [80, 3, 1, "", "query_based_probabilistic_fact"], [80, 5, 1, "", "type"], [80, 3, 1, "", "union_with_probabilistic_facts"], [80, 3, 1, "", "within_language_marg_query"], [80, 3, 1, "", "within_language_prob_queries"], [80, 3, 1, "", "within_language_succ_query"]], "neurolang.probabilistic.cplogic.program.CPLogicProgram": [[80, 5, 1, "", "protected_keywords"], [80, 5, 1, "", "type"]], "neurolang.probabilistic.dalvi_suciu_lift": [[82, 1, 1, "", "dalvi_suciu_lift"], [82, 1, 1, "", "solve_marg_query"], [82, 1, 1, "", "solve_succ_query"]], "neurolang.probabilistic.distributions": [[83, 2, 1, "", "DiscreteDistribution"], [83, 2, 1, "", "Distribution"], [83, 2, 1, "", "TableDistribution"]], "neurolang.probabilistic.distributions.Distribution": [[83, 3, 1, "", "expectation"], [83, 3, 1, "", "probability"], [83, 4, 1, "", "support"]], "neurolang.probabilistic.distributions.TableDistribution": [[83, 3, 1, "", "conditioned_on"], [83, 3, 1, "", "expectation"], [83, 3, 1, "", "probability"], [83, 4, 1, "", "support"]], "neurolang.probabilistic.exceptions": [[84, 6, 1, "", "DistributionDoesNotSumToOneError"], [84, 6, 1, "", "ForbiddenConditionalQueryNoProb"], [84, 6, 1, "", "ForbiddenConditionalQueryNonConjunctive"], [84, 6, 1, "", "MalformedProbabilisticTupleError"], [84, 6, 1, "", "NotEasilyShatterableError"], [84, 6, 1, "", "NotHierarchicalQueryException"], [84, 6, 1, "", "RepeatedTuplesInProbabilisticRelationError"], [84, 6, 1, "", "UncomparableDistributionsError"], [84, 6, 1, "", "UnsupportedProbabilisticQueryError"]], "neurolang.probabilistic.expression_processing": [[85, 1, 1, "", "add_to_union"], [85, 1, 1, "", "build_probabilistic_fact_set"], [85, 1, 1, "", "check_probabilistic_choice_set_probabilities_sum_to_one"], [85, 1, 1, "", "const_or_symb_as_python_type"], [85, 1, 1, "", "construct_within_language_succ_result"], [85, 1, 1, "", "get_probchoice_variable_equalities"], [85, 1, 1, "", "get_within_language_prob_query_prob_term"], [85, 1, 1, "", "group_preds_by_functor"], [85, 1, 1, "", "group_probabilistic_facts_by_pred_symb"], [85, 1, 1, "", "is_builtin"], [85, 1, 1, "", "is_probabilistic_fact"], [85, 1, 1, "", "is_probabilistic_predicate_symbol"], [85, 1, 1, "", "is_query_based_probfact"], [85, 1, 1, "", "is_within_language_prob_query"], [85, 1, 1, "", "lift_optimization_for_choice_predicates"], [85, 1, 1, "", "separate_deterministic_probabilistic_code"], [85, 1, 1, "", "union_contains_probabilistic_facts"], [85, 1, 1, "", "within_language_succ_query_to_intensional_rule"]], "neurolang.probabilistic.expressions": [[86, 2, 1, "", "Condition"], [86, 2, 1, "", "Grounding"], [86, 2, 1, "", "ProbabilisticBinaryLogicOperator"], [86, 2, 1, "", "ProbabilisticChoiceGrounding"], [86, 2, 1, "", "ProbabilisticPredicate"], [86, 2, 1, "", "ProbabilisticQuery"]], "neurolang.probabilistic.expressions.Condition": [[86, 5, 1, "", "type"]], "neurolang.probabilistic.expressions.Grounding": [[86, 5, 1, "", "type"]], "neurolang.probabilistic.expressions.ProbabilisticBinaryLogicOperator": [[86, 5, 1, "", "type"]], "neurolang.probabilistic.expressions.ProbabilisticChoiceGrounding": [[86, 5, 1, "", "type"]], "neurolang.probabilistic.expressions.ProbabilisticPredicate": [[86, 4, 1, "", "args"], [86, 4, 1, "", "functor"], [86, 5, 1, "", "type"]], "neurolang.probabilistic.expressions.ProbabilisticQuery": [[86, 5, 1, "", "type"]], "neurolang.probabilistic.magic_sets_processing": [[87, 2, 1, "", "ReplaceWLQWalker"], [87, 1, 1, "", "probabilistic_postprocess_magic_rules"], [87, 1, 1, "", "update_rules_with_new_prob_expressions"]], "neurolang.probabilistic.magic_sets_processing.ReplaceWLQWalker": [[87, 3, 1, "", "implication"], [87, 3, 1, "", "replace_probabilistic_predicate"], [87, 3, 1, "", "replace_probabilistic_queries"], [87, 5, 1, "", "type"]], "neurolang.probabilistic.ppdl": [[88, 2, 1, "", "PPDL"], [88, 2, 1, "", "PPDLDeltaSymbol"], [88, 2, 1, "", "PPDLDeltaTerm"], [88, 2, 1, "", "PPDLMixin"], [88, 1, 1, "", "get_dterm"], [88, 1, 1, "", "get_dterm_index"], [88, 1, 1, "", "is_ppdl_rule"]], "neurolang.probabilistic.ppdl.PPDL": [[88, 5, 1, "", "protected_keywords"], [88, 5, 1, "", "type"]], "neurolang.probabilistic.ppdl.PPDLDeltaSymbol": [[88, 5, 1, "", "type"]], "neurolang.probabilistic.ppdl.PPDLDeltaTerm": [[88, 5, 1, "", "type"]], "neurolang.probabilistic.ppdl.PPDLMixin": [[88, 3, 1, "", "ppdl_rule"], [88, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_ra_utils": [[89, 2, 1, "", "DeterministicFactSet"], [89, 2, 1, "", "GetProbabilisticSetAtom"], [89, 2, 1, "", "NonLiftable"], [89, 2, 1, "", "ProbabilisticChoiceSet"], [89, 2, 1, "", "ProbabilisticFactSet"], [89, 1, 1, "", "classify_and_wrap_symbols"], [89, 1, 1, "", "generate_probabilistic_symbol_table_for_query"], [89, 1, 1, "", "is_atom_a_deterministic_relation"], [89, 1, 1, "", "is_atom_a_probabilistic_choice_relation"], [89, 1, 1, "", "is_atom_a_probabilistic_fact_relation"]], "neurolang.probabilistic.probabilistic_ra_utils.DeterministicFactSet": [[89, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_ra_utils.GetProbabilisticSetAtom": [[89, 3, 1, "", "default"], [89, 3, 1, "", "projection"], [89, 3, 1, "", "resolve_symbol"], [89, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_ra_utils.NonLiftable": [[89, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_ra_utils.ProbabilisticChoiceSet": [[89, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_ra_utils.ProbabilisticFactSet": [[89, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_semiring_solver": [[90, 2, 1, "", "ProbSemiringSolver"], [90, 2, 1, "", "ProbSemiringSolverMixin"], [90, 2, 1, "", "ProbSemiringToRelationalAlgebraSolver"]], "neurolang.probabilistic.probabilistic_semiring_solver.ProbSemiringSolver": [[90, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_semiring_solver.ProbSemiringSolverMixin": [[90, 3, 1, "", "deterministic_fact_set"], [90, 3, 1, "", "deterministic_fact_set_general"], [90, 3, 1, "", "eliminate_superfluous_projection"], [90, 3, 1, "", "empty_deterministic_fact_set"], [90, 3, 1, "", "probabilistic_choice_set"], [90, 3, 1, "", "probabilistic_choice_set_to_symbol"], [90, 3, 1, "", "probabilistic_fact_set"], [90, 3, 1, "", "probabilistic_fact_set_invalid"], [90, 3, 1, "", "push_projection_in_deterministic"], [90, 5, 1, "", "type"]], "neurolang.probabilistic.probabilistic_semiring_solver.ProbSemiringToRelationalAlgebraSolver": [[90, 5, 1, "", "type"]], "neurolang.probabilistic.query_resolution": [[91, 2, 1, "", "FilterZeroProbability"], [91, 2, 1, "", "FloatArithmeticSimplifier"], [91, 2, 1, "", "QueryBasedProbFactToDetRule"], [91, 2, 1, "", "RAQueryOptimiser"], [91, 1, 1, "", "compute_probabilistic_solution"], [91, 1, 1, "", "generate_provenance_query_solver"], [91, 1, 1, "", "lift_solve_marg_query"], [91, 1, 1, "", "reintroduce_unified_head_terms"]], "neurolang.probabilistic.query_resolution.FilterZeroProbability": [[91, 3, 1, "", "add_zero_filter"], [91, 5, 1, "", "type"]], "neurolang.probabilistic.query_resolution.FloatArithmeticSimplifier": [[91, 3, 1, "", "simplify_mul_left"], [91, 3, 1, "", "simplify_mul_right"], [91, 5, 1, "", "type"]], "neurolang.probabilistic.query_resolution.QueryBasedProbFactToDetRule": [[91, 3, 1, "", "query_based_probafact"], [91, 5, 1, "", "type"], [91, 3, 1, "", "union_with_query_based_pfact"]], "neurolang.probabilistic.query_resolution.RAQueryOptimiser": [[91, 5, 1, "", "type"]], "neurolang.probabilistic.ranking": [[92, 1, 1, "", "partially_rank_query"], [92, 1, 1, "", "verify_that_the_query_is_ranked"]], "neurolang.probabilistic.shattering": [[93, 2, 1, "", "NormalizeNotEquals"], [93, 2, 1, "", "RelationalAlgebraSelectionConjunction"], [93, 2, 1, "", "ShatterEqualities"], [93, 1, 1, "", "atom_to_constant_to_RA_conditions"], [93, 1, 1, "", "conditions_per_symbol"], [93, 1, 1, "", "sets_per_symbol"], [93, 1, 1, "", "shatter_constants"]], "neurolang.probabilistic.shattering.NormalizeNotEquals": [[93, 3, 1, "", "flip_ne_arguments"], [93, 5, 1, "", "type"]], "neurolang.probabilistic.shattering.RelationalAlgebraSelectionConjunction": [[93, 3, 1, "", "selection_conjunction"], [93, 5, 1, "", "type"]], "neurolang.probabilistic.shattering.ShatterEqualities": [[93, 3, 1, "", "shatter_inequalities"], [93, 3, 1, "", "shatter_symbol"], [93, 5, 1, "", "type"]], "neurolang.probabilistic.small_dichotomy_theorem_based_solver": [[94, 1, 1, "", "extract_atom_sets_and_detect_self_joins"], [94, 1, 1, "", "is_hierarchical_without_self_joins"], [94, 1, 1, "", "solve_marg_query"], [94, 1, 1, "", "solve_succ_query"]], "neurolang.probabilistic.stratification": [[95, 1, 1, "", "get_list_of_intensional_rules"], [95, 1, 1, "", "reachable_code_from_query"], [95, 1, 1, "", "stratify_program"]], "neurolang.probabilistic.transforms": [[96, 1, 1, "", "add_existentials_except"], [96, 1, 1, "", "convert_rule_to_ucq"], [96, 1, 1, "", "convert_to_cnf_existential_ucq"], [96, 1, 1, "", "convert_to_dnf_existential_ucq"], [96, 1, 1, "", "minimise_formulas_containment"], [96, 1, 1, "", "minimize_component_conjunction"], [96, 1, 1, "", "minimize_component_disjunction"], [96, 1, 1, "", "minimize_ucq_in_cnf"], [96, 1, 1, "", "minimize_ucq_in_dnf"], [96, 1, 1, "", "split_positive_negative_formulas"], [96, 1, 1, "", "unify_existential_variables"]], "neurolang.probabilistic.weighted_model_counting": [[97, 2, 1, "", "DeterministicFactSetTranslation"], [97, 2, 1, "", "EliminateSuperfluousProjectionMixin"], [97, 2, 1, "", "RAQueryOptimiser"], [97, 2, 1, "", "SDDWMCSemiRingSolver"], [97, 2, 1, "", "SemiRingRAPToSDD"], [97, 2, 1, "", "WMCSemiRingSolver"], [97, 1, 1, "", "build_global_sdd_model_rows"], [97, 1, 1, "", "generate_probability_table"], [97, 1, 1, "", "generate_weights"], [97, 1, 1, "", "model_count_and_per_row_probability"], [97, 1, 1, "", "perform_wmc"], [97, 1, 1, "", "prepare_initial_query"], [97, 1, 1, "", "sdd_compilation"], [97, 1, 1, "", "sdd_compilation_and_wmc"], [97, 1, 1, "", "sdd_solver_global_model"], [97, 1, 1, "", "sdd_solver_per_individual_row"], [97, 1, 1, "", "solve_marg_query"], [97, 1, 1, "", "solve_succ_query"], [97, 1, 1, "", "solve_succ_query_boolean_diagram"], [97, 1, 1, "", "solve_succ_query_sdd_direct"]], "neurolang.probabilistic.weighted_model_counting.DeterministicFactSetTranslation": [[97, 3, 1, "", "deterministic_fact_set_constant"], [97, 5, 1, "", "type"]], "neurolang.probabilistic.weighted_model_counting.EliminateSuperfluousProjectionMixin": [[97, 3, 1, "", "eliminate_superfluous_projection"], [97, 5, 1, "", "type"]], "neurolang.probabilistic.weighted_model_counting.RAQueryOptimiser": [[97, 5, 1, "", "type"]], "neurolang.probabilistic.weighted_model_counting.SDDWMCSemiRingSolver": [[97, 3, 1, "", "deterministic_fact_set"], [97, 3, 1, "", "generate_sdd_expression"], [97, 3, 1, "", "get_new_bernoulli_variable"], [97, 3, 1, "", "probabilistic_choice_set"], [97, 3, 1, "", "probabilistic_fact_set"], [97, 3, 1, "", "probabilistic_fact_set_invalid"], [97, 5, 1, "", "type"], [97, 3, 1, "", "wmc_weights"]], "neurolang.probabilistic.weighted_model_counting.SemiRingRAPToSDD": [[97, 3, 1, "", "add"], [97, 3, 1, "", "eq"], [97, 3, 1, "", "expression_block"], [97, 3, 1, "", "mul"], [97, 3, 1, "", "neg"], [97, 3, 1, "", "or_"], [97, 3, 1, "", "symbol"], [97, 5, 1, "", "type"]], "neurolang.probabilistic.weighted_model_counting.WMCSemiRingSolver": [[97, 3, 1, "", "deterministic_fact_set"], [97, 3, 1, "", "probabilistic_choice_set"], [97, 3, 1, "", "probabilistic_fact_set"], [97, 3, 1, "", "probabilistic_fact_set_invalid"], [97, 5, 1, "", "type"]], "neurolang.region_solver": [[98, 2, 1, "", "RegionSolver"]], "neurolang.region_solver.RegionSolver": [[98, 3, 1, "", "function_regexp"], [98, 3, 1, "", "function_region_union"], [98, 5, 1, "", "type"], [98, 5, 1, "", "type_name"]], "neurolang.regions": [[99, 2, 1, "", "ExplicitVBR"], [99, 2, 1, "", "ExplicitVBROverlay"], [99, 2, 1, "", "ImplicitVBR"], [99, 2, 1, "", "PlanarVolume"], [99, 2, 1, "", "PointSet"], [99, 2, 1, "", "Region"], [99, 2, 1, "", "SphericalVolume"], [99, 2, 1, "", "VolumetricBrainRegion"], [99, 1, 1, "", "region_difference"], [99, 1, 1, "", "region_intersection"], [99, 1, 1, "", "region_set_from_masked_data"], [99, 1, 1, "", "region_union"], [99, 1, 1, "", "take_principal_regions"]], "neurolang.regions.ExplicitVBR": [[99, 4, 1, "", "aabb_tree"], [99, 4, 1, "", "bounding_box"], [99, 3, 1, "", "build_tree"], [99, 3, 1, "", "generate_bounding_box"], [99, 3, 1, "", "spatial_image"], [99, 3, 1, "", "to_ijk"], [99, 3, 1, "", "to_xyz"]], "neurolang.regions.ExplicitVBROverlay": [[99, 3, 1, "", "spatial_image"]], "neurolang.regions.ImplicitVBR": [[99, 3, 1, "", "to_ijk"], [99, 3, 1, "", "to_xyz"]], "neurolang.regions.PlanarVolume": [[99, 4, 1, "", "bounding_box"], [99, 3, 1, "", "project_point_to_plane"], [99, 3, 1, "", "to_ijk"]], "neurolang.regions.PointSet": [[99, 4, 1, "", "aabb_tree"], [99, 4, 1, "", "bounding_box"], [99, 3, 1, "", "build_tree"], [99, 3, 1, "", "generate_bounding_box"], [99, 3, 1, "", "spatial_image"], [99, 3, 1, "", "to_ijk"], [99, 3, 1, "", "to_xyz"]], "neurolang.regions.Region": [[99, 4, 1, "", "bounding_box"], [99, 4, 1, "", "center"], [99, 3, 1, "", "from_spatial_image_label"], [99, 4, 1, "", "width"]], "neurolang.regions.SphericalVolume": [[99, 4, 1, "", "bounding_box"], [99, 4, 1, "", "center"], [99, 4, 1, "", "radius"], [99, 3, 1, "", "to_ijk"]], "neurolang.regions.VolumetricBrainRegion": [[99, 3, 1, "", "remove_empty_bounding_boxes"], [99, 3, 1, "", "to_explicit_vbr"], [99, 3, 1, "", "to_ijk"], [99, 3, 1, "", "to_ijk_set"], [99, 3, 1, "", "to_xyz"], [99, 3, 1, "", "to_xyz_set"]], "neurolang.relational_algebra": [[101, 0, 0, "-", "optimisers"], [102, 0, 0, "-", "relational_algebra"]], "neurolang.relational_algebra.optimisers": [[101, 2, 1, "", "EliminateTrivialProjections"], [101, 2, 1, "", "ProductSimplification"], [101, 2, 1, "", "PushInSelections"], [101, 2, 1, "", "PushUnnamedSelectionsUp"], [101, 2, 1, "", "RelationalAlgebraOptimiser"], [101, 2, 1, "", "RenameOptimizations"], [101, 2, 1, "", "RewriteSelections"], [101, 2, 1, "", "SimplifyExtendedProjectionsWithConstants"]], "neurolang.relational_algebra.optimisers.EliminateTrivialProjections": [[101, 3, 1, "", "convert_extended_projection_2_projection"], [101, 3, 1, "", "convert_extended_projection_2_rename"], [101, 3, 1, "", "eliminate_trivial_nested_projection"], [101, 3, 1, "", "eliminate_trivial_nested_unnamed_projection"], [101, 3, 1, "", "eliminate_trivial_projection"], [101, 3, 1, "", "simplify_projection_extended_projection"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.ProductSimplification": [[101, 3, 1, "", "single_product"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.PushInSelections": [[101, 3, 1, "", "push_selection_in_extended_projection"], [101, 3, 1, "", "push_selection_in_groupby"], [101, 3, 1, "", "push_selection_in_left"], [101, 3, 1, "", "push_selection_in_leftnaturaljoin_left"], [101, 3, 1, "", "push_selection_in_leftnaturaljoin_right"], [101, 3, 1, "", "push_selection_in_projection"], [101, 3, 1, "", "push_selection_in_replace_null"], [101, 3, 1, "", "push_selection_in_right"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.PushUnnamedSelectionsUp": [[101, 3, 1, "", "invert_selection_order"], [101, 3, 1, "", "push_selection_above_name_columns"], [101, 3, 1, "", "push_selection_above_projection"], [101, 3, 1, "", "standardize_projected_column"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.RelationalAlgebraOptimiser": [[101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.RenameOptimizations": [[101, 3, 1, "", "convert_rename_column"], [101, 3, 1, "", "eliminate_trivial_number_columns"], [101, 3, 1, "", "eliminate_trivial_projection_number_columns"], [101, 3, 1, "", "eliminate_trivial_selection_number_columns"], [101, 3, 1, "", "merge_nested_rename_columns"], [101, 3, 1, "", "merge_rename_column_group_by"], [101, 3, 1, "", "merge_rename_columns_extended_projection"], [101, 3, 1, "", "push_rename_past_groupby"], [101, 3, 1, "", "push_rename_past_projection"], [101, 3, 1, "", "push_rename_past_selection"], [101, 3, 1, "", "remove_trivial_rename"], [101, 3, 1, "", "simplify_renames_name"], [101, 3, 1, "", "split_rename_left_naturaljoin"], [101, 3, 1, "", "split_rename_naturaljoin"], [101, 3, 1, "", "switch_rename_replace_null"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.RewriteSelections": [[101, 3, 1, "", "get_arity"], [101, 3, 1, "", "merge_selections"], [101, 3, 1, "", "selection_between_columns_product"], [101, 3, 1, "", "selection_by_constant_on_product"], [101, 3, 1, "", "selection_on_equijoin"], [101, 3, 1, "", "selection_on_equijoin_columns"], [101, 3, 1, "", "selection_push_right"], [101, 3, 1, "", "selection_selection_swap"], [101, 3, 1, "", "selection_shorten_right"], [101, 3, 1, "", "sort_formula_args"], [101, 3, 1, "", "split_relations_column"], [101, 3, 1, "", "swap_formula_args"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.optimisers.SimplifyExtendedProjectionsWithConstants": [[101, 3, 1, "", "nested_extended_projection_constant"], [101, 3, 1, "", "nested_extended_projection_leftnaturaljoin_constant"], [101, 3, 1, "", "nested_extended_projection_leftnaturaljoin_constantr"], [101, 3, 1, "", "nested_extended_projection_naturaljoin_constant_l"], [101, 3, 1, "", "nested_extended_projection_naturaljoin_constantr"], [101, 3, 1, "", "push_computed_columns_up"], [101, 3, 1, "", "push_computed_columns_up_flip"], [101, 3, 1, "", "push_computed_columns_up_left"], [101, 3, 1, "", "push_replace_null_in_ext_proj"], [101, 3, 1, "", "replace_trivial_agg_groupby"], [101, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra": [[102, 2, 1, "", "BinaryRelationalAlgebraOperation"], [102, 2, 1, "", "Column"], [102, 2, 1, "", "ColumnInt"], [102, 2, 1, "", "ColumnStr"], [102, 2, 1, "", "ConcatenateConstantColumn"], [102, 2, 1, "", "Destroy"], [102, 2, 1, "", "Difference"], [102, 2, 1, "", "EquiJoin"], [102, 2, 1, "", "ExtendedProjection"], [102, 2, 1, "", "FunctionApplicationListMember"], [102, 2, 1, "", "GroupByAggregation"], [102, 2, 1, "", "Intersection"], [102, 2, 1, "", "LeftNaturalJoin"], [102, 2, 1, "", "NAryRelationalAlgebraOperation"], [102, 2, 1, "", "NameColumns"], [102, 2, 1, "", "NaturalJoin"], [102, 2, 1, "", "NumberColumns"], [102, 2, 1, "", "Product"], [102, 2, 1, "", "Projection"], [102, 2, 1, "", "RelationalAlgebraOperation"], [102, 2, 1, "", "RelationalAlgebraSolver"], [102, 2, 1, "", "RenameColumn"], [102, 2, 1, "", "RenameColumns"], [102, 2, 1, "", "ReplaceConstantColumnStrBySymbol"], [102, 2, 1, "", "ReplaceNull"], [102, 2, 1, "", "Selection"], [102, 2, 1, "", "StringArithmeticWalker"], [102, 2, 1, "", "UnaryRelationalAlgebraOperation"], [102, 2, 1, "", "Union"], [102, 1, 1, "", "get_expression_columns"], [102, 1, 1, "", "int2columnint_constant"], [102, 1, 1, "", "is_arithmetic_operation"], [102, 1, 1, "", "is_translatable_operation"], [102, 1, 1, "", "str2columnstr_constant"]], "neurolang.relational_algebra.relational_algebra.BinaryRelationalAlgebraOperation": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.ConcatenateConstantColumn": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Destroy": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Difference": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.EquiJoin": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.ExtendedProjection": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.FunctionApplicationListMember": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.GroupByAggregation": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Intersection": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.LeftNaturalJoin": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.NAryRelationalAlgebraOperation": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.NameColumns": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.NaturalJoin": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.NumberColumns": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Product": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Projection": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.RelationalAlgebraOperation": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.RelationalAlgebraSolver": [[102, 3, 1, "", "aggregate"], [102, 3, 1, "", "arithmetic_string_expression"], [102, 3, 1, "", "concatenate_constant_column"], [102, 3, 1, "", "extended_projection"], [102, 3, 1, "", "prov_arithmetic_operation"], [102, 3, 1, "", "ra_constant"], [102, 3, 1, "", "ra_difference"], [102, 3, 1, "", "ra_equijoin"], [102, 3, 1, "", "ra_intersection"], [102, 3, 1, "", "ra_left_naturaljoin"], [102, 3, 1, "", "ra_name_columns"], [102, 3, 1, "", "ra_naturaljoin"], [102, 3, 1, "", "ra_number_columns"], [102, 3, 1, "", "ra_product"], [102, 3, 1, "", "ra_projection"], [102, 3, 1, "", "ra_rename_column"], [102, 3, 1, "", "ra_rename_columns"], [102, 3, 1, "", "ra_symbol"], [102, 3, 1, "", "ra_union"], [102, 3, 1, "", "replace_null"], [102, 3, 1, "", "selection_between_columns"], [102, 3, 1, "", "selection_by_constant"], [102, 3, 1, "", "selection_general_selection_by_constant"], [102, 3, 1, "", "set_destroy"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.RenameColumn": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.RenameColumns": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.ReplaceConstantColumnStrBySymbol": [[102, 3, 1, "", "column_int"], [102, 3, 1, "", "column_str"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.ReplaceNull": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Selection": [[102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.StringArithmeticWalker": [[102, 3, 1, "", "arithmetic_operation"], [102, 3, 1, "", "negative_value"], [102, 3, 1, "", "operation_sum"], [102, 3, 1, "", "process_constant_column_int"], [102, 3, 1, "", "process_constant_column_str"], [102, 3, 1, "", "process_constant_float"], [102, 3, 1, "", "process_constant_int"], [102, 3, 1, "", "process_constant_str"], [102, 3, 1, "", "translatable_numpy_operation"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.UnaryRelationalAlgebraOperation": [[102, 3, 1, "", "columns"], [102, 5, 1, "", "type"]], "neurolang.relational_algebra.relational_algebra.Union": [[102, 5, 1, "", "type"]], "neurolang.solver": [[104, 2, 1, "", "BooleanOperationsSolver"], [104, 2, 1, "", "BooleanRewriteSolver"], [104, 2, 1, "", "FirstOrderLogicSolver"], [104, 2, 1, "", "GenericSolver"], [104, 6, 1, "", "NeuroLangPredicateException"], [104, 2, 1, "", "NumericOperationsSolver"]], "neurolang.solver.BooleanOperationsSolver": [[104, 3, 1, "", "rewrite_boolean_and"], [104, 3, 1, "", "rewrite_boolean_and_l"], [104, 3, 1, "", "rewrite_boolean_and_r"], [104, 3, 1, "", "rewrite_boolean_inversion"], [104, 3, 1, "", "rewrite_boolean_or"], [104, 3, 1, "", "rewrite_boolean_or_l"], [104, 3, 1, "", "rewrite_boolean_or_r"], [104, 5, 1, "", "type"]], "neurolang.solver.BooleanRewriteSolver": [[104, 3, 1, "", "bring_constants_up_left"], [104, 3, 1, "", "cast_binary"], [104, 3, 1, "", "cast_unary"], [104, 3, 1, "", "conjunction_composition_dual"], [104, 3, 1, "", "conjunction_definition_dual"], [104, 3, 1, "", "conjunction_distribution"], [104, 3, 1, "", "dual_operator"], [104, 3, 1, "", "neg_disj_to_conj"], [104, 3, 1, "", "partial_binary_evaluation"], [104, 3, 1, "", "simplify_double_inversion"], [104, 5, 1, "", "type"]], "neurolang.solver.FirstOrderLogicSolver": [[104, 3, 1, "", "existential_predicate"], [104, 3, 1, "", "new_set"], [104, 3, 1, "", "quantifier_head_symbols_and_adom"], [104, 3, 1, "", "query_resolution"], [104, 5, 1, "", "type"], [104, 3, 1, "", "universal_predicate"]], "neurolang.solver.GenericSolver": [[104, 4, 1, "", "plural_type_name"], [104, 3, 1, "", "set_symbol_table"], [104, 5, 1, "", "type"]], "neurolang.solver.NumericOperationsSolver": [[104, 3, 1, "", "cast_binary"], [104, 3, 1, "", "cast_unary"], [104, 5, 1, "", "type"]], "neurolang.type_system": [[105, 6, 1, "", "NeuroLangTypeException"], [105, 2, 1, "", "Unknown"], [105, 1, 1, "", "get_args"], [105, 1, 1, "", "get_generic_type"], [105, 1, 1, "", "infer_type"], [105, 1, 1, "", "infer_type_builtins"], [105, 1, 1, "", "infer_type_iterables"], [105, 1, 1, "", "infer_type_mapping"], [105, 1, 1, "", "is_consistent"], [105, 1, 1, "", "is_leq_informative"], [105, 1, 1, "", "is_leq_informative_parameterized_right"], [105, 1, 1, "", "is_leq_informative_union"], [105, 1, 1, "", "is_parameterized"], [105, 1, 1, "", "is_parametrical"], [105, 1, 1, "", "is_type"], [105, 1, 1, "", "replace_type_variable"], [105, 1, 1, "", "replace_type_variable_fix_python36_37"], [105, 1, 1, "", "typing_callable_from_annotated_function"], [105, 1, 1, "", "unify_types"]], "neurolang.typed_symbol_table": [[106, 2, 1, "", "TypedSymbolTable"]], "neurolang.typed_symbol_table.TypedSymbolTable": [[106, 3, 1, "", "create_scope"], [106, 3, 1, "", "set_readonly"], [106, 3, 1, "", "symbols_by_type"], [106, 3, 1, "", "types"]], "neurolang.utils": [[107, 2, 1, "", "NamedRelationalAlgebraFrozenSet"], [107, 2, 1, "", "OrderedSet"], [107, 2, 1, "", "RelationalAlgebraFrozenSet"], [107, 2, 1, "", "RelationalAlgebraSet"], [107, 2, 1, "", "RelationalAlgebraStringExpression"], [108, 0, 0, "-", "data_manipulation"], [107, 1, 1, "", "log_performance"], [109, 0, 0, "-", "orderedset"], [110, 0, 0, "-", "relational_algebra_set"], [115, 0, 0, "-", "server"], [120, 0, 0, "-", "testing"], [122, 0, 0, "-", "various"]], "neurolang.utils.NamedRelationalAlgebraFrozenSet": [[107, 3, 1, "", "aggregate"], [107, 4, 1, "", "arity"], [107, 4, 1, "", "columns"], [107, 3, 1, "", "create_view_from"], [107, 3, 1, "", "cross_product"], [107, 3, 1, "", "dee"], [107, 3, 1, "", "dum"], [107, 3, 1, "", "equijoin"], [107, 3, 1, "", "explode"], [107, 3, 1, "", "extended_projection"], [107, 3, 1, "", "fetch_one"], [107, 3, 1, "", "groupby"], [107, 3, 1, "", "left_naturaljoin"], [107, 3, 1, "", "naturaljoin"], [107, 3, 1, "", "projection"], [107, 3, 1, "", "projection_to_unnamed"], [107, 3, 1, "", "rename_column"], [107, 3, 1, "", "rename_columns"], [107, 3, 1, "", "replace_null"], [107, 3, 1, "", "to_unnamed"]], "neurolang.utils.OrderedSet": [[107, 3, 1, "", "add"], [107, 3, 1, "", "copy"], [107, 3, 1, "", "discard"], [107, 3, 1, "", "index"], [107, 3, 1, "", "issubset"], [107, 3, 1, "", "issuperset"], [107, 3, 1, "", "replace"]], "neurolang.utils.RelationalAlgebraFrozenSet": [[107, 4, 1, "", "arity"], [107, 3, 1, "", "as_numpy_array"], [107, 3, 1, "", "as_pandas_dataframe"], [107, 4, 1, "", "columns"], [107, 3, 1, "", "copy"], [107, 3, 1, "", "create_view_from"], [107, 3, 1, "", "cross_product"], [107, 3, 1, "", "dee"], [107, 3, 1, "", "dum"], [107, 3, 1, "", "equijoin"], [107, 3, 1, "", "fetch_one"], [107, 3, 1, "", "groupby"], [107, 3, 1, "", "is_empty"], [107, 3, 1, "", "itervalues"], [107, 3, 1, "", "projection"], [107, 3, 1, "", "selection"], [107, 3, 1, "", "selection_columns"]], "neurolang.utils.RelationalAlgebraSet": [[107, 3, 1, "", "add"], [107, 3, 1, "", "discard"]], "neurolang.utils.data_manipulation": [[108, 1, 1, "", "parse_region_label_map"]], "neurolang.utils.orderedset": [[109, 2, 1, "", "OrderedSet"]], "neurolang.utils.orderedset.OrderedSet": [[109, 3, 1, "", "add"], [109, 3, 1, "", "copy"], [109, 3, 1, "", "discard"], [109, 3, 1, "", "index"], [109, 3, 1, "", "issubset"], [109, 3, 1, "", "issuperset"], [109, 3, 1, "", "replace"]], "neurolang.utils.relational_algebra_set": [[110, 2, 1, "", "NamedRelationalAlgebraFrozenSet"], [110, 2, 1, "", "RelationalAlgebraColumnInt"], [110, 2, 1, "", "RelationalAlgebraColumnStr"], [110, 2, 1, "", "RelationalAlgebraFrozenSet"], [110, 2, 1, "", "RelationalAlgebraSet"], [110, 2, 1, "", "RelationalAlgebraStringExpression"], [111, 0, 0, "-", "abstract"], [114, 0, 0, "-", "pandas"]], "neurolang.utils.relational_algebra_set.NamedRelationalAlgebraFrozenSet": [[110, 3, 1, "", "aggregate"], [110, 4, 1, "", "arity"], [110, 4, 1, "", "columns"], [110, 3, 1, "", "create_view_from"], [110, 3, 1, "", "cross_product"], [110, 3, 1, "", "dee"], [110, 3, 1, "", "dum"], [110, 3, 1, "", "equijoin"], [110, 3, 1, "", "explode"], [110, 3, 1, "", "extended_projection"], [110, 3, 1, "", "fetch_one"], [110, 3, 1, "", "groupby"], [110, 3, 1, "", "left_naturaljoin"], [110, 3, 1, "", "naturaljoin"], [110, 3, 1, "", "projection"], [110, 3, 1, "", "projection_to_unnamed"], [110, 3, 1, "", "rename_column"], [110, 3, 1, "", "rename_columns"], [110, 3, 1, "", "replace_null"], [110, 3, 1, "", "to_unnamed"]], "neurolang.utils.relational_algebra_set.RelationalAlgebraFrozenSet": [[110, 4, 1, "", "arity"], [110, 3, 1, "", "as_numpy_array"], [110, 3, 1, "", "as_pandas_dataframe"], [110, 4, 1, "", "columns"], [110, 3, 1, "", "copy"], [110, 3, 1, "", "create_view_from"], [110, 3, 1, "", "cross_product"], [110, 3, 1, "", "dee"], [110, 3, 1, "", "dum"], [110, 3, 1, "", "equijoin"], [110, 3, 1, "", "fetch_one"], [110, 3, 1, "", "groupby"], [110, 3, 1, "", "is_empty"], [110, 3, 1, "", "itervalues"], [110, 3, 1, "", "projection"], [110, 3, 1, "", "selection"], [110, 3, 1, "", "selection_columns"]], "neurolang.utils.relational_algebra_set.RelationalAlgebraSet": [[110, 3, 1, "", "add"], [110, 3, 1, "", "discard"]], "neurolang.utils.relational_algebra_set.abstract": [[111, 2, 1, "", "NamedRelationalAlgebraFrozenSet"], [111, 2, 1, "", "RelationalAlgebraColumn"], [111, 2, 1, "", "RelationalAlgebraColumnInt"], [111, 2, 1, "", "RelationalAlgebraColumnStr"], [111, 2, 1, "", "RelationalAlgebraFrozenSet"], [111, 2, 1, "", "RelationalAlgebraSet"]], "neurolang.utils.relational_algebra_set.abstract.NamedRelationalAlgebraFrozenSet": [[111, 3, 1, "", "aggregate"], [111, 4, 1, "", "arity"], [111, 4, 1, "", "columns"], [111, 3, 1, "", "cross_product"], [111, 3, 1, "", "dee"], [111, 3, 1, "", "dum"], [111, 3, 1, "", "equijoin"], [111, 3, 1, "", "explode"], [111, 3, 1, "", "extended_projection"], [111, 3, 1, "", "fetch_one"], [111, 3, 1, "", "groupby"], [111, 3, 1, "", "left_naturaljoin"], [111, 3, 1, "", "naturaljoin"], [111, 3, 1, "", "projection"], [111, 3, 1, "", "projection_to_unnamed"], [111, 3, 1, "", "rename_column"], [111, 3, 1, "", "rename_columns"], [111, 3, 1, "", "replace_null"], [111, 3, 1, "", "to_unnamed"]], "neurolang.utils.relational_algebra_set.abstract.RelationalAlgebraFrozenSet": [[111, 4, 1, "", "arity"], [111, 3, 1, "", "as_numpy_array"], [111, 4, 1, "", "columns"], [111, 3, 1, "", "copy"], [111, 3, 1, "", "create_view_from"], [111, 3, 1, "", "cross_product"], [111, 3, 1, "", "dee"], [111, 3, 1, "", "dum"], [111, 3, 1, "", "equijoin"], [111, 3, 1, "", "fetch_one"], [111, 3, 1, "", "groupby"], [111, 3, 1, "", "is_dee"], [111, 3, 1, "", "is_dum"], [111, 3, 1, "", "is_empty"], [111, 3, 1, "", "itervalues"], [111, 3, 1, "", "projection"], [111, 3, 1, "", "selection"], [111, 3, 1, "", "selection_columns"]], "neurolang.utils.relational_algebra_set.abstract.RelationalAlgebraSet": [[111, 3, 1, "", "add"], [111, 3, 1, "", "discard"]], "neurolang.utils.relational_algebra_set.pandas": [[114, 2, 1, "", "NamedRelationalAlgebraFrozenSet"], [114, 2, 1, "", "RelationalAlgebraFrozenSet"], [114, 2, 1, "", "RelationalAlgebraSet"], [114, 2, 1, "", "RelationalAlgebraStringExpression"]], "neurolang.utils.relational_algebra_set.pandas.NamedRelationalAlgebraFrozenSet": [[114, 3, 1, "", "aggregate"], [114, 4, 1, "", "arity"], [114, 4, 1, "", "columns"], [114, 3, 1, "", "create_view_from"], [114, 3, 1, "", "cross_product"], [114, 3, 1, "", "dee"], [114, 3, 1, "", "dum"], [114, 3, 1, "", "equijoin"], [114, 3, 1, "", "explode"], [114, 3, 1, "", "extended_projection"], [114, 3, 1, "", "fetch_one"], [114, 3, 1, "", "groupby"], [114, 3, 1, "", "left_naturaljoin"], [114, 3, 1, "", "naturaljoin"], [114, 3, 1, "", "projection"], [114, 3, 1, "", "projection_to_unnamed"], [114, 3, 1, "", "rename_column"], [114, 3, 1, "", "rename_columns"], [114, 3, 1, "", "replace_null"], [114, 3, 1, "", "to_unnamed"]], "neurolang.utils.relational_algebra_set.pandas.RelationalAlgebraFrozenSet": [[114, 4, 1, "", "arity"], [114, 3, 1, "", "as_numpy_array"], [114, 3, 1, "", "as_pandas_dataframe"], [114, 4, 1, "", "columns"], [114, 3, 1, "", "copy"], [114, 3, 1, "", "create_view_from"], [114, 3, 1, "", "cross_product"], [114, 3, 1, "", "dee"], [114, 3, 1, "", "dum"], [114, 3, 1, "", "equijoin"], [114, 3, 1, "", "fetch_one"], [114, 3, 1, "", "groupby"], [114, 3, 1, "", "is_empty"], [114, 3, 1, "", "itervalues"], [114, 3, 1, "", "projection"], [114, 3, 1, "", "selection"], [114, 3, 1, "", "selection_columns"]], "neurolang.utils.relational_algebra_set.pandas.RelationalAlgebraSet": [[114, 3, 1, "", "add"], [114, 3, 1, "", "discard"]], "neurolang.utils.server": [[117, 0, 0, "-", "engines"], [118, 0, 0, "-", "queries"], [119, 0, 0, "-", "responses"]], "neurolang.utils.server.engines": [[117, 2, 1, "", "DestrieuxEngineConf"], [117, 2, 1, "", "NeurolangEngineConfiguration"], [117, 2, 1, "", "NeurolangEngineSet"], [117, 2, 1, "", "NeurosynthEngineConf"], [117, 1, 1, "", "add_ploting_functions"], [117, 1, 1, "", "init_frontend"], [117, 1, 1, "", "load_destrieux_atlas"], [117, 1, 1, "", "load_neurosynth_data"]], "neurolang.utils.server.engines.DestrieuxEngineConf": [[117, 4, 1, "", "atlas"], [117, 3, 1, "", "create"], [117, 4, 1, "", "key"]], "neurolang.utils.server.engines.NeurolangEngineConfiguration": [[117, 4, 1, "", "atlas"], [117, 3, 1, "", "create"], [117, 4, 1, "", "key"]], "neurolang.utils.server.engines.NeurolangEngineSet": [[117, 3, 1, "", "add_engine"], [117, 3, 1, "", "engine"]], "neurolang.utils.server.engines.NeurosynthEngineConf": [[117, 4, 1, "", "atlas"], [117, 4, 1, "", "brain_mask"], [117, 3, 1, "", "create"], [117, 4, 1, "", "key"]], "neurolang.utils.server.queries": [[118, 2, 1, "", "LRUCacheDict"], [118, 2, 1, "", "NeurolangQueryManager"]], "neurolang.utils.server.queries.NeurolangQueryManager": [[118, 3, 1, "", "cancel"], [118, 3, 1, "", "get_atlas"], [118, 3, 1, "", "get_result"], [118, 3, 1, "", "get_symbols"], [118, 3, 1, "", "submit_query"]], "neurolang.utils.server.responses": [[119, 2, 1, "", "CustomQueryResultsEncoder"], [119, 2, 1, "", "QueryResults"], [119, 1, 1, "", "base64_encode_nifti"], [119, 1, 1, "", "base64_encode_spatial"], [119, 1, 1, "", "calculate_image_center"], [119, 1, 1, "", "serializeVBR"], [119, 1, 1, "", "serialize_mplt_thumbnails"]], "neurolang.utils.server.responses.CustomQueryResultsEncoder": [[119, 3, 1, "", "default"]], "neurolang.utils.server.responses.QueryResults": [[119, 3, 1, "", "get_function_metadata"], [119, 3, 1, "", "get_result_item"], [119, 3, 1, "", "get_result_item_columns"], [119, 3, 1, "", "get_result_item_values"], [119, 3, 1, "", "set_error_details"], [119, 3, 1, "", "set_results_details"]], "neurolang.utils.testing": [[121, 0, 0, "-", "logic"]], "neurolang.utils.testing.logic": [[121, 1, 1, "", "logic_exp_commutative_equal"]], "neurolang.utils.various": [[122, 1, 1, "", "log_performance"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"user": 0, "guid": 0, "end": 0, "frontend": [0, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "intermedi": [0, 4], "represent": [0, 4], "infrastructur": 0, "languag": [0, 2], "indic": 0, "tabl": 0, "peopl": 1, "fund": 1, "cite": 1, "neurolang": [1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "exampl": [2, 3, 4, 6, 7], "environ": [2, 7], "where": 3, "spatial": [3, 48], "prior": 3, "defin": 3, "base": [3, 4, 6, 61], "distanc": 3, "between": 3, "voxel": 3, "foci": 3, "coordin": 3, "meta": 3, "analysi": 3, "databas": 3, "datalog": [4, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 62, 126], "destrieux": [4, 5], "atla": [4, 5], "load": [4, 5], "from": 4, "nilearn": 4, "fact": 4, "list": 4, "set": 4, "interpret": 4, "region": [4, 61, 99], "manag": 4, "builtin": [4, 126], "ad": [4, 126], "lh": 4, "lr": 4, "construct": 4, "queri": [4, 5, 6, 7, 61, 62, 63, 118], "run": 4, "et": 5, "al": 5, "left": 5, "hemispher": 5, "implement": 6, "neurosynth": [6, 61], "data": 6, "prepar": 6, "probabilist": [6, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "logic": [6, 65, 66, 67, 68, 69, 121, 125, 126], "program": [6, 80, 125], "sulcal": 7, "identif": 7, "initialis": 7, "determinist": 7, "1": 7, "characteris": 7, "some": 7, "sulci": 7, "2": 7, "precentr": 7, "sulcu": 7, "3": 7, "superior": 7, "frontal": 7, "comput": 8, "time": 8, "packag": [10, 16, 20, 41, 44, 47, 51, 75, 105, 107, 110, 115, 120], "subpackag": [10, 16, 41, 44, 47, 51, 75, 105, 107, 115, 120], "submodul": [10, 20, 41, 44, 47, 51, 75, 107, 110, 115, 120], "cd_relat": 11, "modul": [11, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 106, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122], "neurolangdl": 12, "neurolangpdl": 13, "aabb_tre": 14, "command": [15, 124], "config": 16, "aggreg": [18, 125, 126], "basic_represent": 19, "chase": [20, 21, 22, 23, 24], "gener": 21, "mgu": 22, "negat": [23, 31], "relational_algebra": [24, 100, 101, 102], "constraints_represent": 25, "except": [26, 37, 55, 84], "expression_process": [27, 66, 85], "express": [28, 40, 63, 86], "instanc": 29, "magic_set": 30, "ontologies_pars": 32, "ontologies_rewrit": 33, "translate_to_named_ra": 34, "wrapped_collect": 35, "datalog_chas": 36, "expression_pattern_match": 38, "expression_walk": 39, "ast": 42, "ast_tatsu": 43, "natural_syntax": 45, "standard_syntax": 46, "sugar": [47, 48], "syntax_preprocess": 49, "deterministic_frontend": 50, "dr": [51, 52, 53, 54, 55, 56], "chart_pars": 52, "drs_builder": 53, "english_grammar": 54, "translate_to_dl": 56, "frontend_extens": 57, "neurosynth_util": 59, "probabilistic_frontend": 60, "query_resolut": [61, 91], "builder": [61, 62], "mixin": 61, "query_resolution_datalog": 62, "query_resolution_express": 63, "resolut": 63, "interval_algebra": 64, "horn_claus": 67, "transform": [68, 96], "unif": 69, "neurolang_compil": 71, "perior_tre": 72, "contain": 74, "cplogic": [75, 76, 77, 78, 79, 80, 81], "cplogic_to_gm": 76, "gm_provenance_solv": 77, "ground": 78, "problog_solv": 79, "test": [81, 120, 121], "dalvi_suciu_lift": 82, "distribut": 83, "magic_sets_process": 87, "ppdl": 88, "probabilistic_ra_util": 89, "probabilistic_semiring_solv": 90, "rank": 92, "shatter": 93, "small_dichotomy_theorem_based_solv": 94, "stratif": 95, "weighted_model_count": 97, "region_solv": 98, "optimis": 101, "relational_algebra_proven": 103, "solver": 104, "type_system": 105, "typed_symbol_t": 106, "util": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "data_manipul": 108, "orderedset": 109, "relational_algebra_set": [110, 111, 112, 113, 114], "abstract": 111, "dask_help": 112, "dask_sql": 113, "panda": 114, "server": [115, 116, 117, 118, 119], "app": 116, "engin": 117, "respons": 119, "variou": 122, "welcom": 123, "s": 123, "document": 123, "instal": 124, "window": 124, "first": [124, 125], "download": 124, "64": 124, "bit": 124, "anaconda": 124, "second": 124, "open": [124, 126], "prompt": 124, "third": 124, "ipython": 124, "mac": 124, "termin": 124, "linux": 124, "depend": 124, "To": 124, "develop": 124, "version": 124, "altern": 124, "backend": 124, "get": 125, "start": 125, "step": 125, "With": 125, "disjunct": 125, "programm": 126, "us": 126, "embed": 126, "python": 126, "includ": 126, "function": 126, "constraint": 126, "knowledg": 126, "rule": 126}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})